

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 14 16:31:52 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 12/02/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4520 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91                           	psect	smallconst
    92  000600                     __psmallconst:
    93                           	callstack 0
    94  000600  00                 	db	0
    95  000601                     _radio:
    96                           	callstack 0
    97  000601  0358               	dw	856
    98  000603  036F               	dw	879
    99  000605  0385               	dw	901
   100  000607  03C3               	dw	963
   101  000609  03ED               	dw	1005
   102  00060B  03F8               	dw	1016
   103  00060D  0432               	dw	1074
   104  00060F  0454               	dw	1108
   105  000611                     __end_of_radio:
   106                           	callstack 0
   107  000611  55                 	db	85
   108  000612  4C                 	db	76
   109  000613  44                 	db	68
   110  000614  52                 	db	82
   111  000615  53                 	db	83
   112  000616  58                 	db	88
   113  000617  41                 	db	65
   114  000618  42                 	db	66
   115  000619  59                 	db	89
   116  00061A  73                 	db	115
   117  00061B                     __end_of_charKey:
   118                           	callstack 0
   119  0000                     _TRISE	set	3990
   120  0000                     _TRISD	set	3989
   121  0000                     _TRISC	set	3988
   122  0000                     _TRISB	set	3987
   123  0000                     _TRISA	set	3986
   124  0000                     _PORTE	set	3972
   125  0000                     _PORTD	set	3971
   126  0000                     _PORTC	set	3970
   127  0000                     _PORTB	set	3969
   128  0000                     _PORTA	set	3968
   129  0000                     _ADRESL	set	4035
   130  0000                     _ADRESH	set	4036
   131  0000                     _ADCON2	set	4032
   132  0000                     _ADCON1	set	4033
   133  0000                     _ADCON0	set	4034
   134  00061B                     STR_1:
   135  00061B  20                 	db	32
   136  00061C  4D                 	db	77	;'M'
   137  00061D  61                 	db	97	;'a'
   138  00061E  72                 	db	114	;'r'
   139  00061F  63                 	db	99	;'c'
   140  000620  68                 	db	104	;'h'
   141  000621  61                 	db	97	;'a'
   142  000622  20                 	db	32
   143  000623  00                 	db	0
   144  000624                     STR_4:
   145  000624  52                 	db	82	;'R'
   146  000625  61                 	db	97	;'a'
   147  000626  64                 	db	100	;'d'
   148  000627  69                 	db	105	;'i'
   149  000628  6F                 	db	111	;'o'
   150  000629  3A                 	db	58	;':'
   151  00062A  20                 	db	32
   152  00062B  00                 	db	0
   153  00062C                     STR_2:
   154  00062C  20                 	db	32
   155  00062D  56                 	db	86	;'V'
   156  00062E  65                 	db	101	;'e'
   157  00062F  6C                 	db	108	;'l'
   158  000630  3A                 	db	58	;':'
   159  000631  20                 	db	32
   160  000632  00                 	db	0
   161  000633                     STR_3:
   162  000633  20                 	db	32
   163  000634  4B                 	db	75	;'K'
   164  000635  6D                 	db	109	;'m'
   165  000636  2F                 	db	47
   166  000637  68                 	db	104	;'h'
   167  000638  00                 	db	0
   168  000639                     STR_6:
   169  000639  56                 	db	86	;'V'
   170  00063A  6F                 	db	111	;'o'
   171  00063B  6C                 	db	108	;'l'
   172  00063C  3A                 	db	58	;':'
   173  00063D  00                 	db	0
   174  00063E                     STR_5:
   175  00063E  20                 	db	32
   176  00063F  20                 	db	32
   177  000640  20                 	db	32
   178  000641  00                 	db	0
   179  000642  00                 	db	0	; dummy byte at the end
   180  0000                     
   181                           ; #config settings
   182                           
   183                           	psect	cinit
   184  001E52                     __pcinit:
   185                           	callstack 0
   186  001E52                     start_initialization:
   187                           	callstack 0
   188  001E52                     __initialization:
   189                           	callstack 0
   190                           
   191                           ; Clear objects allocated to COMRAM (8 bytes)
   192  001E52  EE00  F03A         	lfsr	0,__pbssCOMRAM
   193  001E56  0E08               	movlw	8
   194  001E58                     clear_0:
   195  001E58  6AEE               	clrf	postinc0,c
   196  001E5A  06E8               	decf	wreg,f,c
   197  001E5C  E1FD               	bnz	clear_0
   198  001E5E                     end_of_initialization:
   199                           	callstack 0
   200  001E5E                     __end_of__initialization:
   201                           	callstack 0
   202  001E5E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   203  001E60  6EF8               	movwf	tblptru,c
   204  001E62  0100               	movlb	0
   205  001E64  EF22  F003         	goto	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMRAM
   208  00003A                     __pbssCOMRAM:
   209                           	callstack 0
   210  00003A                     kpDebounce@oldRead:
   211                           	callstack 0
   212  00003A                     	ds	2
   213  00003C                     kpDebounce@newRead:
   214                           	callstack 0
   215  00003C                     	ds	2
   216  00003E                     _keys:
   217                           	callstack 0
   218  00003E                     	ds	2
   219  000040                     _started:
   220                           	callstack 0
   221  000040                     	ds	1
   222  000041                     kpDebounce@tempo:
   223                           	callstack 0
   224  000041                     	ds	1
   225                           
   226                           	psect	cstackCOMRAM
   227  000001                     __pcstackCOMRAM:
   228                           	callstack 0
   229  000001                     ?_adcRead:
   230                           	callstack 0
   231  000001                     ?_kpRead:
   232                           	callstack 0
   233  000001                     ?_digitalRead:
   234                           	callstack 0
   235  000001                     adcRead@channel:
   236                           	callstack 0
   237  000001                     delayMicro@a:
   238                           	callstack 0
   239  000001                     delayMili@a:
   240                           	callstack 0
   241  000001                     digitalWrite@pin:
   242                           	callstack 0
   243  000001                     digitalRead@pin:
   244                           	callstack 0
   245  000001                     pinMode@pin:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x0
   249  000001                     	ds	2
   250  000003                     ??_digitalRead:
   251  000003                     ??_delayMili:
   252  000003                     adcRead@ADvalor:
   253                           	callstack 0
   254  000003                     digitalWrite@value:
   255                           	callstack 0
   256  000003                     pinMode@type:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0x2
   260  000003                     	ds	1
   261  000004                     delayMili@i:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x3
   265  000004                     	ds	1
   266  000005                     ??_pinMode:
   267  000005                     ??_digitalWrite:
   268                           
   269                           ; 1 bytes @ 0x4
   270  000005                     	ds	2
   271  000007                     i2c_write_bit@bit:
   272                           	callstack 0
   273  000007                     i2c_read_bit@bit:
   274                           	callstack 0
   275  000007                     rgbColor@led:
   276                           	callstack 0
   277  000007                     turnOn@led:
   278                           	callstack 0
   279  000007                     soWrite@value:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x6
   283  000007                     	ds	1
   284  000008                     i2cWriteByte@send_stop:
   285                           	callstack 0
   286  000008                     i2cReadByte@send_stop:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0x7
   290  000008                     	ds	1
   291  000009                     ??_i2cReadByte:
   292  000009                     i2cWriteByte@byte:
   293                           	callstack 0
   294  000009                     soWrite@i:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x8
   298  000009                     	ds	1
   299  00000A                     ??_kpDebounce:
   300  00000A                     i2cWriteByte@send_start:
   301                           	callstack 0
   302  00000A                     i2cReadByte@nack:
   303                           	callstack 0
   304  00000A                     pushNibble@rs:
   305                           	callstack 0
   306  00000A                     pushByte@rs:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x9
   310  00000A                     	ds	1
   311  00000B                     i2cWriteByte@bit:
   312                           	callstack 0
   313  00000B                     i2cReadByte@bit:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0xA
   317  00000B                     	ds	1
   318  00000C                     ??_pushByte:
   319  00000C                     pushNibble@value:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0xB
   323  00000C                     	ds	1
   324  00000D                     pushByte@value:
   325                           	callstack 0
   326  00000D                     i2cReadByte@byte:
   327                           	callstack 0
   328  00000D                     kpDebounce@i:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0xC
   332  00000D                     	ds	1
   333  00000E                     ?_dsReadData:
   334                           	callstack 0
   335  00000E                     lcdCommand@value:
   336                           	callstack 0
   337  00000E                     lcdChar@value:
   338                           	callstack 0
   339  00000E                     dsReadData@address:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0xD
   343  00000E                     	ds	1
   344  00000F                     lcdPosition@line:
   345                           	callstack 0
   346  00000F                     lcdString@msg:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0xE
   350  00000F                     	ds	1
   351  000010                     ??_dsReadData:
   352                           
   353                           ; 1 bytes @ 0xF
   354  000010                     	ds	1
   355  000011                     ??_lcdString:
   356  000011                     lcdPosition@col:
   357                           	callstack 0
   358  000011                     dsReadData@result:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x10
   362  000011                     	ds	2
   363  000013                     ?___awdiv:
   364                           	callstack 0
   365  000013                     lcdString@i:
   366                           	callstack 0
   367  000013                     ___awdiv@dividend:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x12
   371  000013                     	ds	2
   372  000015                     ___awdiv@divisor:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x14
   376  000015                     	ds	2
   377  000017                     ___awdiv@counter:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x16
   381  000017                     	ds	1
   382  000018                     ___awdiv@sign:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x17
   386  000018                     	ds	1
   387  000019                     ___awdiv@quotient:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x18
   391  000019                     	ds	2
   392  00001B                     ?___wmul:
   393                           	callstack 0
   394  00001B                     ___wmul@multiplier:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x1A
   398  00001B                     	ds	2
   399  00001D                     ___wmul@multiplicand:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x1C
   403  00001D                     	ds	2
   404  00001F                     ___wmul@product:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x1E
   408  00001F                     	ds	2
   409  000021                     ?_bcd2dec:
   410                           	callstack 0
   411  000021                     bcd2dec@value:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x20
   415  000021                     	ds	2
   416  000023                     ??_bcd2dec:
   417                           
   418                           ; 1 bytes @ 0x22
   419  000023                     	ds	2
   420  000025                     ?___awmod:
   421                           	callstack 0
   422  000025                     ___awmod@dividend:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x24
   426  000025                     	ds	2
   427  000027                     ___awmod@divisor:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x26
   431  000027                     	ds	2
   432  000029                     ___awmod@counter:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0x28
   436  000029                     	ds	1
   437  00002A                     ___awmod@sign:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x29
   441  00002A                     	ds	1
   442  00002B                     ??_main:
   443                           
   444                           ; 1 bytes @ 0x2A
   445  00002B                     	ds	5
   446  000030                     _main$1208:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x2F
   450  000030                     	ds	2
   451  000032                     main@painel:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x31
   455  000032                     	ds	1
   456  000033                     main@vol:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x32
   460  000033                     	ds	1
   461  000034                     main@i:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x33
   465  000034                     	ds	1
   466  000035                     main@fm:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x34
   470  000035                     	ds	1
   471  000036                     main@tecla:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x35
   475  000036                     	ds	1
   476  000037                     main@marcha:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x36
   480  000037                     	ds	1
   481  000038                     main@vel:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x37
   485  000038                     	ds	2
   486                           
   487 ;;
   488 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   489 ;;
   490 ;; *************** function _main *****************
   491 ;; Defined at:
   492 ;;		line 16 in file "main.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;  vel             2   55[COMRAM] int 
   497 ;;  marcha          1   54[COMRAM] unsigned char 
   498 ;;  tecla           1   53[COMRAM] unsigned char 
   499 ;;  fm              1   52[COMRAM] unsigned char 
   500 ;;  i               1   51[COMRAM] unsigned char 
   501 ;;  vol             1   50[COMRAM] unsigned char 
   502 ;;  painel          1   49[COMRAM] unsigned char 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   512 ;;      Params:         0       0       0       0       0       0       0
   513 ;;      Locals:        10       0       0       0       0       0       0
   514 ;;      Temps:          5       0       0       0       0       0       0
   515 ;;      Totals:        15       0       0       0       0       0       0
   516 ;;Total ram usage:       15 bytes
   517 ;; Hardware stack levels required when called: 6
   518 ;; This function calls:
   519 ;;		___awdiv
   520 ;;		___awmod
   521 ;;		_adcInit
   522 ;;		_adcRead
   523 ;;		_bcd2dec
   524 ;;		_dsReadData
   525 ;;		_kpDebounce
   526 ;;		_kpInit
   527 ;;		_kpRead
   528 ;;		_lcdChar
   529 ;;		_lcdInit
   530 ;;		_lcdPosition
   531 ;;		_lcdString
   532 ;;		_rgbColor
   533 ;;		_rgbInit
   534 ;;		_turnOn
   535 ;; This function is called by:
   536 ;;		Startup code after reset
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text0
   541  000644                     __ptext0:
   542                           	callstack 0
   543  000644                     _main:
   544                           	callstack 25
   545  000644                     
   546                           ;main.c: 18:     unsigned char marcha=0,tecla,i,painel=0,fm=0,vol=0;
   547  000644  0E00               	movlw	0
   548  000646  6E37               	movwf	main@marcha^0,c
   549  000648  0E00               	movlw	0
   550  00064A  6E32               	movwf	main@painel^0,c
   551  00064C  0E00               	movlw	0
   552  00064E  6E35               	movwf	main@fm^0,c
   553  000650  0E00               	movlw	0
   554  000652  6E33               	movwf	main@vol^0,c
   555  000654                     
   556                           ;main.c: 19:     rgbInit();
   557  000654  EC9D  F00D         	call	_rgbInit	;wreg free
   558  000658                     
   559                           ;main.c: 20:     kpInit();
   560  000658  EC30  F00E         	call	_kpInit	;wreg free
   561  00065C                     
   562                           ;main.c: 21:     adcInit();
   563  00065C  ECF1  F00C         	call	_adcInit	;wreg free
   564  000660                     
   565                           ;main.c: 22:     lcdInit();
   566  000660  EC86  F00A         	call	_lcdInit	;wreg free
   567  000664                     
   568                           ;main.c: 23:     turnOn(2);
   569  000664  0E00               	movlw	0
   570  000666  6E08               	movwf	(turnOn@led+1)^0,c
   571  000668  0E02               	movlw	2
   572  00066A  6E07               	movwf	turnOn@led^0,c
   573  00066C  EC90  F00B         	call	_turnOn	;wreg free
   574  000670                     l2349:
   575                           
   576                           ;main.c: 25:         vel = adcRead(1);
   577  000670  0E00               	movlw	0
   578  000672  6E02               	movwf	(adcRead@channel+1)^0,c
   579  000674  0E01               	movlw	1
   580  000676  6E01               	movwf	adcRead@channel^0,c
   581  000678  ECA2  F00C         	call	_adcRead	;wreg free
   582  00067C  C001  F038         	movff	?_adcRead,main@vel
   583  000680  C002  F039         	movff	?_adcRead+1,main@vel+1
   584  000684                     
   585                           ;main.c: 26:         if(vel<500)
   586  000684  BE39               	btfsc	(main@vel+1)^0,7,c
   587  000686  EF50  F003         	goto	u2350
   588  00068A  0EF4               	movlw	244
   589  00068C  5C38               	subwf	main@vel^0,w,c
   590  00068E  0E01               	movlw	1
   591  000690  5839               	subwfb	(main@vel+1)^0,w,c
   592  000692  B0D8               	btfsc	status,0,c
   593  000694  EF4E  F003         	goto	u2351
   594  000698  EF50  F003         	goto	u2350
   595  00069C                     u2351:
   596  00069C  EF58  F003         	goto	l2355
   597  0006A0                     u2350:
   598  0006A0                     
   599                           ;main.c: 27:            rgbColor(2);
   600  0006A0  0E00               	movlw	0
   601  0006A2  6E08               	movwf	(rgbColor@led+1)^0,c
   602  0006A4  0E02               	movlw	2
   603  0006A6  6E07               	movwf	rgbColor@led^0,c
   604  0006A8  ECE0  F00A         	call	_rgbColor	;wreg free
   605  0006AC  EF82  F003         	goto	l2363
   606  0006B0                     l2355:
   607  0006B0  BE39               	btfsc	(main@vel+1)^0,7,c
   608  0006B2  EF66  F003         	goto	u2360
   609  0006B6  0EBC               	movlw	188
   610  0006B8  5C38               	subwf	main@vel^0,w,c
   611  0006BA  0E02               	movlw	2
   612  0006BC  5839               	subwfb	(main@vel+1)^0,w,c
   613  0006BE  B0D8               	btfsc	status,0,c
   614  0006C0  EF64  F003         	goto	u2361
   615  0006C4  EF66  F003         	goto	u2360
   616  0006C8                     u2361:
   617  0006C8  EF6E  F003         	goto	l2359
   618  0006CC                     u2360:
   619  0006CC                     
   620                           ;main.c: 29:            rgbColor(3);
   621  0006CC  0E00               	movlw	0
   622  0006CE  6E08               	movwf	(rgbColor@led+1)^0,c
   623  0006D0  0E03               	movlw	3
   624  0006D2  6E07               	movwf	rgbColor@led^0,c
   625  0006D4  ECE0  F00A         	call	_rgbColor	;wreg free
   626  0006D8  EF82  F003         	goto	l2363
   627  0006DC                     l2359:
   628  0006DC  BE39               	btfsc	(main@vel+1)^0,7,c
   629  0006DE  EF7C  F003         	goto	u2370
   630  0006E2  0E84               	movlw	132
   631  0006E4  5C38               	subwf	main@vel^0,w,c
   632  0006E6  0E03               	movlw	3
   633  0006E8  5839               	subwfb	(main@vel+1)^0,w,c
   634  0006EA  B0D8               	btfsc	status,0,c
   635  0006EC  EF7A  F003         	goto	u2371
   636  0006F0  EF7C  F003         	goto	u2370
   637  0006F4                     u2371:
   638  0006F4  EF82  F003         	goto	l2363
   639  0006F8                     u2370:
   640  0006F8                     
   641                           ;main.c: 31:            rgbColor(1);
   642  0006F8  0E00               	movlw	0
   643  0006FA  6E08               	movwf	(rgbColor@led+1)^0,c
   644  0006FC  0E01               	movlw	1
   645  0006FE  6E07               	movwf	rgbColor@led^0,c
   646  000700  ECE0  F00A         	call	_rgbColor	;wreg free
   647  000704                     l2363:
   648                           
   649                           ;main.c: 32:         if(marcha==0)
   650  000704  5037               	movf	main@marcha^0,w,c
   651  000706  A4D8               	btfss	status,2,c
   652  000708  EF88  F003         	goto	u2381
   653  00070C  EF8A  F003         	goto	u2380
   654  000710                     u2381:
   655  000710  EF90  F003         	goto	l2367
   656  000714                     u2380:
   657  000714                     
   658                           ;main.c: 33:                 vel=0;
   659  000714  0E00               	movlw	0
   660  000716  6E39               	movwf	(main@vel+1)^0,c
   661  000718  0E00               	movlw	0
   662  00071A  6E38               	movwf	main@vel^0,c
   663  00071C  EF0C  F004         	goto	l2387
   664  000720                     l2367:
   665  000720  0437               	decf	main@marcha^0,w,c
   666  000722  A4D8               	btfss	status,2,c
   667  000724  EF96  F003         	goto	u2391
   668  000728  EF98  F003         	goto	u2390
   669  00072C                     u2391:
   670  00072C  EFA8  F003         	goto	l2371
   671  000730                     u2390:
   672  000730                     
   673                           ;main.c: 35:                 vel/=50;
   674  000730  C038  F013         	movff	main@vel,___awdiv@dividend
   675  000734  C039  F014         	movff	main@vel+1,___awdiv@dividend+1
   676  000738  0E00               	movlw	0
   677  00073A  6E16               	movwf	(___awdiv@divisor+1)^0,c
   678  00073C  0E32               	movlw	50
   679  00073E  6E15               	movwf	___awdiv@divisor^0,c
   680  000740  EC24  F00A         	call	___awdiv	;wreg free
   681  000744  C013  F038         	movff	?___awdiv,main@vel
   682  000748  C014  F039         	movff	?___awdiv+1,main@vel+1
   683  00074C  EF0C  F004         	goto	l2387
   684  000750                     l2371:
   685  000750  0E02               	movlw	2
   686  000752  1837               	xorwf	main@marcha^0,w,c
   687  000754  A4D8               	btfss	status,2,c
   688  000756  EFAF  F003         	goto	u2401
   689  00075A  EFB1  F003         	goto	u2400
   690  00075E                     u2401:
   691  00075E  EFC1  F003         	goto	l2375
   692  000762                     u2400:
   693  000762                     
   694                           ;main.c: 37:                 vel/=20;
   695  000762  C038  F013         	movff	main@vel,___awdiv@dividend
   696  000766  C039  F014         	movff	main@vel+1,___awdiv@dividend+1
   697  00076A  0E00               	movlw	0
   698  00076C  6E16               	movwf	(___awdiv@divisor+1)^0,c
   699  00076E  0E14               	movlw	20
   700  000770  6E15               	movwf	___awdiv@divisor^0,c
   701  000772  EC24  F00A         	call	___awdiv	;wreg free
   702  000776  C013  F038         	movff	?___awdiv,main@vel
   703  00077A  C014  F039         	movff	?___awdiv+1,main@vel+1
   704  00077E  EF0C  F004         	goto	l2387
   705  000782                     l2375:
   706  000782  0E03               	movlw	3
   707  000784  1837               	xorwf	main@marcha^0,w,c
   708  000786  A4D8               	btfss	status,2,c
   709  000788  EFC8  F003         	goto	u2411
   710  00078C  EFCA  F003         	goto	u2410
   711  000790                     u2411:
   712  000790  EFDA  F003         	goto	l2379
   713  000794                     u2410:
   714  000794                     
   715                           ;main.c: 39:                 vel/=10;
   716  000794  C038  F013         	movff	main@vel,___awdiv@dividend
   717  000798  C039  F014         	movff	main@vel+1,___awdiv@dividend+1
   718  00079C  0E00               	movlw	0
   719  00079E  6E16               	movwf	(___awdiv@divisor+1)^0,c
   720  0007A0  0E0A               	movlw	10
   721  0007A2  6E15               	movwf	___awdiv@divisor^0,c
   722  0007A4  EC24  F00A         	call	___awdiv	;wreg free
   723  0007A8  C013  F038         	movff	?___awdiv,main@vel
   724  0007AC  C014  F039         	movff	?___awdiv+1,main@vel+1
   725  0007B0  EF0C  F004         	goto	l2387
   726  0007B4                     l2379:
   727  0007B4  0E04               	movlw	4
   728  0007B6  1837               	xorwf	main@marcha^0,w,c
   729  0007B8  A4D8               	btfss	status,2,c
   730  0007BA  EFE1  F003         	goto	u2421
   731  0007BE  EFE3  F003         	goto	u2420
   732  0007C2                     u2421:
   733  0007C2  EFF3  F003         	goto	l2383
   734  0007C6                     u2420:
   735  0007C6                     
   736                           ;main.c: 41:                 vel/=7;
   737  0007C6  C038  F013         	movff	main@vel,___awdiv@dividend
   738  0007CA  C039  F014         	movff	main@vel+1,___awdiv@dividend+1
   739  0007CE  0E00               	movlw	0
   740  0007D0  6E16               	movwf	(___awdiv@divisor+1)^0,c
   741  0007D2  0E07               	movlw	7
   742  0007D4  6E15               	movwf	___awdiv@divisor^0,c
   743  0007D6  EC24  F00A         	call	___awdiv	;wreg free
   744  0007DA  C013  F038         	movff	?___awdiv,main@vel
   745  0007DE  C014  F039         	movff	?___awdiv+1,main@vel+1
   746  0007E2  EF0C  F004         	goto	l2387
   747  0007E6                     l2383:
   748  0007E6  0E05               	movlw	5
   749  0007E8  1837               	xorwf	main@marcha^0,w,c
   750  0007EA  A4D8               	btfss	status,2,c
   751  0007EC  EFFA  F003         	goto	u2431
   752  0007F0  EFFC  F003         	goto	u2430
   753  0007F4                     u2431:
   754  0007F4  EF0C  F004         	goto	l46
   755  0007F8                     u2430:
   756  0007F8                     
   757                           ;main.c: 43:                 vel/=5;
   758  0007F8  C038  F013         	movff	main@vel,___awdiv@dividend
   759  0007FC  C039  F014         	movff	main@vel+1,___awdiv@dividend+1
   760  000800  0E00               	movlw	0
   761  000802  6E16               	movwf	(___awdiv@divisor+1)^0,c
   762  000804  0E05               	movlw	5
   763  000806  6E15               	movwf	___awdiv@divisor^0,c
   764  000808  EC24  F00A         	call	___awdiv	;wreg free
   765  00080C  C013  F038         	movff	?___awdiv,main@vel
   766  000810  C014  F039         	movff	?___awdiv+1,main@vel+1
   767  000814  EF0C  F004         	goto	l2387
   768  000818                     l46:
   769  000818                     l2387:
   770                           
   771                           ;main.c: 44:         for(i=0;i<8;i++){
   772  000818  0E00               	movlw	0
   773  00081A  6E34               	movwf	main@i^0,c
   774  00081C                     l2393:
   775                           
   776                           ;main.c: 45:             kpDebounce();
   777  00081C  EC89  F009         	call	_kpDebounce	;wreg free
   778                           
   779                           ;main.c: 46:             if (kpRead() != tecla){
   780  000820  5036               	movf	main@tecla^0,w,c
   781  000822  6E2B               	movwf	??_main^0,c
   782  000824  6A2C               	clrf	(??_main+1)^0,c
   783  000826  EC34  F00F         	call	_kpRead	;wreg free
   784  00082A  502B               	movf	??_main^0,w,c
   785  00082C  1801               	xorwf	?_kpRead^0,w,c
   786  00082E  E109               	bnz	u2440
   787  000830  502C               	movf	(??_main+1)^0,w,c
   788  000832  1802               	xorwf	(?_kpRead+1)^0,w,c
   789  000834  B4D8               	btfsc	status,2,c
   790  000836  EF1F  F004         	goto	u2441
   791  00083A  EF21  F004         	goto	u2440
   792  00083E                     u2441:
   793  00083E  EF94  F004         	goto	l2445
   794  000842                     u2440:
   795  000842                     
   796                           ;main.c: 47:                 tecla = kpRead();
   797  000842  EC34  F00F         	call	_kpRead	;wreg free
   798  000846  5001               	movf	?_kpRead^0,w,c
   799  000848  6E36               	movwf	main@tecla^0,c
   800  00084A                     
   801                           ;main.c: 48:                     if (((tecla) & (1<<(5)))&&marcha!=5){
   802  00084A  AA36               	btfss	main@tecla^0,5,c
   803  00084C  EF2A  F004         	goto	u2451
   804  000850  EF2C  F004         	goto	u2450
   805  000854                     u2451:
   806  000854  EF38  F004         	goto	l2405
   807  000858                     u2450:
   808  000858  0E05               	movlw	5
   809  00085A  1837               	xorwf	main@marcha^0,w,c
   810  00085C  B4D8               	btfsc	status,2,c
   811  00085E  EF33  F004         	goto	u2461
   812  000862  EF35  F004         	goto	u2460
   813  000866                     u2461:
   814  000866  EF38  F004         	goto	l2405
   815  00086A                     u2460:
   816  00086A                     
   817                           ;main.c: 49:                         marcha++;
   818  00086A  2A37               	incf	main@marcha^0,f,c
   819  00086C                     
   820                           ;main.c: 50:                         painel=0;
   821  00086C  0E00               	movlw	0
   822  00086E  6E32               	movwf	main@painel^0,c
   823  000870                     l2405:
   824                           
   825                           ;main.c: 52:                     if (((tecla) & (1<<(7)))&&marcha!=0){
   826  000870  AE36               	btfss	main@tecla^0,7,c
   827  000872  EF3D  F004         	goto	u2471
   828  000876  EF3F  F004         	goto	u2470
   829  00087A                     u2471:
   830  00087A  EF4A  F004         	goto	l2413
   831  00087E                     u2470:
   832  00087E  5037               	movf	main@marcha^0,w,c
   833  000880  B4D8               	btfsc	status,2,c
   834  000882  EF45  F004         	goto	u2481
   835  000886  EF47  F004         	goto	u2480
   836  00088A                     u2481:
   837  00088A  EF4A  F004         	goto	l2413
   838  00088E                     u2480:
   839  00088E                     
   840                           ;main.c: 53:                         marcha--;
   841  00088E  0637               	decf	main@marcha^0,f,c
   842  000890                     
   843                           ;main.c: 54:                         painel=0;
   844  000890  0E00               	movlw	0
   845  000892  6E32               	movwf	main@painel^0,c
   846  000894                     l2413:
   847                           
   848                           ;main.c: 56:                     if (((tecla) & (1<<(1)))&&fm!=0){
   849  000894  A236               	btfss	main@tecla^0,1,c
   850  000896  EF4F  F004         	goto	u2491
   851  00089A  EF51  F004         	goto	u2490
   852  00089E                     u2491:
   853  00089E  EF5C  F004         	goto	l2421
   854  0008A2                     u2490:
   855  0008A2  5035               	movf	main@fm^0,w,c
   856  0008A4  B4D8               	btfsc	status,2,c
   857  0008A6  EF57  F004         	goto	u2501
   858  0008AA  EF59  F004         	goto	u2500
   859  0008AE                     u2501:
   860  0008AE  EF5C  F004         	goto	l2421
   861  0008B2                     u2500:
   862  0008B2                     
   863                           ;main.c: 57:                         fm--;
   864  0008B2  0635               	decf	main@fm^0,f,c
   865  0008B4                     
   866                           ;main.c: 58:                         painel=1;
   867  0008B4  0E01               	movlw	1
   868  0008B6  6E32               	movwf	main@painel^0,c
   869  0008B8                     l2421:
   870                           
   871                           ;main.c: 60:                     if (((tecla) & (1<<(3)))&&fm!=7){
   872  0008B8  A636               	btfss	main@tecla^0,3,c
   873  0008BA  EF61  F004         	goto	u2511
   874  0008BE  EF63  F004         	goto	u2510
   875  0008C2                     u2511:
   876  0008C2  EF6F  F004         	goto	l2429
   877  0008C6                     u2510:
   878  0008C6  0E07               	movlw	7
   879  0008C8  1835               	xorwf	main@fm^0,w,c
   880  0008CA  B4D8               	btfsc	status,2,c
   881  0008CC  EF6A  F004         	goto	u2521
   882  0008D0  EF6C  F004         	goto	u2520
   883  0008D4                     u2521:
   884  0008D4  EF6F  F004         	goto	l2429
   885  0008D8                     u2520:
   886  0008D8                     
   887                           ;main.c: 61:                         fm++;
   888  0008D8  2A35               	incf	main@fm^0,f,c
   889  0008DA                     
   890                           ;main.c: 62:                         painel=1;
   891  0008DA  0E01               	movlw	1
   892  0008DC  6E32               	movwf	main@painel^0,c
   893  0008DE                     l2429:
   894                           
   895                           ;main.c: 64:                     if (((tecla) & (1<<(0)))&&vol!=12){
   896  0008DE  A036               	btfss	main@tecla^0,0,c
   897  0008E0  EF74  F004         	goto	u2531
   898  0008E4  EF76  F004         	goto	u2530
   899  0008E8                     u2531:
   900  0008E8  EF82  F004         	goto	l2437
   901  0008EC                     u2530:
   902  0008EC  0E0C               	movlw	12
   903  0008EE  1833               	xorwf	main@vol^0,w,c
   904  0008F0  B4D8               	btfsc	status,2,c
   905  0008F2  EF7D  F004         	goto	u2541
   906  0008F6  EF7F  F004         	goto	u2540
   907  0008FA                     u2541:
   908  0008FA  EF82  F004         	goto	l2437
   909  0008FE                     u2540:
   910  0008FE                     
   911                           ;main.c: 65:                         vol++;
   912  0008FE  2A33               	incf	main@vol^0,f,c
   913  000900                     
   914                           ;main.c: 66:                         painel=1;
   915  000900  0E01               	movlw	1
   916  000902  6E32               	movwf	main@painel^0,c
   917  000904                     l2437:
   918                           
   919                           ;main.c: 68:                     if (((tecla) & (1<<(2)))&&vol!=0){
   920  000904  A436               	btfss	main@tecla^0,2,c
   921  000906  EF87  F004         	goto	u2551
   922  00090A  EF89  F004         	goto	u2550
   923  00090E                     u2551:
   924  00090E  EF94  F004         	goto	l2445
   925  000912                     u2550:
   926  000912  5033               	movf	main@vol^0,w,c
   927  000914  B4D8               	btfsc	status,2,c
   928  000916  EF8F  F004         	goto	u2561
   929  00091A  EF91  F004         	goto	u2560
   930  00091E                     u2561:
   931  00091E  EF94  F004         	goto	l2445
   932  000922                     u2560:
   933  000922                     
   934                           ;main.c: 69:                         vol--;
   935  000922  0633               	decf	main@vol^0,f,c
   936  000924                     
   937                           ;main.c: 70:                         painel=1;
   938  000924  0E01               	movlw	1
   939  000926  6E32               	movwf	main@painel^0,c
   940  000928                     l2445:
   941                           
   942                           ;main.c: 73:         }
   943  000928  2A34               	incf	main@i^0,f,c
   944  00092A  0E07               	movlw	7
   945  00092C  6434               	cpfsgt	main@i^0,c
   946  00092E  EF9B  F004         	goto	u2571
   947  000932  EF9D  F004         	goto	u2570
   948  000936                     u2571:
   949  000936  EF0E  F004         	goto	l2393
   950  00093A                     u2570:
   951  00093A  EF6F  F006         	goto	l2515
   952  00093E                     l2449:
   953                           
   954                           ;main.c: 76:                 lcdPosition(0,0);
   955  00093E  0E00               	movlw	0
   956  000940  6E10               	movwf	(lcdPosition@line+1)^0,c
   957  000942  0E00               	movlw	0
   958  000944  6E0F               	movwf	lcdPosition@line^0,c
   959  000946  0E00               	movlw	0
   960  000948  6E12               	movwf	(lcdPosition@col+1)^0,c
   961  00094A  0E00               	movlw	0
   962  00094C  6E11               	movwf	lcdPosition@col^0,c
   963  00094E  ECDB  F00D         	call	_lcdPosition	;wreg free
   964  000952                     
   965                           ;main.c: 77:                 lcdChar(((bcd2dec(dsReadData(2)& 0x5f))/10%10)+48);
   966  000952  0E00               	movlw	0
   967  000954  6E0F               	movwf	(dsReadData@address+1)^0,c
   968  000956  0E02               	movlw	2
   969  000958  6E0E               	movwf	dsReadData@address^0,c
   970  00095A  EC15  F00D         	call	_dsReadData	;wreg free
   971  00095E  0E5F               	movlw	95
   972  000960  140E               	andwf	?_dsReadData^0,w,c
   973  000962  6E21               	movwf	bcd2dec@value^0,c
   974  000964  6A22               	clrf	(bcd2dec@value+1)^0,c
   975  000966  EC7C  F00D         	call	_bcd2dec	;wreg free
   976  00096A  C021  F030         	movff	?_bcd2dec,_main$1208
   977  00096E  C022  F031         	movff	?_bcd2dec+1,_main$1208+1
   978  000972                     
   979                           ;main.c: 77:                 lcdChar(((bcd2dec(dsReadData(2)& 0x5f))/10%10)+48);
   980  000972  0E00               	movlw	0
   981  000974  6E16               	movwf	(___awdiv@divisor+1)^0,c
   982  000976  0E0A               	movlw	10
   983  000978  6E15               	movwf	___awdiv@divisor^0,c
   984  00097A  C030  F013         	movff	_main$1208,___awdiv@dividend
   985  00097E  C031  F014         	movff	_main$1208+1,___awdiv@dividend+1
   986  000982  EC24  F00A         	call	___awdiv	;wreg free
   987  000986  C013  F025         	movff	?___awdiv,___awmod@dividend
   988  00098A  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
   989  00098E  0E00               	movlw	0
   990  000990  6E28               	movwf	(___awmod@divisor+1)^0,c
   991  000992  0E0A               	movlw	10
   992  000994  6E27               	movwf	___awmod@divisor^0,c
   993  000996  EC38  F00B         	call	___awmod	;wreg free
   994  00099A  5025               	movf	?___awmod^0,w,c
   995  00099C  0F30               	addlw	48
   996  00099E  EC0B  F00F         	call	_lcdChar
   997                           
   998                           ;main.c: 78:                 lcdChar(((bcd2dec(dsReadData(2)& 0x5f))%10)+48);
   999  0009A2  0E00               	movlw	0
  1000  0009A4  6E0F               	movwf	(dsReadData@address+1)^0,c
  1001  0009A6  0E02               	movlw	2
  1002  0009A8  6E0E               	movwf	dsReadData@address^0,c
  1003  0009AA  EC15  F00D         	call	_dsReadData	;wreg free
  1004  0009AE  0E5F               	movlw	95
  1005  0009B0  140E               	andwf	?_dsReadData^0,w,c
  1006  0009B2  6E21               	movwf	bcd2dec@value^0,c
  1007  0009B4  6A22               	clrf	(bcd2dec@value+1)^0,c
  1008  0009B6  EC7C  F00D         	call	_bcd2dec	;wreg free
  1009  0009BA  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  1010  0009BE  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  1011  0009C2  0E00               	movlw	0
  1012  0009C4  6E28               	movwf	(___awmod@divisor+1)^0,c
  1013  0009C6  0E0A               	movlw	10
  1014  0009C8  6E27               	movwf	___awmod@divisor^0,c
  1015  0009CA  EC38  F00B         	call	___awmod	;wreg free
  1016  0009CE  5025               	movf	?___awmod^0,w,c
  1017  0009D0  0F30               	addlw	48
  1018  0009D2  EC0B  F00F         	call	_lcdChar
  1019  0009D6                     
  1020                           ;main.c: 79:                 lcdChar(':');
  1021  0009D6  0E3A               	movlw	58
  1022  0009D8  EC0B  F00F         	call	_lcdChar
  1023  0009DC                     
  1024                           ;main.c: 80:                 lcdChar(((bcd2dec(dsReadData(1)& 0x7f))/10%10)+48);
  1025  0009DC  0E00               	movlw	0
  1026  0009DE  6E0F               	movwf	(dsReadData@address+1)^0,c
  1027  0009E0  0E01               	movlw	1
  1028  0009E2  6E0E               	movwf	dsReadData@address^0,c
  1029  0009E4  EC15  F00D         	call	_dsReadData	;wreg free
  1030  0009E8  0E7F               	movlw	127
  1031  0009EA  140E               	andwf	?_dsReadData^0,w,c
  1032  0009EC  6E21               	movwf	bcd2dec@value^0,c
  1033  0009EE  6A22               	clrf	(bcd2dec@value+1)^0,c
  1034  0009F0  EC7C  F00D         	call	_bcd2dec	;wreg free
  1035  0009F4  C021  F030         	movff	?_bcd2dec,_main$1208
  1036  0009F8  C022  F031         	movff	?_bcd2dec+1,_main$1208+1
  1037                           
  1038                           ;main.c: 80:                 lcdChar(((bcd2dec(dsReadData(1)& 0x7f))/10%10)+48);
  1039  0009FC  0E00               	movlw	0
  1040  0009FE  6E16               	movwf	(___awdiv@divisor+1)^0,c
  1041  000A00  0E0A               	movlw	10
  1042  000A02  6E15               	movwf	___awdiv@divisor^0,c
  1043  000A04  C030  F013         	movff	_main$1208,___awdiv@dividend
  1044  000A08  C031  F014         	movff	_main$1208+1,___awdiv@dividend+1
  1045  000A0C  EC24  F00A         	call	___awdiv	;wreg free
  1046  000A10  C013  F025         	movff	?___awdiv,___awmod@dividend
  1047  000A14  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  1048  000A18  0E00               	movlw	0
  1049  000A1A  6E28               	movwf	(___awmod@divisor+1)^0,c
  1050  000A1C  0E0A               	movlw	10
  1051  000A1E  6E27               	movwf	___awmod@divisor^0,c
  1052  000A20  EC38  F00B         	call	___awmod	;wreg free
  1053  000A24  5025               	movf	?___awmod^0,w,c
  1054  000A26  0F30               	addlw	48
  1055  000A28  EC0B  F00F         	call	_lcdChar
  1056  000A2C                     
  1057                           ;main.c: 81:                 lcdChar(((bcd2dec(dsReadData(1)& 0x7f))%10)+48);
  1058  000A2C  0E00               	movlw	0
  1059  000A2E  6E0F               	movwf	(dsReadData@address+1)^0,c
  1060  000A30  0E01               	movlw	1
  1061  000A32  6E0E               	movwf	dsReadData@address^0,c
  1062  000A34  EC15  F00D         	call	_dsReadData	;wreg free
  1063  000A38  0E7F               	movlw	127
  1064  000A3A  140E               	andwf	?_dsReadData^0,w,c
  1065  000A3C  6E21               	movwf	bcd2dec@value^0,c
  1066  000A3E  6A22               	clrf	(bcd2dec@value+1)^0,c
  1067  000A40  EC7C  F00D         	call	_bcd2dec	;wreg free
  1068  000A44  C021  F025         	movff	?_bcd2dec,___awmod@dividend
  1069  000A48  C022  F026         	movff	?_bcd2dec+1,___awmod@dividend+1
  1070  000A4C  0E00               	movlw	0
  1071  000A4E  6E28               	movwf	(___awmod@divisor+1)^0,c
  1072  000A50  0E0A               	movlw	10
  1073  000A52  6E27               	movwf	___awmod@divisor^0,c
  1074  000A54  EC38  F00B         	call	___awmod	;wreg free
  1075  000A58  5025               	movf	?___awmod^0,w,c
  1076  000A5A  0F30               	addlw	48
  1077  000A5C  EC0B  F00F         	call	_lcdChar
  1078  000A60                     
  1079                           ;main.c: 82:                 lcdPosition(0,5);
  1080  000A60  0E00               	movlw	0
  1081  000A62  6E10               	movwf	(lcdPosition@line+1)^0,c
  1082  000A64  0E00               	movlw	0
  1083  000A66  6E0F               	movwf	lcdPosition@line^0,c
  1084  000A68  0E00               	movlw	0
  1085  000A6A  6E12               	movwf	(lcdPosition@col+1)^0,c
  1086  000A6C  0E05               	movlw	5
  1087  000A6E  6E11               	movwf	lcdPosition@col^0,c
  1088  000A70  ECDB  F00D         	call	_lcdPosition	;wreg free
  1089  000A74                     
  1090                           ;main.c: 83:                 lcdString(" Marcha ");
  1091  000A74  0E1B               	movlw	low STR_1
  1092  000A76  6E0F               	movwf	lcdString@msg^0,c
  1093  000A78  0E06               	movlw	high STR_1
  1094  000A7A  6E10               	movwf	(lcdString@msg+1)^0,c
  1095  000A7C  EC4D  F00C         	call	_lcdString	;wreg free
  1096  000A80                     
  1097                           ;main.c: 84:                 lcdChar(marcha+48);
  1098  000A80  5037               	movf	main@marcha^0,w,c
  1099  000A82  0F30               	addlw	48
  1100  000A84  EC0B  F00F         	call	_lcdChar
  1101  000A88                     
  1102                           ;main.c: 85:                 lcdPosition(1,0);
  1103  000A88  0E00               	movlw	0
  1104  000A8A  6E10               	movwf	(lcdPosition@line+1)^0,c
  1105  000A8C  0E01               	movlw	1
  1106  000A8E  6E0F               	movwf	lcdPosition@line^0,c
  1107  000A90  0E00               	movlw	0
  1108  000A92  6E12               	movwf	(lcdPosition@col+1)^0,c
  1109  000A94  0E00               	movlw	0
  1110  000A96  6E11               	movwf	lcdPosition@col^0,c
  1111  000A98  ECDB  F00D         	call	_lcdPosition	;wreg free
  1112  000A9C                     
  1113                           ;main.c: 86:                 lcdString(" Vel: ");
  1114  000A9C  0E2C               	movlw	low STR_2
  1115  000A9E  6E0F               	movwf	lcdString@msg^0,c
  1116  000AA0  0E06               	movlw	high STR_2
  1117  000AA2  6E10               	movwf	(lcdString@msg+1)^0,c
  1118  000AA4  EC4D  F00C         	call	_lcdString	;wreg free
  1119  000AA8                     
  1120                           ;main.c: 87:                 lcdChar((vel/100%10)+48);
  1121  000AA8  0E00               	movlw	0
  1122  000AAA  6E16               	movwf	(___awdiv@divisor+1)^0,c
  1123  000AAC  0E64               	movlw	100
  1124  000AAE  6E15               	movwf	___awdiv@divisor^0,c
  1125  000AB0  C038  F013         	movff	main@vel,___awdiv@dividend
  1126  000AB4  C039  F014         	movff	main@vel+1,___awdiv@dividend+1
  1127  000AB8  EC24  F00A         	call	___awdiv	;wreg free
  1128  000ABC  C013  F025         	movff	?___awdiv,___awmod@dividend
  1129  000AC0  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  1130  000AC4  0E00               	movlw	0
  1131  000AC6  6E28               	movwf	(___awmod@divisor+1)^0,c
  1132  000AC8  0E0A               	movlw	10
  1133  000ACA  6E27               	movwf	___awmod@divisor^0,c
  1134  000ACC  EC38  F00B         	call	___awmod	;wreg free
  1135  000AD0  5025               	movf	?___awmod^0,w,c
  1136  000AD2  0F30               	addlw	48
  1137  000AD4  EC0B  F00F         	call	_lcdChar
  1138  000AD8                     
  1139                           ;main.c: 88:                 lcdChar((vel/10%10)+48);
  1140  000AD8  0E00               	movlw	0
  1141  000ADA  6E16               	movwf	(___awdiv@divisor+1)^0,c
  1142  000ADC  0E0A               	movlw	10
  1143  000ADE  6E15               	movwf	___awdiv@divisor^0,c
  1144  000AE0  C038  F013         	movff	main@vel,___awdiv@dividend
  1145  000AE4  C039  F014         	movff	main@vel+1,___awdiv@dividend+1
  1146  000AE8  EC24  F00A         	call	___awdiv	;wreg free
  1147  000AEC  C013  F025         	movff	?___awdiv,___awmod@dividend
  1148  000AF0  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  1149  000AF4  0E00               	movlw	0
  1150  000AF6  6E28               	movwf	(___awmod@divisor+1)^0,c
  1151  000AF8  0E0A               	movlw	10
  1152  000AFA  6E27               	movwf	___awmod@divisor^0,c
  1153  000AFC  EC38  F00B         	call	___awmod	;wreg free
  1154  000B00  5025               	movf	?___awmod^0,w,c
  1155  000B02  0F30               	addlw	48
  1156  000B04  EC0B  F00F         	call	_lcdChar
  1157  000B08                     
  1158                           ;main.c: 89:                 lcdChar((vel%10)+48);
  1159  000B08  C038  F025         	movff	main@vel,___awmod@dividend
  1160  000B0C  C039  F026         	movff	main@vel+1,___awmod@dividend+1
  1161  000B10  0E00               	movlw	0
  1162  000B12  6E28               	movwf	(___awmod@divisor+1)^0,c
  1163  000B14  0E0A               	movlw	10
  1164  000B16  6E27               	movwf	___awmod@divisor^0,c
  1165  000B18  EC38  F00B         	call	___awmod	;wreg free
  1166  000B1C  5025               	movf	?___awmod^0,w,c
  1167  000B1E  0F30               	addlw	48
  1168  000B20  EC0B  F00F         	call	_lcdChar
  1169  000B24                     
  1170                           ;main.c: 90:                 lcdString(" Km/h");
  1171  000B24  0E33               	movlw	low STR_3
  1172  000B26  6E0F               	movwf	lcdString@msg^0,c
  1173  000B28  0E06               	movlw	high STR_3
  1174  000B2A  6E10               	movwf	(lcdString@msg+1)^0,c
  1175  000B2C  EC4D  F00C         	call	_lcdString	;wreg free
  1176                           
  1177                           ;main.c: 91:                 break;
  1178  000B30  EF38  F003         	goto	l2349
  1179  000B34                     l2479:
  1180                           
  1181                           ;main.c: 93:                 lcdPosition(0,0);
  1182  000B34  0E00               	movlw	0
  1183  000B36  6E10               	movwf	(lcdPosition@line+1)^0,c
  1184  000B38  0E00               	movlw	0
  1185  000B3A  6E0F               	movwf	lcdPosition@line^0,c
  1186  000B3C  0E00               	movlw	0
  1187  000B3E  6E12               	movwf	(lcdPosition@col+1)^0,c
  1188  000B40  0E00               	movlw	0
  1189  000B42  6E11               	movwf	lcdPosition@col^0,c
  1190  000B44  ECDB  F00D         	call	_lcdPosition	;wreg free
  1191  000B48                     
  1192                           ;main.c: 94:                 lcdString("Radio: ");
  1193  000B48  0E24               	movlw	low STR_4
  1194  000B4A  6E0F               	movwf	lcdString@msg^0,c
  1195  000B4C  0E06               	movlw	high STR_4
  1196  000B4E  6E10               	movwf	(lcdString@msg+1)^0,c
  1197  000B50  EC4D  F00C         	call	_lcdString	;wreg free
  1198  000B54                     
  1199                           ;main.c: 95:                 lcdChar((radio[fm]/1000%10)+48);
  1200  000B54  0E03               	movlw	3
  1201  000B56  6E16               	movwf	(___awdiv@divisor+1)^0,c
  1202  000B58  0EE8               	movlw	232
  1203  000B5A  6E15               	movwf	___awdiv@divisor^0,c
  1204  000B5C  5035               	movf	main@fm^0,w,c
  1205  000B5E  0D02               	mullw	2
  1206  000B60  0E01               	movlw	low _radio
  1207  000B62  24F3               	addwf	243,w,c
  1208  000B64  6EF6               	movwf	tblptrl,c
  1209  000B66  0E06               	movlw	high _radio
  1210  000B68  20F4               	addwfc	244,w,c
  1211  000B6A  6EF7               	movwf	tblptrh,c
  1212  000B6C                     	if	0	;There are less than 3 active tblptr bytes
  1213  000B6C                     	endif
  1214  000B6C  0009               	tblrd		*+
  1215  000B6E  CFF5 F013          	movff	tablat,___awdiv@dividend
  1216  000B72  000A               	tblrd		*-
  1217  000B74  CFF5 F014          	movff	tablat,___awdiv@dividend+1
  1218  000B78  EC24  F00A         	call	___awdiv	;wreg free
  1219  000B7C  C013  F025         	movff	?___awdiv,___awmod@dividend
  1220  000B80  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  1221  000B84  0E00               	movlw	0
  1222  000B86  6E28               	movwf	(___awmod@divisor+1)^0,c
  1223  000B88  0E0A               	movlw	10
  1224  000B8A  6E27               	movwf	___awmod@divisor^0,c
  1225  000B8C  EC38  F00B         	call	___awmod	;wreg free
  1226  000B90  5025               	movf	?___awmod^0,w,c
  1227  000B92  0F30               	addlw	48
  1228  000B94  EC0B  F00F         	call	_lcdChar
  1229  000B98                     
  1230                           ;main.c: 96:                 lcdChar((radio[fm]/100%10)+48);
  1231  000B98  0E00               	movlw	0
  1232  000B9A  6E16               	movwf	(___awdiv@divisor+1)^0,c
  1233  000B9C  0E64               	movlw	100
  1234  000B9E  6E15               	movwf	___awdiv@divisor^0,c
  1235  000BA0  5035               	movf	main@fm^0,w,c
  1236  000BA2  0D02               	mullw	2
  1237  000BA4  0E01               	movlw	low _radio
  1238  000BA6  24F3               	addwf	243,w,c
  1239  000BA8  6EF6               	movwf	tblptrl,c
  1240  000BAA  0E06               	movlw	high _radio
  1241  000BAC  20F4               	addwfc	244,w,c
  1242  000BAE  6EF7               	movwf	tblptrh,c
  1243  000BB0                     	if	0	;There are less than 3 active tblptr bytes
  1244  000BB0                     	endif
  1245  000BB0  0009               	tblrd		*+
  1246  000BB2  CFF5 F013          	movff	tablat,___awdiv@dividend
  1247  000BB6  000A               	tblrd		*-
  1248  000BB8  CFF5 F014          	movff	tablat,___awdiv@dividend+1
  1249  000BBC  EC24  F00A         	call	___awdiv	;wreg free
  1250  000BC0  C013  F025         	movff	?___awdiv,___awmod@dividend
  1251  000BC4  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  1252  000BC8  0E00               	movlw	0
  1253  000BCA  6E28               	movwf	(___awmod@divisor+1)^0,c
  1254  000BCC  0E0A               	movlw	10
  1255  000BCE  6E27               	movwf	___awmod@divisor^0,c
  1256  000BD0  EC38  F00B         	call	___awmod	;wreg free
  1257  000BD4  5025               	movf	?___awmod^0,w,c
  1258  000BD6  0F30               	addlw	48
  1259  000BD8  EC0B  F00F         	call	_lcdChar
  1260  000BDC                     
  1261                           ;main.c: 97:                 lcdChar((radio[fm]/10%10)+48);
  1262  000BDC  0E00               	movlw	0
  1263  000BDE  6E16               	movwf	(___awdiv@divisor+1)^0,c
  1264  000BE0  0E0A               	movlw	10
  1265  000BE2  6E15               	movwf	___awdiv@divisor^0,c
  1266  000BE4  5035               	movf	main@fm^0,w,c
  1267  000BE6  0D02               	mullw	2
  1268  000BE8  0E01               	movlw	low _radio
  1269  000BEA  24F3               	addwf	243,w,c
  1270  000BEC  6EF6               	movwf	tblptrl,c
  1271  000BEE  0E06               	movlw	high _radio
  1272  000BF0  20F4               	addwfc	244,w,c
  1273  000BF2  6EF7               	movwf	tblptrh,c
  1274  000BF4                     	if	0	;There are less than 3 active tblptr bytes
  1275  000BF4                     	endif
  1276  000BF4  0009               	tblrd		*+
  1277  000BF6  CFF5 F013          	movff	tablat,___awdiv@dividend
  1278  000BFA  000A               	tblrd		*-
  1279  000BFC  CFF5 F014          	movff	tablat,___awdiv@dividend+1
  1280  000C00  EC24  F00A         	call	___awdiv	;wreg free
  1281  000C04  C013  F025         	movff	?___awdiv,___awmod@dividend
  1282  000C08  C014  F026         	movff	?___awdiv+1,___awmod@dividend+1
  1283  000C0C  0E00               	movlw	0
  1284  000C0E  6E28               	movwf	(___awmod@divisor+1)^0,c
  1285  000C10  0E0A               	movlw	10
  1286  000C12  6E27               	movwf	___awmod@divisor^0,c
  1287  000C14  EC38  F00B         	call	___awmod	;wreg free
  1288  000C18  5025               	movf	?___awmod^0,w,c
  1289  000C1A  0F30               	addlw	48
  1290  000C1C  EC0B  F00F         	call	_lcdChar
  1291  000C20                     
  1292                           ;main.c: 98:                 lcdChar(',');
  1293  000C20  0E2C               	movlw	44
  1294  000C22  EC0B  F00F         	call	_lcdChar
  1295  000C26                     
  1296                           ;main.c: 99:                 lcdChar((radio[fm]%10)+48);
  1297  000C26  5035               	movf	main@fm^0,w,c
  1298  000C28  0D02               	mullw	2
  1299  000C2A  0E01               	movlw	low _radio
  1300  000C2C  24F3               	addwf	243,w,c
  1301  000C2E  6EF6               	movwf	tblptrl,c
  1302  000C30  0E06               	movlw	high _radio
  1303  000C32  20F4               	addwfc	244,w,c
  1304  000C34  6EF7               	movwf	tblptrh,c
  1305  000C36                     	if	0	;There are less than 3 active tblptr bytes
  1306  000C36                     	endif
  1307  000C36  0009               	tblrd		*+
  1308  000C38  CFF5 F025          	movff	tablat,___awmod@dividend
  1309  000C3C  000A               	tblrd		*-
  1310  000C3E  CFF5 F026          	movff	tablat,___awmod@dividend+1
  1311  000C42  0E00               	movlw	0
  1312  000C44  6E28               	movwf	(___awmod@divisor+1)^0,c
  1313  000C46  0E0A               	movlw	10
  1314  000C48  6E27               	movwf	___awmod@divisor^0,c
  1315  000C4A  EC38  F00B         	call	___awmod	;wreg free
  1316  000C4E  5025               	movf	?___awmod^0,w,c
  1317  000C50  0F30               	addlw	48
  1318  000C52  EC0B  F00F         	call	_lcdChar
  1319                           
  1320                           ;main.c: 100:                 lcdString("   ");
  1321  000C56  0E3E               	movlw	low STR_5
  1322  000C58  6E0F               	movwf	lcdString@msg^0,c
  1323  000C5A  0E06               	movlw	high STR_5
  1324  000C5C  6E10               	movwf	(lcdString@msg+1)^0,c
  1325  000C5E  EC4D  F00C         	call	_lcdString	;wreg free
  1326  000C62                     
  1327                           ;main.c: 101:                 lcdPosition(1,0);
  1328  000C62  0E00               	movlw	0
  1329  000C64  6E10               	movwf	(lcdPosition@line+1)^0,c
  1330  000C66  0E01               	movlw	1
  1331  000C68  6E0F               	movwf	lcdPosition@line^0,c
  1332  000C6A  0E00               	movlw	0
  1333  000C6C  6E12               	movwf	(lcdPosition@col+1)^0,c
  1334  000C6E  0E00               	movlw	0
  1335  000C70  6E11               	movwf	lcdPosition@col^0,c
  1336  000C72  ECDB  F00D         	call	_lcdPosition	;wreg free
  1337  000C76                     
  1338                           ;main.c: 102:                 lcdString("Vol:");
  1339  000C76  0E39               	movlw	low STR_6
  1340  000C78  6E0F               	movwf	lcdString@msg^0,c
  1341  000C7A  0E06               	movlw	high STR_6
  1342  000C7C  6E10               	movwf	(lcdString@msg+1)^0,c
  1343  000C7E  EC4D  F00C         	call	_lcdString	;wreg free
  1344  000C82                     
  1345                           ;main.c: 103:                 for(i=0;i<12;i++)
  1346  000C82  0E00               	movlw	0
  1347  000C84  6E34               	movwf	main@i^0,c
  1348  000C86                     l2503:
  1349                           
  1350                           ;main.c: 104:                     if(i<vol+1)
  1351  000C86  5033               	movf	main@vol^0,w,c
  1352  000C88  6E2B               	movwf	??_main^0,c
  1353  000C8A  6A2C               	clrf	(??_main+1)^0,c
  1354  000C8C  0E01               	movlw	1
  1355  000C8E  262B               	addwf	??_main^0,f,c
  1356  000C90  0E00               	movlw	0
  1357  000C92  222C               	addwfc	(??_main+1)^0,f,c
  1358  000C94  5034               	movf	main@i^0,w,c
  1359  000C96  6E2D               	movwf	(??_main+2)^0,c
  1360  000C98  6A2E               	clrf	(??_main+3)^0,c
  1361  000C9A  502B               	movf	??_main^0,w,c
  1362  000C9C  5C2D               	subwf	(??_main+2)^0,w,c
  1363  000C9E  502E               	movf	(??_main+3)^0,w,c
  1364  000CA0  0A80               	xorlw	128
  1365  000CA2  6E2F               	movwf	(??_main+4)^0,c
  1366  000CA4  502C               	movf	(??_main+1)^0,w,c
  1367  000CA6  0A80               	xorlw	128
  1368  000CA8  582F               	subwfb	(??_main+4)^0,w,c
  1369  000CAA  B0D8               	btfsc	status,0,c
  1370  000CAC  EF5A  F006         	goto	u2581
  1371  000CB0  EF5C  F006         	goto	u2580
  1372  000CB4                     u2581:
  1373  000CB4  EF61  F006         	goto	l2507
  1374  000CB8                     u2580:
  1375  000CB8                     
  1376                           ;main.c: 105:                         lcdChar('*');
  1377  000CB8  0E2A               	movlw	42
  1378  000CBA  EC0B  F00F         	call	_lcdChar
  1379  000CBE  EF64  F006         	goto	l2509
  1380  000CC2                     l2507:
  1381                           
  1382                           ;main.c: 107:                         lcdChar(' ');
  1383  000CC2  0E20               	movlw	32
  1384  000CC4  EC0B  F00F         	call	_lcdChar
  1385  000CC8                     l2509:
  1386  000CC8  2A34               	incf	main@i^0,f,c
  1387  000CCA  0E0B               	movlw	11
  1388  000CCC  6434               	cpfsgt	main@i^0,c
  1389  000CCE  EF6B  F006         	goto	u2591
  1390  000CD2  EF6D  F006         	goto	u2590
  1391  000CD6                     u2591:
  1392  000CD6  EF43  F006         	goto	l2503
  1393  000CDA                     u2590:
  1394  000CDA  EF38  F003         	goto	l2349
  1395  000CDE                     l2515:
  1396  000CDE  5032               	movf	main@painel^0,w,c
  1397  000CE0  6E2B               	movwf	??_main^0,c
  1398  000CE2  6A2C               	clrf	(??_main+1)^0,c
  1399                           
  1400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1401                           ; Switch size 1, requested type "simple"
  1402                           ; Number of cases is 1, Range of values is 0 to 0
  1403                           ; switch strategies available:
  1404                           ; Name         Instructions Cycles
  1405                           ; simple_byte            4     3 (average)
  1406                           ;	Chosen strategy is simple_byte
  1407  000CE4  502C               	movf	(??_main+1)^0,w,c
  1408  000CE6  0A00               	xorlw	0	; case 0
  1409  000CE8  B4D8               	btfsc	status,2,c
  1410  000CEA  EF79  F006         	goto	l2557
  1411  000CEE  EF38  F003         	goto	l2349
  1412  000CF2                     l2557:
  1413                           
  1414                           ; Switch size 1, requested type "simple"
  1415                           ; Number of cases is 2, Range of values is 0 to 1
  1416                           ; switch strategies available:
  1417                           ; Name         Instructions Cycles
  1418                           ; simple_byte            7     4 (average)
  1419                           ;	Chosen strategy is simple_byte
  1420  000CF2  502B               	movf	??_main^0,w,c
  1421  000CF4  0A00               	xorlw	0	; case 0
  1422  000CF6  B4D8               	btfsc	status,2,c
  1423  000CF8  EF9F  F004         	goto	l2449
  1424  000CFC  0A01               	xorlw	1	; case 1
  1425  000CFE  B4D8               	btfsc	status,2,c
  1426  000D00  EF9A  F005         	goto	l2479
  1427  000D04  EF38  F003         	goto	l2349
  1428  000D08  EF00  F000         	goto	start
  1429  000D0C                     __end_of_main:
  1430                           	callstack 0
  1431                           
  1432 ;; *************** function _turnOn *****************
  1433 ;; Defined at:
  1434 ;;		line 21 in file "rgb.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  led             2    6[COMRAM] int 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2, status,0, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1448 ;;      Params:         2       0       0       0       0       0       0
  1449 ;;      Locals:         0       0       0       0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0
  1451 ;;      Totals:         2       0       0       0       0       0       0
  1452 ;;Total ram usage:        2 bytes
  1453 ;; Hardware stack levels used: 1
  1454 ;; Hardware stack levels required when called: 1
  1455 ;; This function calls:
  1456 ;;		_digitalWrite
  1457 ;; This function is called by:
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text1
  1463  001720                     __ptext1:
  1464                           	callstack 0
  1465  001720                     _turnOn:
  1466                           	callstack 29
  1467  001720                     
  1468                           ;rgb.c: 22:  if (led & 1) {
  1469  001720  A007               	btfss	turnOn@led^0,0,c
  1470  001722  EF95  F00B         	goto	u2101
  1471  001726  EF97  F00B         	goto	u2100
  1472  00172A                     u2101:
  1473  00172A  EFA1  F00B         	goto	l2205
  1474  00172E                     u2100:
  1475  00172E                     
  1476                           ;rgb.c: 23:   digitalWrite(PIN_D0, 1);
  1477  00172E  0E00               	movlw	0
  1478  001730  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1479  001732  0E18               	movlw	24
  1480  001734  6E01               	movwf	digitalWrite@pin^0,c
  1481  001736  0E00               	movlw	0
  1482  001738  6E04               	movwf	(digitalWrite@value+1)^0,c
  1483  00173A  0E01               	movlw	1
  1484  00173C  6E03               	movwf	digitalWrite@value^0,c
  1485  00173E  EC86  F006         	call	_digitalWrite	;wreg free
  1486  001742                     l2205:
  1487                           
  1488                           ;rgb.c: 25:  if (led & 2) {
  1489  001742  A207               	btfss	turnOn@led^0,1,c
  1490  001744  EFA6  F00B         	goto	u2111
  1491  001748  EFA8  F00B         	goto	u2110
  1492  00174C                     u2111:
  1493  00174C  EFB2  F00B         	goto	l2209
  1494  001750                     u2110:
  1495  001750                     
  1496                           ;rgb.c: 26:   digitalWrite(PIN_D1, 1);
  1497  001750  0E00               	movlw	0
  1498  001752  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1499  001754  0E19               	movlw	25
  1500  001756  6E01               	movwf	digitalWrite@pin^0,c
  1501  001758  0E00               	movlw	0
  1502  00175A  6E04               	movwf	(digitalWrite@value+1)^0,c
  1503  00175C  0E01               	movlw	1
  1504  00175E  6E03               	movwf	digitalWrite@value^0,c
  1505  001760  EC86  F006         	call	_digitalWrite	;wreg free
  1506  001764                     l2209:
  1507                           
  1508                           ;rgb.c: 28:  if (led & 4) {
  1509  001764  A407               	btfss	turnOn@led^0,2,c
  1510  001766  EFB7  F00B         	goto	u2121
  1511  00176A  EFB9  F00B         	goto	u2120
  1512  00176E                     u2121:
  1513  00176E  EFC3  F00B         	goto	l205
  1514  001772                     u2120:
  1515  001772                     
  1516                           ;rgb.c: 29:   digitalWrite(PIN_D2, 1);
  1517  001772  0E00               	movlw	0
  1518  001774  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1519  001776  0E1A               	movlw	26
  1520  001778  6E01               	movwf	digitalWrite@pin^0,c
  1521  00177A  0E00               	movlw	0
  1522  00177C  6E04               	movwf	(digitalWrite@value+1)^0,c
  1523  00177E  0E01               	movlw	1
  1524  001780  6E03               	movwf	digitalWrite@value^0,c
  1525  001782  EC86  F006         	call	_digitalWrite	;wreg free
  1526  001786                     l205:
  1527  001786  0012               	return		;funcret
  1528  001788                     __end_of_turnOn:
  1529                           	callstack 0
  1530                           
  1531 ;; *************** function _rgbInit *****************
  1532 ;; Defined at:
  1533 ;;		line 45 in file "rgb.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1547 ;;      Params:         0       0       0       0       0       0       0
  1548 ;;      Locals:         0       0       0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0
  1550 ;;      Totals:         0       0       0       0       0       0       0
  1551 ;;Total ram usage:        0 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 1
  1554 ;; This function calls:
  1555 ;;		_pinMode
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text2
  1562  001B3A                     __ptext2:
  1563                           	callstack 0
  1564  001B3A                     _rgbInit:
  1565                           	callstack 29
  1566  001B3A                     
  1567                           ;rgb.c: 46:  pinMode(PIN_D0, 0);
  1568  001B3A  0E00               	movlw	0
  1569  001B3C  6E02               	movwf	(pinMode@pin+1)^0,c
  1570  001B3E  0E18               	movlw	24
  1571  001B40  6E01               	movwf	pinMode@pin^0,c
  1572  001B42  0E00               	movlw	0
  1573  001B44  6E04               	movwf	(pinMode@type+1)^0,c
  1574  001B46  0E00               	movlw	0
  1575  001B48  6E03               	movwf	pinMode@type^0,c
  1576  001B4A  ECAD  F007         	call	_pinMode	;wreg free
  1577                           
  1578                           ;rgb.c: 47:  pinMode(PIN_D1, 0);
  1579  001B4E  0E00               	movlw	0
  1580  001B50  6E02               	movwf	(pinMode@pin+1)^0,c
  1581  001B52  0E19               	movlw	25
  1582  001B54  6E01               	movwf	pinMode@pin^0,c
  1583  001B56  0E00               	movlw	0
  1584  001B58  6E04               	movwf	(pinMode@type+1)^0,c
  1585  001B5A  0E00               	movlw	0
  1586  001B5C  6E03               	movwf	pinMode@type^0,c
  1587  001B5E  ECAD  F007         	call	_pinMode	;wreg free
  1588                           
  1589                           ;rgb.c: 48:  pinMode(PIN_D2, 0);
  1590  001B62  0E00               	movlw	0
  1591  001B64  6E02               	movwf	(pinMode@pin+1)^0,c
  1592  001B66  0E1A               	movlw	26
  1593  001B68  6E01               	movwf	pinMode@pin^0,c
  1594  001B6A  0E00               	movlw	0
  1595  001B6C  6E04               	movwf	(pinMode@type+1)^0,c
  1596  001B6E  0E00               	movlw	0
  1597  001B70  6E03               	movwf	pinMode@type^0,c
  1598  001B72  ECAD  F007         	call	_pinMode	;wreg free
  1599  001B76  0012               	return		;funcret
  1600  001B78                     __end_of_rgbInit:
  1601                           	callstack 0
  1602                           
  1603 ;; *************** function _rgbColor *****************
  1604 ;; Defined at:
  1605 ;;		line 3 in file "rgb.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  led             2    6[COMRAM] int 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;		None
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1619 ;;      Params:         2       0       0       0       0       0       0
  1620 ;;      Locals:         0       0       0       0       0       0       0
  1621 ;;      Temps:          0       0       0       0       0       0       0
  1622 ;;      Totals:         2       0       0       0       0       0       0
  1623 ;;Total ram usage:        2 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; Hardware stack levels required when called: 1
  1626 ;; This function calls:
  1627 ;;		_digitalWrite
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text3
  1634  0015C0                     __ptext3:
  1635                           	callstack 0
  1636  0015C0                     _rgbColor:
  1637                           	callstack 29
  1638  0015C0                     
  1639                           ;rgb.c: 4:  if (led & 1) {
  1640  0015C0  A007               	btfss	rgbColor@led^0,0,c
  1641  0015C2  EFE5  F00A         	goto	u2151
  1642  0015C6  EFE7  F00A         	goto	u2150
  1643  0015CA                     u2151:
  1644  0015CA  EFF3  F00A         	goto	l2231
  1645  0015CE                     u2150:
  1646  0015CE                     
  1647                           ;rgb.c: 5:   digitalWrite(PIN_D0, 1);
  1648  0015CE  0E00               	movlw	0
  1649  0015D0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1650  0015D2  0E18               	movlw	24
  1651  0015D4  6E01               	movwf	digitalWrite@pin^0,c
  1652  0015D6  0E00               	movlw	0
  1653  0015D8  6E04               	movwf	(digitalWrite@value+1)^0,c
  1654  0015DA  0E01               	movlw	1
  1655  0015DC  6E03               	movwf	digitalWrite@value^0,c
  1656  0015DE  EC86  F006         	call	_digitalWrite	;wreg free
  1657                           
  1658                           ;rgb.c: 6:  } else {
  1659  0015E2  EFFD  F00A         	goto	l2233
  1660  0015E6                     l2231:
  1661                           
  1662                           ;rgb.c: 7:   digitalWrite(PIN_D0, 0);
  1663  0015E6  0E00               	movlw	0
  1664  0015E8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1665  0015EA  0E18               	movlw	24
  1666  0015EC  6E01               	movwf	digitalWrite@pin^0,c
  1667  0015EE  0E00               	movlw	0
  1668  0015F0  6E04               	movwf	(digitalWrite@value+1)^0,c
  1669  0015F2  0E00               	movlw	0
  1670  0015F4  6E03               	movwf	digitalWrite@value^0,c
  1671  0015F6  EC86  F006         	call	_digitalWrite	;wreg free
  1672  0015FA                     l2233:
  1673                           
  1674                           ;rgb.c: 9:  if (led & 2) {
  1675  0015FA  A207               	btfss	rgbColor@led^0,1,c
  1676  0015FC  EF02  F00B         	goto	u2161
  1677  001600  EF04  F00B         	goto	u2160
  1678  001604                     u2161:
  1679  001604  EF10  F00B         	goto	l2237
  1680  001608                     u2160:
  1681  001608                     
  1682                           ;rgb.c: 10:   digitalWrite(PIN_D1, 1);
  1683  001608  0E00               	movlw	0
  1684  00160A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1685  00160C  0E19               	movlw	25
  1686  00160E  6E01               	movwf	digitalWrite@pin^0,c
  1687  001610  0E00               	movlw	0
  1688  001612  6E04               	movwf	(digitalWrite@value+1)^0,c
  1689  001614  0E01               	movlw	1
  1690  001616  6E03               	movwf	digitalWrite@value^0,c
  1691  001618  EC86  F006         	call	_digitalWrite	;wreg free
  1692                           
  1693                           ;rgb.c: 11:  } else {
  1694  00161C  EF1A  F00B         	goto	l2239
  1695  001620                     l2237:
  1696                           
  1697                           ;rgb.c: 12:   digitalWrite(PIN_D1, 0);
  1698  001620  0E00               	movlw	0
  1699  001622  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1700  001624  0E19               	movlw	25
  1701  001626  6E01               	movwf	digitalWrite@pin^0,c
  1702  001628  0E00               	movlw	0
  1703  00162A  6E04               	movwf	(digitalWrite@value+1)^0,c
  1704  00162C  0E00               	movlw	0
  1705  00162E  6E03               	movwf	digitalWrite@value^0,c
  1706  001630  EC86  F006         	call	_digitalWrite	;wreg free
  1707  001634                     l2239:
  1708                           
  1709                           ;rgb.c: 14:  if (led & 4) {
  1710  001634  A407               	btfss	rgbColor@led^0,2,c
  1711  001636  EF1F  F00B         	goto	u2171
  1712  00163A  EF21  F00B         	goto	u2170
  1713  00163E                     u2171:
  1714  00163E  EF2D  F00B         	goto	l2243
  1715  001642                     u2170:
  1716  001642                     
  1717                           ;rgb.c: 15:   digitalWrite(PIN_D2, 1);
  1718  001642  0E00               	movlw	0
  1719  001644  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1720  001646  0E1A               	movlw	26
  1721  001648  6E01               	movwf	digitalWrite@pin^0,c
  1722  00164A  0E00               	movlw	0
  1723  00164C  6E04               	movwf	(digitalWrite@value+1)^0,c
  1724  00164E  0E01               	movlw	1
  1725  001650  6E03               	movwf	digitalWrite@value^0,c
  1726  001652  EC86  F006         	call	_digitalWrite	;wreg free
  1727                           
  1728                           ;rgb.c: 16:  } else {
  1729  001656  EF37  F00B         	goto	l199
  1730  00165A                     l2243:
  1731                           
  1732                           ;rgb.c: 17:   digitalWrite(PIN_D2, 0);
  1733  00165A  0E00               	movlw	0
  1734  00165C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1735  00165E  0E1A               	movlw	26
  1736  001660  6E01               	movwf	digitalWrite@pin^0,c
  1737  001662  0E00               	movlw	0
  1738  001664  6E04               	movwf	(digitalWrite@value+1)^0,c
  1739  001666  0E00               	movlw	0
  1740  001668  6E03               	movwf	digitalWrite@value^0,c
  1741  00166A  EC86  F006         	call	_digitalWrite	;wreg free
  1742  00166E                     l199:
  1743  00166E  0012               	return		;funcret
  1744  001670                     __end_of_rgbColor:
  1745                           	callstack 0
  1746                           
  1747 ;; *************** function _lcdString *****************
  1748 ;; Defined at:
  1749 ;;		line 57 in file "lcd.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  msg             2   14[COMRAM] PTR unsigned char 
  1752 ;;		 -> STR_6(5), STR_5(4), STR_4(8), STR_3(6), 
  1753 ;;		 -> STR_2(7), STR_1(9), 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  i               2   18[COMRAM] int 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1765 ;;      Params:         2       0       0       0       0       0       0
  1766 ;;      Locals:         2       0       0       0       0       0       0
  1767 ;;      Temps:          2       0       0       0       0       0       0
  1768 ;;      Totals:         6       0       0       0       0       0       0
  1769 ;;Total ram usage:        6 bytes
  1770 ;; Hardware stack levels used: 1
  1771 ;; Hardware stack levels required when called: 5
  1772 ;; This function calls:
  1773 ;;		_lcdChar
  1774 ;; This function is called by:
  1775 ;;		_main
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text4
  1780  00189A                     __ptext4:
  1781                           	callstack 0
  1782  00189A                     _lcdString:
  1783                           	callstack 25
  1784  00189A                     
  1785                           ;lcd.c: 58:  int i = 0;
  1786  00189A  0E00               	movlw	0
  1787  00189C  6E14               	movwf	(lcdString@i+1)^0,c
  1788  00189E  0E00               	movlw	0
  1789  0018A0  6E13               	movwf	lcdString@i^0,c
  1790                           
  1791                           ;lcd.c: 59:  while (msg[i] != 0) {
  1792  0018A2  EF63  F00C         	goto	l2299
  1793  0018A6                     l2295:
  1794                           
  1795                           ;lcd.c: 60:   lcdChar(msg[i]);
  1796  0018A6  5013               	movf	lcdString@i^0,w,c
  1797  0018A8  240F               	addwf	lcdString@msg^0,w,c
  1798  0018AA  6E11               	movwf	??_lcdString^0,c
  1799  0018AC  5014               	movf	(lcdString@i+1)^0,w,c
  1800  0018AE  2010               	addwfc	(lcdString@msg+1)^0,w,c
  1801  0018B0  6E12               	movwf	(??_lcdString+1)^0,c
  1802  0018B2  C011  FFF6         	movff	??_lcdString,tblptrl
  1803  0018B6  C012  FFF7         	movff	??_lcdString+1,tblptrh
  1804  0018BA                     	if	0	;tblptru may be non-zero
  1805  0018BA                     	endif
  1806  0018BA                     	if	0	;tblptru may be non-zero
  1807  0018BA                     	endif
  1808  0018BA  0008               	tblrd		*
  1809  0018BC  50F5               	movf	tablat,w,c
  1810  0018BE  EC0B  F00F         	call	_lcdChar
  1811  0018C2                     
  1812                           ;lcd.c: 61:   i++;
  1813  0018C2  4A13               	infsnz	lcdString@i^0,f,c
  1814  0018C4  2A14               	incf	(lcdString@i+1)^0,f,c
  1815  0018C6                     l2299:
  1816                           
  1817                           ;lcd.c: 59:  while (msg[i] != 0) {
  1818  0018C6  5013               	movf	lcdString@i^0,w,c
  1819  0018C8  240F               	addwf	lcdString@msg^0,w,c
  1820  0018CA  6E11               	movwf	??_lcdString^0,c
  1821  0018CC  5014               	movf	(lcdString@i+1)^0,w,c
  1822  0018CE  2010               	addwfc	(lcdString@msg+1)^0,w,c
  1823  0018D0  6E12               	movwf	(??_lcdString+1)^0,c
  1824  0018D2  C011  FFF6         	movff	??_lcdString,tblptrl
  1825  0018D6  C012  FFF7         	movff	??_lcdString+1,tblptrh
  1826  0018DA                     	if	0	;tblptru may be non-zero
  1827  0018DA                     	endif
  1828  0018DA                     	if	0	;tblptru may be non-zero
  1829  0018DA                     	endif
  1830  0018DA  0008               	tblrd		*
  1831  0018DC  50F5               	movf	tablat,w,c
  1832  0018DE  0900               	iorlw	0
  1833  0018E0  A4D8               	btfss	status,2,c
  1834  0018E2  EF75  F00C         	goto	u2281
  1835  0018E6  EF77  F00C         	goto	u2280
  1836  0018EA                     u2281:
  1837  0018EA  EF53  F00C         	goto	l2295
  1838  0018EE                     u2280:
  1839  0018EE  0012               	return		;funcret
  1840  0018F0                     __end_of_lcdString:
  1841                           	callstack 0
  1842                           
  1843 ;; *************** function _lcdChar *****************
  1844 ;; Defined at:
  1845 ;;		line 52 in file "lcd.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  value           1    wreg     unsigned char 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  value           1   13[COMRAM] unsigned char 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0, cstack
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1859 ;;      Params:         0       0       0       0       0       0       0
  1860 ;;      Locals:         1       0       0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0
  1862 ;;      Totals:         1       0       0       0       0       0       0
  1863 ;;Total ram usage:        1 bytes
  1864 ;; Hardware stack levels used: 1
  1865 ;; Hardware stack levels required when called: 4
  1866 ;; This function calls:
  1867 ;;		_delayMicro
  1868 ;;		_pushByte
  1869 ;; This function is called by:
  1870 ;;		_main
  1871 ;;		_lcdString
  1872 ;;		_lcdNumber
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text5
  1877  001E16                     __ptext5:
  1878                           	callstack 0
  1879  001E16                     _lcdChar:
  1880                           	callstack 25
  1881                           
  1882                           ;incstack = 0
  1883                           ;lcdChar@value stored from wreg
  1884  001E16  6E0E               	movwf	lcdChar@value^0,c
  1885  001E18                     
  1886                           ;lcd.c: 53:  pushByte(value, 1);
  1887  001E18  0E00               	movlw	0
  1888  001E1A  6E0B               	movwf	(pushByte@rs+1)^0,c
  1889  001E1C  0E01               	movlw	1
  1890  001E1E  6E0A               	movwf	pushByte@rs^0,c
  1891  001E20  500E               	movf	lcdChar@value^0,w,c
  1892  001E22  ECF4  F00B         	call	_pushByte
  1893  001E26                     
  1894                           ;lcd.c: 54:  delayMicro(80);
  1895  001E26  0E00               	movlw	0
  1896  001E28  6E02               	movwf	(delayMicro@a+1)^0,c
  1897  001E2A  0E50               	movlw	80
  1898  001E2C  6E01               	movwf	delayMicro@a^0,c
  1899  001E2E  EC39  F00F         	call	_delayMicro	;wreg free
  1900  001E32  0012               	return		;funcret
  1901  001E34                     __end_of_lcdChar:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _lcdPosition *****************
  1905 ;; Defined at:
  1906 ;;		line 44 in file "lcd.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  line            2   14[COMRAM] int 
  1909 ;;  col             2   16[COMRAM] int 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, status,2, status,0, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1921 ;;      Params:         4       0       0       0       0       0       0
  1922 ;;      Locals:         0       0       0       0       0       0       0
  1923 ;;      Temps:          0       0       0       0       0       0       0
  1924 ;;      Totals:         4       0       0       0       0       0       0
  1925 ;;Total ram usage:        4 bytes
  1926 ;; Hardware stack levels used: 1
  1927 ;; Hardware stack levels required when called: 5
  1928 ;; This function calls:
  1929 ;;		_lcdCommand
  1930 ;; This function is called by:
  1931 ;;		_main
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text6
  1936  001BB6                     __ptext6:
  1937                           	callstack 0
  1938  001BB6                     _lcdPosition:
  1939                           	callstack 25
  1940  001BB6                     
  1941                           ;lcd.c: 45:  if (line == 0) {
  1942  001BB6  500F               	movf	lcdPosition@line^0,w,c
  1943  001BB8  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  1944  001BBA  A4D8               	btfss	status,2,c
  1945  001BBC  EFE2  F00D         	goto	u2261
  1946  001BC0  EFE4  F00D         	goto	u2260
  1947  001BC4                     u2261:
  1948  001BC4  EFE9  F00D         	goto	l2279
  1949  001BC8                     u2260:
  1950  001BC8                     
  1951                           ;lcd.c: 46:   lcdCommand(0x80 + (col % 16));
  1952  001BC8  5011               	movf	lcdPosition@col^0,w,c
  1953  001BCA  0B0F               	andlw	15
  1954  001BCC  0F80               	addlw	128
  1955  001BCE  EC1A  F00F         	call	_lcdCommand
  1956  001BD2                     l2279:
  1957                           
  1958                           ;lcd.c: 48:  if (line == 1) {
  1959  001BD2  040F               	decf	lcdPosition@line^0,w,c
  1960  001BD4  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  1961  001BD6  A4D8               	btfss	status,2,c
  1962  001BD8  EFF0  F00D         	goto	u2271
  1963  001BDC  EFF2  F00D         	goto	u2270
  1964  001BE0                     u2271:
  1965  001BE0  EFF7  F00D         	goto	l168
  1966  001BE4                     u2270:
  1967  001BE4                     
  1968                           ;lcd.c: 49:   lcdCommand(0xC0 + (col % 16));
  1969  001BE4  5011               	movf	lcdPosition@col^0,w,c
  1970  001BE6  0B0F               	andlw	15
  1971  001BE8  0FC0               	addlw	192
  1972  001BEA  EC1A  F00F         	call	_lcdCommand
  1973  001BEE                     l168:
  1974  001BEE  0012               	return		;funcret
  1975  001BF0                     __end_of_lcdPosition:
  1976                           	callstack 0
  1977                           
  1978 ;; *************** function _lcdInit *****************
  1979 ;; Defined at:
  1980 ;;		line 72 in file "lcd.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1994 ;;      Params:         0       0       0       0       0       0       0
  1995 ;;      Locals:         0       0       0       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0
  1997 ;;      Totals:         0       0       0       0       0       0       0
  1998 ;;Total ram usage:        0 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 5
  2001 ;; This function calls:
  2002 ;;		_delayMicro
  2003 ;;		_delayMili
  2004 ;;		_lcdCommand
  2005 ;;		_pinMode
  2006 ;;		_pushNibble
  2007 ;;		_soInit
  2008 ;; This function is called by:
  2009 ;;		_main
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text7
  2014  00150C                     __ptext7:
  2015                           	callstack 0
  2016  00150C                     _lcdInit:
  2017                           	callstack 25
  2018  00150C                     
  2019                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  2020  00150C  0E00               	movlw	0
  2021  00150E  6E02               	movwf	(pinMode@pin+1)^0,c
  2022  001510  0E1C               	movlw	28
  2023  001512  6E01               	movwf	pinMode@pin^0,c
  2024  001514  0E00               	movlw	0
  2025  001516  6E04               	movwf	(pinMode@type+1)^0,c
  2026  001518  0E00               	movlw	0
  2027  00151A  6E03               	movwf	pinMode@type^0,c
  2028  00151C  ECAD  F007         	call	_pinMode	;wreg free
  2029                           
  2030                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  2031  001520  0E00               	movlw	0
  2032  001522  6E02               	movwf	(pinMode@pin+1)^0,c
  2033  001524  0E1D               	movlw	29
  2034  001526  6E01               	movwf	pinMode@pin^0,c
  2035  001528  0E00               	movlw	0
  2036  00152A  6E04               	movwf	(pinMode@type+1)^0,c
  2037  00152C  0E00               	movlw	0
  2038  00152E  6E03               	movwf	pinMode@type^0,c
  2039  001530  ECAD  F007         	call	_pinMode	;wreg free
  2040                           
  2041                           ;lcd.c: 75:  soInit();
  2042  001534  ECBC  F00D         	call	_soInit	;wreg free
  2043                           
  2044                           ;lcd.c: 76:  delayMili(15);
  2045  001538  0E00               	movlw	0
  2046  00153A  6E02               	movwf	(delayMili@a+1)^0,c
  2047  00153C  0E0F               	movlw	15
  2048  00153E  6E01               	movwf	delayMili@a^0,c
  2049  001540  EC62  F00E         	call	_delayMili	;wreg free
  2050                           
  2051                           ;lcd.c: 78:  pushNibble(0x03, 0);
  2052  001544  0E00               	movlw	0
  2053  001546  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2054  001548  0E00               	movlw	0
  2055  00154A  6E0A               	movwf	pushNibble@rs^0,c
  2056  00154C  0E03               	movlw	3
  2057  00154E  ECE5  F00E         	call	_pushNibble
  2058                           
  2059                           ;lcd.c: 79:  delayMili(5);
  2060  001552  0E00               	movlw	0
  2061  001554  6E02               	movwf	(delayMili@a+1)^0,c
  2062  001556  0E05               	movlw	5
  2063  001558  6E01               	movwf	delayMili@a^0,c
  2064  00155A  EC62  F00E         	call	_delayMili	;wreg free
  2065                           
  2066                           ;lcd.c: 80:  pushNibble(0x03, 0);
  2067  00155E  0E00               	movlw	0
  2068  001560  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2069  001562  0E00               	movlw	0
  2070  001564  6E0A               	movwf	pushNibble@rs^0,c
  2071  001566  0E03               	movlw	3
  2072  001568  ECE5  F00E         	call	_pushNibble
  2073  00156C                     
  2074                           ;lcd.c: 81:  delayMicro(160);
  2075  00156C  0E00               	movlw	0
  2076  00156E  6E02               	movwf	(delayMicro@a+1)^0,c
  2077  001570  0EA0               	movlw	160
  2078  001572  6E01               	movwf	delayMicro@a^0,c
  2079  001574  EC39  F00F         	call	_delayMicro	;wreg free
  2080  001578                     
  2081                           ;lcd.c: 82:  pushNibble(0x03, 0);
  2082  001578  0E00               	movlw	0
  2083  00157A  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2084  00157C  0E00               	movlw	0
  2085  00157E  6E0A               	movwf	pushNibble@rs^0,c
  2086  001580  0E03               	movlw	3
  2087  001582  ECE5  F00E         	call	_pushNibble
  2088                           
  2089                           ;lcd.c: 83:  delayMicro(160);
  2090  001586  0E00               	movlw	0
  2091  001588  6E02               	movwf	(delayMicro@a+1)^0,c
  2092  00158A  0EA0               	movlw	160
  2093  00158C  6E01               	movwf	delayMicro@a^0,c
  2094  00158E  EC39  F00F         	call	_delayMicro	;wreg free
  2095  001592                     
  2096                           ;lcd.c: 85:  pushNibble(0x02, 0);
  2097  001592  0E00               	movlw	0
  2098  001594  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2099  001596  0E00               	movlw	0
  2100  001598  6E0A               	movwf	pushNibble@rs^0,c
  2101  00159A  0E02               	movlw	2
  2102  00159C  ECE5  F00E         	call	_pushNibble
  2103  0015A0                     
  2104                           ;lcd.c: 86:  delayMili(10);
  2105  0015A0  0E00               	movlw	0
  2106  0015A2  6E02               	movwf	(delayMili@a+1)^0,c
  2107  0015A4  0E0A               	movlw	10
  2108  0015A6  6E01               	movwf	delayMili@a^0,c
  2109  0015A8  EC62  F00E         	call	_delayMili	;wreg free
  2110  0015AC                     
  2111                           ;lcd.c: 88:  lcdCommand(0x28);
  2112  0015AC  0E28               	movlw	40
  2113  0015AE  EC1A  F00F         	call	_lcdCommand
  2114  0015B2                     
  2115                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  2116  0015B2  0E0C               	movlw	12
  2117  0015B4  EC1A  F00F         	call	_lcdCommand
  2118  0015B8                     
  2119                           ;lcd.c: 90:  lcdCommand(0x01);
  2120  0015B8  0E01               	movlw	1
  2121  0015BA  EC1A  F00F         	call	_lcdCommand
  2122  0015BE  0012               	return		;funcret
  2123  0015C0                     __end_of_lcdInit:
  2124                           	callstack 0
  2125                           
  2126 ;; *************** function _pushNibble *****************
  2127 ;; Defined at:
  2128 ;;		line 25 in file "lcd.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  value           1    wreg     unsigned char 
  2131 ;;  rs              2    9[COMRAM] int 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  value           1   11[COMRAM] unsigned char 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2143 ;;      Params:         2       0       0       0       0       0       0
  2144 ;;      Locals:         1       0       0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0
  2146 ;;      Totals:         3       0       0       0       0       0       0
  2147 ;;Total ram usage:        3 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 3
  2150 ;; This function calls:
  2151 ;;		_digitalWrite
  2152 ;;		_pulseEnablePin
  2153 ;;		_soWrite
  2154 ;; This function is called by:
  2155 ;;		_lcdInit
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text8
  2160  001DCA                     __ptext8:
  2161                           	callstack 0
  2162  001DCA                     _pushNibble:
  2163                           	callstack 26
  2164                           
  2165                           ;incstack = 0
  2166                           ;pushNibble@value stored from wreg
  2167  001DCA  6E0C               	movwf	pushNibble@value^0,c
  2168  001DCC                     
  2169                           ;lcd.c: 26:  soWrite(value);
  2170  001DCC  C00C  F007         	movff	pushNibble@value,soWrite@value
  2171  001DD0  6A08               	clrf	(soWrite@value+1)^0,c
  2172  001DD2  ECCA  F00C         	call	_soWrite	;wreg free
  2173                           
  2174                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  2175  001DD6  0E00               	movlw	0
  2176  001DD8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2177  001DDA  0E1D               	movlw	29
  2178  001DDC  6E01               	movwf	digitalWrite@pin^0,c
  2179  001DDE  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  2180  001DE2  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  2181  001DE6  EC86  F006         	call	_digitalWrite	;wreg free
  2182                           
  2183                           ;lcd.c: 28:  pulseEnablePin();
  2184  001DEA  EC5B  F00D         	call	_pulseEnablePin	;wreg free
  2185  001DEE  0012               	return		;funcret
  2186  001DF0                     __end_of_pushNibble:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _lcdCommand *****************
  2190 ;; Defined at:
  2191 ;;		line 40 in file "lcd.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  value           1    wreg     unsigned char 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  value           1   13[COMRAM] unsigned char 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg, status,2, status,0, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2205 ;;      Params:         0       0       0       0       0       0       0
  2206 ;;      Locals:         1       0       0       0       0       0       0
  2207 ;;      Temps:          0       0       0       0       0       0       0
  2208 ;;      Totals:         1       0       0       0       0       0       0
  2209 ;;Total ram usage:        1 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; Hardware stack levels required when called: 4
  2212 ;; This function calls:
  2213 ;;		_delayMili
  2214 ;;		_pushByte
  2215 ;; This function is called by:
  2216 ;;		_lcdPosition
  2217 ;;		_lcdInit
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text9
  2222  001E34                     __ptext9:
  2223                           	callstack 0
  2224  001E34                     _lcdCommand:
  2225                           	callstack 25
  2226                           
  2227                           ;incstack = 0
  2228                           ;lcdCommand@value stored from wreg
  2229  001E34  6E0E               	movwf	lcdCommand@value^0,c
  2230  001E36                     
  2231                           ;lcd.c: 41:  pushByte(value, 0);
  2232  001E36  0E00               	movlw	0
  2233  001E38  6E0B               	movwf	(pushByte@rs+1)^0,c
  2234  001E3A  0E00               	movlw	0
  2235  001E3C  6E0A               	movwf	pushByte@rs^0,c
  2236  001E3E  500E               	movf	lcdCommand@value^0,w,c
  2237  001E40  ECF4  F00B         	call	_pushByte
  2238                           
  2239                           ;lcd.c: 42:  delayMili(2);
  2240  001E44  0E00               	movlw	0
  2241  001E46  6E02               	movwf	(delayMili@a+1)^0,c
  2242  001E48  0E02               	movlw	2
  2243  001E4A  6E01               	movwf	delayMili@a^0,c
  2244  001E4C  EC62  F00E         	call	_delayMili	;wreg free
  2245  001E50  0012               	return		;funcret
  2246  001E52                     __end_of_lcdCommand:
  2247                           	callstack 0
  2248                           
  2249 ;; *************** function _pushByte *****************
  2250 ;; Defined at:
  2251 ;;		line 31 in file "lcd.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  value           1    wreg     unsigned char 
  2254 ;;  rs              2    9[COMRAM] int 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  value           1   12[COMRAM] unsigned char 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2266 ;;      Params:         2       0       0       0       0       0       0
  2267 ;;      Locals:         1       0       0       0       0       0       0
  2268 ;;      Temps:          1       0       0       0       0       0       0
  2269 ;;      Totals:         4       0       0       0       0       0       0
  2270 ;;Total ram usage:        4 bytes
  2271 ;; Hardware stack levels used: 1
  2272 ;; Hardware stack levels required when called: 3
  2273 ;; This function calls:
  2274 ;;		_digitalWrite
  2275 ;;		_pulseEnablePin
  2276 ;;		_soWrite
  2277 ;; This function is called by:
  2278 ;;		_lcdCommand
  2279 ;;		_lcdChar
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text10
  2284  0017E8                     __ptext10:
  2285                           	callstack 0
  2286  0017E8                     _pushByte:
  2287                           	callstack 25
  2288                           
  2289                           ;incstack = 0
  2290                           ;pushByte@value stored from wreg
  2291  0017E8  6E0D               	movwf	pushByte@value^0,c
  2292  0017EA                     
  2293                           ;lcd.c: 32:  soWrite(value >> 4);
  2294  0017EA  C00D  F00C         	movff	pushByte@value,??_pushByte
  2295  0017EE  3A0C               	swapf	??_pushByte^0,f,c
  2296  0017F0  0E0F               	movlw	15
  2297  0017F2  160C               	andwf	??_pushByte^0,f,c
  2298  0017F4  500C               	movf	??_pushByte^0,w,c
  2299  0017F6  6E07               	movwf	soWrite@value^0,c
  2300  0017F8  6A08               	clrf	(soWrite@value+1)^0,c
  2301  0017FA  ECCA  F00C         	call	_soWrite	;wreg free
  2302                           
  2303                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  2304  0017FE  0E00               	movlw	0
  2305  001800  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2306  001802  0E1D               	movlw	29
  2307  001804  6E01               	movwf	digitalWrite@pin^0,c
  2308  001806  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  2309  00180A  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  2310  00180E  EC86  F006         	call	_digitalWrite	;wreg free
  2311                           
  2312                           ;lcd.c: 34:  pulseEnablePin();
  2313  001812  EC5B  F00D         	call	_pulseEnablePin	;wreg free
  2314                           
  2315                           ;lcd.c: 36:  soWrite(value & 0x0F);
  2316  001816  C00D  F00C         	movff	pushByte@value,??_pushByte
  2317  00181A  0E0F               	movlw	15
  2318  00181C  160C               	andwf	??_pushByte^0,f,c
  2319  00181E  500C               	movf	??_pushByte^0,w,c
  2320  001820  6E07               	movwf	soWrite@value^0,c
  2321  001822  6A08               	clrf	(soWrite@value+1)^0,c
  2322  001824  ECCA  F00C         	call	_soWrite	;wreg free
  2323                           
  2324                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  2325  001828  0E00               	movlw	0
  2326  00182A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2327  00182C  0E1D               	movlw	29
  2328  00182E  6E01               	movwf	digitalWrite@pin^0,c
  2329  001830  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  2330  001834  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  2331  001838  EC86  F006         	call	_digitalWrite	;wreg free
  2332                           
  2333                           ;lcd.c: 38:  pulseEnablePin();
  2334  00183C  EC5B  F00D         	call	_pulseEnablePin	;wreg free
  2335  001840  0012               	return		;funcret
  2336  001842                     __end_of_pushByte:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function _pulseEnablePin *****************
  2340 ;; Defined at:
  2341 ;;		line 18 in file "lcd.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2355 ;;      Params:         0       0       0       0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0
  2358 ;;      Totals:         0       0       0       0       0       0       0
  2359 ;;Total ram usage:        0 bytes
  2360 ;; Hardware stack levels used: 1
  2361 ;; Hardware stack levels required when called: 1
  2362 ;; This function calls:
  2363 ;;		_delayMicro
  2364 ;;		_digitalWrite
  2365 ;; This function is called by:
  2366 ;;		_pushNibble
  2367 ;;		_pushByte
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text11
  2372  001AB6                     __ptext11:
  2373                           	callstack 0
  2374  001AB6                     _pulseEnablePin:
  2375                           	callstack 26
  2376  001AB6                     
  2377                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  2378  001AB6  0E00               	movlw	0
  2379  001AB8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2380  001ABA  0E1C               	movlw	28
  2381  001ABC  6E01               	movwf	digitalWrite@pin^0,c
  2382  001ABE  0E00               	movlw	0
  2383  001AC0  6E04               	movwf	(digitalWrite@value+1)^0,c
  2384  001AC2  0E01               	movlw	1
  2385  001AC4  6E03               	movwf	digitalWrite@value^0,c
  2386  001AC6  EC86  F006         	call	_digitalWrite	;wreg free
  2387  001ACA                     
  2388                           ;lcd.c: 20:  delayMicro(5);
  2389  001ACA  0E00               	movlw	0
  2390  001ACC  6E02               	movwf	(delayMicro@a+1)^0,c
  2391  001ACE  0E05               	movlw	5
  2392  001AD0  6E01               	movwf	delayMicro@a^0,c
  2393  001AD2  EC39  F00F         	call	_delayMicro	;wreg free
  2394  001AD6                     
  2395                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  2396  001AD6  0E00               	movlw	0
  2397  001AD8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2398  001ADA  0E1C               	movlw	28
  2399  001ADC  6E01               	movwf	digitalWrite@pin^0,c
  2400  001ADE  0E00               	movlw	0
  2401  001AE0  6E04               	movwf	(digitalWrite@value+1)^0,c
  2402  001AE2  0E00               	movlw	0
  2403  001AE4  6E03               	movwf	digitalWrite@value^0,c
  2404  001AE6  EC86  F006         	call	_digitalWrite	;wreg free
  2405                           
  2406                           ;lcd.c: 22:  delayMicro(5);
  2407  001AEA  0E00               	movlw	0
  2408  001AEC  6E02               	movwf	(delayMicro@a+1)^0,c
  2409  001AEE  0E05               	movlw	5
  2410  001AF0  6E01               	movwf	delayMicro@a^0,c
  2411  001AF2  EC39  F00F         	call	_delayMicro	;wreg free
  2412  001AF6  0012               	return		;funcret
  2413  001AF8                     __end_of_pulseEnablePin:
  2414                           	callstack 0
  2415                           
  2416 ;; *************** function _delayMicro *****************
  2417 ;; Defined at:
  2418 ;;		line 5 in file "lcd.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  a               2    0[COMRAM] int 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  i               2    0        volatile int 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		None
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2432 ;;      Params:         2       0       0       0       0       0       0
  2433 ;;      Locals:         0       0       0       0       0       0       0
  2434 ;;      Temps:          0       0       0       0       0       0       0
  2435 ;;      Totals:         2       0       0       0       0       0       0
  2436 ;;Total ram usage:        2 bytes
  2437 ;; Hardware stack levels used: 1
  2438 ;; This function calls:
  2439 ;;		Nothing
  2440 ;; This function is called by:
  2441 ;;		_pulseEnablePin
  2442 ;;		_lcdChar
  2443 ;;		_lcdInit
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text12
  2448  001E72                     __ptext12:
  2449                           	callstack 0
  2450  001E72                     _delayMicro:
  2451                           	callstack 26
  2452  001E72  0012               	return		;funcret
  2453  001E74                     __end_of_delayMicro:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function _delayMili *****************
  2457 ;; Defined at:
  2458 ;;		line 10 in file "lcd.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  a               2    0[COMRAM] int 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  i               2    3[COMRAM] volatile int 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2472 ;;      Params:         2       0       0       0       0       0       0
  2473 ;;      Locals:         2       0       0       0       0       0       0
  2474 ;;      Temps:          1       0       0       0       0       0       0
  2475 ;;      Totals:         5       0       0       0       0       0       0
  2476 ;;Total ram usage:        5 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_lcdCommand
  2482 ;;		_lcdInit
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text13
  2487  001CC4                     __ptext13:
  2488                           	callstack 0
  2489  001CC4                     _delayMili:
  2490                           	callstack 28
  2491  001CC4                     
  2492                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  2493  001CC4  0E00               	movlw	0
  2494  001CC6  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  2495  001CC8  0E00               	movlw	0
  2496  001CCA  6E04               	movwf	delayMili@i^0,c	;volatile
  2497  001CCC  EF6A  F00E         	goto	l1989
  2498  001CD0                     l1987:
  2499                           
  2500                           ;lcd.c: 15:  }
  2501  001CD0  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  2502  001CD2  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  2503  001CD4                     l1989:
  2504  001CD4  5001               	movf	delayMili@a^0,w,c
  2505  001CD6  5C04               	subwf	delayMili@i^0,w,c	;volatile
  2506  001CD8  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  2507  001CDA  0A80               	xorlw	128
  2508  001CDC  6E03               	movwf	??_delayMili^0,c
  2509  001CDE  5002               	movf	(delayMili@a+1)^0,w,c
  2510  001CE0  0A80               	xorlw	128
  2511  001CE2  5803               	subwfb	??_delayMili^0,w,c
  2512  001CE4  A0D8               	btfss	status,0,c
  2513  001CE6  EF77  F00E         	goto	u1891
  2514  001CEA  EF79  F00E         	goto	u1890
  2515  001CEE                     u1891:
  2516  001CEE  EF68  F00E         	goto	l1987
  2517  001CF2                     u1890:
  2518  001CF2  0012               	return		;funcret
  2519  001CF4                     __end_of_delayMili:
  2520                           	callstack 0
  2521                           
  2522 ;; *************** function _kpRead *****************
  2523 ;; Defined at:
  2524 ;;		line 14 in file "keypad.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;		None
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;		None
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  2    0[COMRAM] unsigned int 
  2531 ;; Registers used:
  2532 ;;		None
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2538 ;;      Params:         2       0       0       0       0       0       0
  2539 ;;      Locals:         0       0       0       0       0       0       0
  2540 ;;      Temps:          0       0       0       0       0       0       0
  2541 ;;      Totals:         2       0       0       0       0       0       0
  2542 ;;Total ram usage:        2 bytes
  2543 ;; Hardware stack levels used: 1
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_main
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text14
  2552  001E68                     __ptext14:
  2553                           	callstack 0
  2554  001E68                     _kpRead:
  2555                           	callstack 30
  2556  001E68                     
  2557                           ;keypad.c: 15:     return keys;
  2558  001E68  C03E  F001         	movff	_keys,?_kpRead
  2559  001E6C  C03F  F002         	movff	_keys+1,?_kpRead+1
  2560  001E70  0012               	return		;funcret
  2561  001E72                     __end_of_kpRead:
  2562                           	callstack 0
  2563                           
  2564 ;; *************** function _kpInit *****************
  2565 ;; Defined at:
  2566 ;;		line 54 in file "keypad.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;		None
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, status,2, status,0, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2580 ;;      Params:         0       0       0       0       0       0       0
  2581 ;;      Locals:         0       0       0       0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0
  2583 ;;      Totals:         0       0       0       0       0       0       0
  2584 ;;Total ram usage:        0 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; Hardware stack levels required when called: 2
  2587 ;; This function calls:
  2588 ;;		_pinMode
  2589 ;;		_soInit
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text15
  2596  001C60                     __ptext15:
  2597                           	callstack 0
  2598  001C60                     _kpInit:
  2599                           	callstack 28
  2600  001C60                     
  2601                           ;keypad.c: 55:   soInit();
  2602  001C60  ECBC  F00D         	call	_soInit	;wreg free
  2603                           
  2604                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  2605  001C64  0E00               	movlw	0
  2606  001C66  6E02               	movwf	(pinMode@pin+1)^0,c
  2607  001C68  0E0A               	movlw	10
  2608  001C6A  6E01               	movwf	pinMode@pin^0,c
  2609  001C6C  0E00               	movlw	0
  2610  001C6E  6E04               	movwf	(pinMode@type+1)^0,c
  2611  001C70  0E01               	movlw	1
  2612  001C72  6E03               	movwf	pinMode@type^0,c
  2613  001C74  ECAD  F007         	call	_pinMode	;wreg free
  2614                           
  2615                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  2616  001C78  0E00               	movlw	0
  2617  001C7A  6E02               	movwf	(pinMode@pin+1)^0,c
  2618  001C7C  0E09               	movlw	9
  2619  001C7E  6E01               	movwf	pinMode@pin^0,c
  2620  001C80  0E00               	movlw	0
  2621  001C82  6E04               	movwf	(pinMode@type+1)^0,c
  2622  001C84  0E01               	movlw	1
  2623  001C86  6E03               	movwf	pinMode@type^0,c
  2624  001C88  ECAD  F007         	call	_pinMode	;wreg free
  2625  001C8C                     
  2626                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  2627  001C8C  0E0C               	movlw	12
  2628  001C8E  6EC1               	movwf	193,c	;volatile
  2629  001C90  0012               	return		;funcret
  2630  001C92                     __end_of_kpInit:
  2631                           	callstack 0
  2632                           
  2633 ;; *************** function _soInit *****************
  2634 ;; Defined at:
  2635 ;;		line 3 in file "so.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2649 ;;      Params:         0       0       0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0
  2652 ;;      Totals:         0       0       0       0       0       0       0
  2653 ;;Total ram usage:        0 bytes
  2654 ;; Hardware stack levels used: 1
  2655 ;; Hardware stack levels required when called: 1
  2656 ;; This function calls:
  2657 ;;		_pinMode
  2658 ;; This function is called by:
  2659 ;;		_kpInit
  2660 ;;		_lcdInit
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text16
  2665  001B78                     __ptext16:
  2666                           	callstack 0
  2667  001B78                     _soInit:
  2668                           	callstack 28
  2669  001B78                     
  2670                           ;so.c: 4:  pinMode(PIN_D7, 0);
  2671  001B78  0E00               	movlw	0
  2672  001B7A  6E02               	movwf	(pinMode@pin+1)^0,c
  2673  001B7C  0E1F               	movlw	31
  2674  001B7E  6E01               	movwf	pinMode@pin^0,c
  2675  001B80  0E00               	movlw	0
  2676  001B82  6E04               	movwf	(pinMode@type+1)^0,c
  2677  001B84  0E00               	movlw	0
  2678  001B86  6E03               	movwf	pinMode@type^0,c
  2679  001B88  ECAD  F007         	call	_pinMode	;wreg free
  2680                           
  2681                           ;so.c: 5:  pinMode(PIN_B0, 0);
  2682  001B8C  0E00               	movlw	0
  2683  001B8E  6E02               	movwf	(pinMode@pin+1)^0,c
  2684  001B90  0E08               	movlw	8
  2685  001B92  6E01               	movwf	pinMode@pin^0,c
  2686  001B94  0E00               	movlw	0
  2687  001B96  6E04               	movwf	(pinMode@type+1)^0,c
  2688  001B98  0E00               	movlw	0
  2689  001B9A  6E03               	movwf	pinMode@type^0,c
  2690  001B9C  ECAD  F007         	call	_pinMode	;wreg free
  2691                           
  2692                           ;so.c: 6:  pinMode(PIN_D6, 0);
  2693  001BA0  0E00               	movlw	0
  2694  001BA2  6E02               	movwf	(pinMode@pin+1)^0,c
  2695  001BA4  0E1E               	movlw	30
  2696  001BA6  6E01               	movwf	pinMode@pin^0,c
  2697  001BA8  0E00               	movlw	0
  2698  001BAA  6E04               	movwf	(pinMode@type+1)^0,c
  2699  001BAC  0E00               	movlw	0
  2700  001BAE  6E03               	movwf	pinMode@type^0,c
  2701  001BB0  ECAD  F007         	call	_pinMode	;wreg free
  2702  001BB4  0012               	return		;funcret
  2703  001BB6                     __end_of_soInit:
  2704                           	callstack 0
  2705                           
  2706 ;; *************** function _kpDebounce *****************
  2707 ;; Defined at:
  2708 ;;		line 27 in file "keypad.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  i               2   12[COMRAM] int 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1    wreg      void 
  2715 ;; Registers used:
  2716 ;;		wreg, status,2, status,0, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2722 ;;      Params:         0       0       0       0       0       0       0
  2723 ;;      Locals:         2       0       0       0       0       0       0
  2724 ;;      Temps:          3       0       0       0       0       0       0
  2725 ;;      Totals:         5       0       0       0       0       0       0
  2726 ;;Total ram usage:        5 bytes
  2727 ;; Hardware stack levels used: 1
  2728 ;; Hardware stack levels required when called: 3
  2729 ;; This function calls:
  2730 ;;		_digitalRead
  2731 ;;		_soWrite
  2732 ;; This function is called by:
  2733 ;;		_main
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text17
  2738  001312                     __ptext17:
  2739                           	callstack 0
  2740  001312                     _kpDebounce:
  2741                           	callstack 27
  2742  001312                     
  2743                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  2744  001312  0E00               	movlw	0
  2745  001314  6E3D               	movwf	(kpDebounce@newRead+1)^0,c
  2746  001316  0E00               	movlw	0
  2747  001318  6E3C               	movwf	kpDebounce@newRead^0,c
  2748                           
  2749                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  2750  00131A  0E00               	movlw	0
  2751  00131C  6E0E               	movwf	(kpDebounce@i+1)^0,c
  2752  00131E  0E00               	movlw	0
  2753  001320  6E0D               	movwf	kpDebounce@i^0,c
  2754  001322                     l2247:
  2755  001322  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  2756  001324  EF9D  F009         	goto	u2181
  2757  001328  500E               	movf	(kpDebounce@i+1)^0,w,c
  2758  00132A  E109               	bnz	u2180
  2759  00132C  0E05               	movlw	5
  2760  00132E  5C0D               	subwf	kpDebounce@i^0,w,c
  2761  001330  A0D8               	btfss	status,0,c
  2762  001332  EF9D  F009         	goto	u2181
  2763  001336  EF9F  F009         	goto	u2180
  2764  00133A                     u2181:
  2765  00133A  EFA1  F009         	goto	l2251
  2766  00133E                     u2180:
  2767  00133E  EF02  F00A         	goto	l2263
  2768  001342                     l2251:
  2769                           
  2770                           ;keypad.c: 35:       soWrite(1<<(i+3));
  2771  001342  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2772  001346  0E03               	movlw	3
  2773  001348  260A               	addwf	??_kpDebounce^0,f,c
  2774  00134A  0E01               	movlw	1
  2775  00134C  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2776  00134E  0E00               	movlw	0
  2777  001350  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2778  001352  2A0A               	incf	??_kpDebounce^0,f,c
  2779  001354  EFAF  F009         	goto	u2194
  2780  001358                     u2195:
  2781  001358  90D8               	bcf	status,0,c
  2782  00135A  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2783  00135C  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2784  00135E                     u2194:
  2785  00135E  2E0A               	decfsz	??_kpDebounce^0,f,c
  2786  001360  EFAC  F009         	goto	u2195
  2787  001364  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  2788  001368  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  2789  00136C  ECCA  F00C         	call	_soWrite	;wreg free
  2790                           
  2791                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  2792  001370  0E00               	movlw	0
  2793  001372  6E02               	movwf	(digitalRead@pin+1)^0,c
  2794  001374  0E0A               	movlw	10
  2795  001376  6E01               	movwf	digitalRead@pin^0,c
  2796  001378  ECD4  F008         	call	_digitalRead	;wreg free
  2797  00137C  5001               	movf	?_digitalRead^0,w,c
  2798  00137E  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2799  001380  B4D8               	btfsc	status,2,c
  2800  001382  EFC5  F009         	goto	u2201
  2801  001386  EFC7  F009         	goto	u2200
  2802  00138A                     u2201:
  2803  00138A  EFDA  F009         	goto	l2255
  2804  00138E                     u2200:
  2805  00138E                     
  2806                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  2807  00138E  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2808  001392  0E01               	movlw	1
  2809  001394  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2810  001396  0E00               	movlw	0
  2811  001398  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2812  00139A  2A0A               	incf	??_kpDebounce^0,f,c
  2813  00139C  EFD3  F009         	goto	u2214
  2814  0013A0                     u2215:
  2815  0013A0  90D8               	bcf	status,0,c
  2816  0013A2  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2817  0013A4  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2818  0013A6                     u2214:
  2819  0013A6  2E0A               	decfsz	??_kpDebounce^0,f,c
  2820  0013A8  EFD0  F009         	goto	u2215
  2821  0013AC  500B               	movf	(??_kpDebounce+1)^0,w,c
  2822  0013AE  123C               	iorwf	kpDebounce@newRead^0,f,c
  2823  0013B0  500C               	movf	(??_kpDebounce+2)^0,w,c
  2824  0013B2  123D               	iorwf	(kpDebounce@newRead+1)^0,f,c
  2825  0013B4                     l2255:
  2826                           
  2827                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  2828  0013B4  0E00               	movlw	0
  2829  0013B6  6E02               	movwf	(digitalRead@pin+1)^0,c
  2830  0013B8  0E09               	movlw	9
  2831  0013BA  6E01               	movwf	digitalRead@pin^0,c
  2832  0013BC  ECD4  F008         	call	_digitalRead	;wreg free
  2833  0013C0  5001               	movf	?_digitalRead^0,w,c
  2834  0013C2  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2835  0013C4  B4D8               	btfsc	status,2,c
  2836  0013C6  EFE7  F009         	goto	u2221
  2837  0013CA  EFE9  F009         	goto	u2220
  2838  0013CE                     u2221:
  2839  0013CE  EFFE  F009         	goto	l2259
  2840  0013D2                     u2220:
  2841  0013D2                     
  2842                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  2843  0013D2  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2844  0013D6  0E05               	movlw	5
  2845  0013D8  260A               	addwf	??_kpDebounce^0,f,c
  2846  0013DA  0E01               	movlw	1
  2847  0013DC  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2848  0013DE  0E00               	movlw	0
  2849  0013E0  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2850  0013E2  2A0A               	incf	??_kpDebounce^0,f,c
  2851  0013E4  EFF7  F009         	goto	u2234
  2852  0013E8                     u2235:
  2853  0013E8  90D8               	bcf	status,0,c
  2854  0013EA  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2855  0013EC  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2856  0013EE                     u2234:
  2857  0013EE  2E0A               	decfsz	??_kpDebounce^0,f,c
  2858  0013F0  EFF4  F009         	goto	u2235
  2859  0013F4  500B               	movf	(??_kpDebounce+1)^0,w,c
  2860  0013F6  123C               	iorwf	kpDebounce@newRead^0,f,c
  2861  0013F8  500C               	movf	(??_kpDebounce+2)^0,w,c
  2862  0013FA  123D               	iorwf	(kpDebounce@newRead+1)^0,f,c
  2863  0013FC                     l2259:
  2864                           
  2865                           ;keypad.c: 42:     }
  2866  0013FC  4A0D               	infsnz	kpDebounce@i^0,f,c
  2867  0013FE  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  2868  001400  EF91  F009         	goto	l2247
  2869  001404                     l2263:
  2870                           
  2871                           ;keypad.c: 43:     if (oldRead == newRead) {
  2872  001404  503C               	movf	kpDebounce@newRead^0,w,c
  2873  001406  183A               	xorwf	kpDebounce@oldRead^0,w,c
  2874  001408  E107               	bnz	u2241
  2875  00140A  503D               	movf	(kpDebounce@newRead+1)^0,w,c
  2876  00140C  183B               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  2877  00140E  A4D8               	btfss	status,2,c
  2878  001410  EF0C  F00A         	goto	u2241
  2879  001414  EF0E  F00A         	goto	u2240
  2880  001418                     u2241:
  2881  001418  EF11  F00A         	goto	l2267
  2882  00141C                     u2240:
  2883  00141C                     
  2884                           ;keypad.c: 44:         tempo--;
  2885  00141C  0641               	decf	kpDebounce@tempo^0,f,c
  2886                           
  2887                           ;keypad.c: 45:     } else {
  2888  00141E  EF17  F00A         	goto	l129
  2889  001422                     l2267:
  2890                           
  2891                           ;keypad.c: 46:         tempo = 1;
  2892  001422  0E01               	movlw	1
  2893  001424  6E41               	movwf	kpDebounce@tempo^0,c
  2894  001426                     
  2895                           ;keypad.c: 47:         oldRead = newRead;
  2896  001426  C03C  F03A         	movff	kpDebounce@newRead,kpDebounce@oldRead
  2897  00142A  C03D  F03B         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  2898  00142E                     l129:
  2899                           
  2900                           ;keypad.c: 49:     if (tempo == 0) {
  2901  00142E  5041               	movf	kpDebounce@tempo^0,w,c
  2902  001430  A4D8               	btfss	status,2,c
  2903  001432  EF1D  F00A         	goto	u2251
  2904  001436  EF1F  F00A         	goto	u2250
  2905  00143A                     u2251:
  2906  00143A  EF23  F00A         	goto	l131
  2907  00143E                     u2250:
  2908  00143E                     
  2909                           ;keypad.c: 50:         keys = oldRead;
  2910  00143E  C03A  F03E         	movff	kpDebounce@oldRead,_keys
  2911  001442  C03B  F03F         	movff	kpDebounce@oldRead+1,_keys+1
  2912  001446                     l131:
  2913  001446  0012               	return		;funcret
  2914  001448                     __end_of_kpDebounce:
  2915                           	callstack 0
  2916                           
  2917 ;; *************** function _soWrite *****************
  2918 ;; Defined at:
  2919 ;;		line 18 in file "so.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  value           2    6[COMRAM] int 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  i               1    8[COMRAM] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2933 ;;      Params:         2       0       0       0       0       0       0
  2934 ;;      Locals:         1       0       0       0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0
  2936 ;;      Totals:         3       0       0       0       0       0       0
  2937 ;;Total ram usage:        3 bytes
  2938 ;; Hardware stack levels used: 1
  2939 ;; Hardware stack levels required when called: 2
  2940 ;; This function calls:
  2941 ;;		_PulseClockData
  2942 ;;		_PulseEnClock
  2943 ;;		_digitalWrite
  2944 ;; This function is called by:
  2945 ;;		_kpDebounce
  2946 ;;		_pushNibble
  2947 ;;		_pushByte
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           	psect	text18
  2952  001994                     __ptext18:
  2953                           	callstack 0
  2954  001994                     _soWrite:
  2955                           	callstack 25
  2956  001994                     
  2957                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  2958  001994  0E00               	movlw	0
  2959  001996  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2960  001998  0E08               	movlw	8
  2961  00199A  6E01               	movwf	digitalWrite@pin^0,c
  2962  00199C  0E00               	movlw	0
  2963  00199E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2964  0019A0  0E00               	movlw	0
  2965  0019A2  6E03               	movwf	digitalWrite@value^0,c
  2966  0019A4  EC86  F006         	call	_digitalWrite	;wreg free
  2967  0019A8                     
  2968                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  2969  0019A8  0E00               	movlw	0
  2970  0019AA  6E09               	movwf	soWrite@i^0,c
  2971  0019AC                     l1957:
  2972                           
  2973                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  2974  0019AC  0E00               	movlw	0
  2975  0019AE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2976  0019B0  0E1E               	movlw	30
  2977  0019B2  6E01               	movwf	digitalWrite@pin^0,c
  2978  0019B4  0E80               	movlw	128
  2979  0019B6  1407               	andwf	soWrite@value^0,w,c
  2980  0019B8  6E03               	movwf	digitalWrite@value^0,c
  2981  0019BA  6A04               	clrf	(digitalWrite@value+1)^0,c
  2982  0019BC  EC86  F006         	call	_digitalWrite	;wreg free
  2983                           
  2984                           ;so.c: 23:   PulseClockData();
  2985  0019C0  ECA6  F00E         	call	_PulseClockData	;wreg free
  2986  0019C4                     
  2987                           ;so.c: 24:   value <<= 1;
  2988  0019C4  90D8               	bcf	status,0,c
  2989  0019C6  3607               	rlcf	soWrite@value^0,f,c
  2990  0019C8  3608               	rlcf	(soWrite@value+1)^0,f,c
  2991  0019CA                     
  2992                           ;so.c: 25:  }
  2993  0019CA  2A09               	incf	soWrite@i^0,f,c
  2994  0019CC  0E07               	movlw	7
  2995  0019CE  6409               	cpfsgt	soWrite@i^0,c
  2996  0019D0  EFEC  F00C         	goto	u1841
  2997  0019D4  EFEE  F00C         	goto	u1840
  2998  0019D8                     u1841:
  2999  0019D8  EFD6  F00C         	goto	l1957
  3000  0019DC                     u1840:
  3001  0019DC                     
  3002                           ;so.c: 26:  PulseEnClock();
  3003  0019DC  EC91  F00E         	call	_PulseEnClock	;wreg free
  3004  0019E0  0012               	return		;funcret
  3005  0019E2                     __end_of_soWrite:
  3006                           	callstack 0
  3007                           
  3008 ;; *************** function _PulseEnClock *****************
  3009 ;; Defined at:
  3010 ;;		line 9 in file "so.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;		None
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;		None
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3024 ;;      Params:         0       0       0       0       0       0       0
  3025 ;;      Locals:         0       0       0       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0
  3027 ;;      Totals:         0       0       0       0       0       0       0
  3028 ;;Total ram usage:        0 bytes
  3029 ;; Hardware stack levels used: 1
  3030 ;; Hardware stack levels required when called: 1
  3031 ;; This function calls:
  3032 ;;		_digitalWrite
  3033 ;; This function is called by:
  3034 ;;		_soWrite
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text19
  3039  001D22                     __ptext19:
  3040                           	callstack 0
  3041  001D22                     _PulseEnClock:
  3042                           	callstack 25
  3043  001D22                     
  3044                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  3045  001D22  0E00               	movlw	0
  3046  001D24  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3047  001D26  0E1F               	movlw	31
  3048  001D28  6E01               	movwf	digitalWrite@pin^0,c
  3049  001D2A  0E00               	movlw	0
  3050  001D2C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3051  001D2E  0E01               	movlw	1
  3052  001D30  6E03               	movwf	digitalWrite@value^0,c
  3053  001D32  EC86  F006         	call	_digitalWrite	;wreg free
  3054                           
  3055                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  3056  001D36  0E00               	movlw	0
  3057  001D38  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3058  001D3A  0E1F               	movlw	31
  3059  001D3C  6E01               	movwf	digitalWrite@pin^0,c
  3060  001D3E  0E00               	movlw	0
  3061  001D40  6E04               	movwf	(digitalWrite@value+1)^0,c
  3062  001D42  0E00               	movlw	0
  3063  001D44  6E03               	movwf	digitalWrite@value^0,c
  3064  001D46  EC86  F006         	call	_digitalWrite	;wreg free
  3065  001D4A  0012               	return		;funcret
  3066  001D4C                     __end_of_PulseEnClock:
  3067                           	callstack 0
  3068                           
  3069 ;; *************** function _PulseClockData *****************
  3070 ;; Defined at:
  3071 ;;		line 14 in file "so.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3085 ;;      Params:         0       0       0       0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0
  3088 ;;      Totals:         0       0       0       0       0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 1
  3092 ;; This function calls:
  3093 ;;		_digitalWrite
  3094 ;; This function is called by:
  3095 ;;		_soWrite
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text20
  3100  001D4C                     __ptext20:
  3101                           	callstack 0
  3102  001D4C                     _PulseClockData:
  3103                           	callstack 25
  3104  001D4C                     
  3105                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  3106  001D4C  0E00               	movlw	0
  3107  001D4E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3108  001D50  0E08               	movlw	8
  3109  001D52  6E01               	movwf	digitalWrite@pin^0,c
  3110  001D54  0E00               	movlw	0
  3111  001D56  6E04               	movwf	(digitalWrite@value+1)^0,c
  3112  001D58  0E01               	movlw	1
  3113  001D5A  6E03               	movwf	digitalWrite@value^0,c
  3114  001D5C  EC86  F006         	call	_digitalWrite	;wreg free
  3115                           
  3116                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  3117  001D60  0E00               	movlw	0
  3118  001D62  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3119  001D64  0E08               	movlw	8
  3120  001D66  6E01               	movwf	digitalWrite@pin^0,c
  3121  001D68  0E00               	movlw	0
  3122  001D6A  6E04               	movwf	(digitalWrite@value+1)^0,c
  3123  001D6C  0E00               	movlw	0
  3124  001D6E  6E03               	movwf	digitalWrite@value^0,c
  3125  001D70  EC86  F006         	call	_digitalWrite	;wreg free
  3126  001D74  0012               	return		;funcret
  3127  001D76                     __end_of_PulseClockData:
  3128                           	callstack 0
  3129                           
  3130 ;; *************** function _dsReadData *****************
  3131 ;; Defined at:
  3132 ;;		line 29 in file "ds1307.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  address         2   13[COMRAM] int 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  result          2   16[COMRAM] int 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  2   13[COMRAM] int 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3146 ;;      Params:         2       0       0       0       0       0       0
  3147 ;;      Locals:         2       0       0       0       0       0       0
  3148 ;;      Temps:          1       0       0       0       0       0       0
  3149 ;;      Totals:         5       0       0       0       0       0       0
  3150 ;;Total ram usage:        5 bytes
  3151 ;; Hardware stack levels used: 1
  3152 ;; Hardware stack levels required when called: 4
  3153 ;; This function calls:
  3154 ;;		_i2cReadByte
  3155 ;;		_i2cWriteByte
  3156 ;; This function is called by:
  3157 ;;		_main
  3158 ;;		_dsStartClock
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text21
  3163  001A2A                     __ptext21:
  3164                           	callstack 0
  3165  001A2A                     _dsReadData:
  3166                           	callstack 26
  3167  001A2A                     
  3168                           ;ds1307.c: 30:  int result;;ds1307.c: 31:  i2cWriteByte(1,0,(0x68<<1) | 0);
  3169  001A2A  0E00               	movlw	0
  3170  001A2C  6E08               	movwf	i2cWriteByte@send_stop^0,c
  3171  001A2E  0ED0               	movlw	208
  3172  001A30  6E09               	movwf	i2cWriteByte@byte^0,c
  3173  001A32  0E01               	movlw	1
  3174  001A34  ECC4  F00B         	call	_i2cWriteByte
  3175                           
  3176                           ;ds1307.c: 32:  i2cWriteByte(0,0,address);
  3177  001A38  0E00               	movlw	0
  3178  001A3A  6E08               	movwf	i2cWriteByte@send_stop^0,c
  3179  001A3C  C00E  F009         	movff	dsReadData@address,i2cWriteByte@byte
  3180  001A40  0E00               	movlw	0
  3181  001A42  ECC4  F00B         	call	_i2cWriteByte
  3182                           
  3183                           ;ds1307.c: 33:  i2cWriteByte(1,0, (0x68<<1) | 1);
  3184  001A46  0E00               	movlw	0
  3185  001A48  6E08               	movwf	i2cWriteByte@send_stop^0,c
  3186  001A4A  0ED1               	movlw	209
  3187  001A4C  6E09               	movwf	i2cWriteByte@byte^0,c
  3188  001A4E  0E01               	movlw	1
  3189  001A50  ECC4  F00B         	call	_i2cWriteByte
  3190                           
  3191                           ;ds1307.c: 34:  result = i2cReadByte(1,1 );
  3192  001A54  0E01               	movlw	1
  3193  001A56  6E08               	movwf	i2cReadByte@send_stop^0,c
  3194  001A58  0E01               	movlw	1
  3195  001A5A  EC78  F00C         	call	_i2cReadByte
  3196  001A5E  6E10               	movwf	??_dsReadData^0,c
  3197  001A60  5010               	movf	??_dsReadData^0,w,c
  3198  001A62  6E11               	movwf	dsReadData@result^0,c
  3199  001A64  6A12               	clrf	(dsReadData@result+1)^0,c
  3200  001A66                     
  3201                           ;ds1307.c: 35:  return result;
  3202  001A66  C011  F00E         	movff	dsReadData@result,?_dsReadData
  3203  001A6A  C012  F00F         	movff	dsReadData@result+1,?_dsReadData+1
  3204  001A6E  0012               	return		;funcret
  3205  001A70                     __end_of_dsReadData:
  3206                           	callstack 0
  3207                           
  3208 ;; *************** function _i2cWriteByte *****************
  3209 ;; Defined at:
  3210 ;;		line 113 in file "i2c.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  send_start      1    wreg     unsigned char 
  3213 ;;  send_stop       1    7[COMRAM] unsigned char 
  3214 ;;  byte            1    8[COMRAM] unsigned char 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  send_start      1    9[COMRAM] unsigned char 
  3217 ;;  bit             1   10[COMRAM] unsigned char 
  3218 ;;  nack            1    0        unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      unsigned char 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3228 ;;      Params:         2       0       0       0       0       0       0
  3229 ;;      Locals:         2       0       0       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0       0       0
  3231 ;;      Totals:         4       0       0       0       0       0       0
  3232 ;;Total ram usage:        4 bytes
  3233 ;; Hardware stack levels used: 1
  3234 ;; Hardware stack levels required when called: 3
  3235 ;; This function calls:
  3236 ;;		_i2c_read_bit
  3237 ;;		_i2c_start
  3238 ;;		_i2c_stop
  3239 ;;		_i2c_write_bit
  3240 ;; This function is called by:
  3241 ;;		_dsReadData
  3242 ;;		_dsWriteData
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           	psect	text22
  3247  001788                     __ptext22:
  3248                           	callstack 0
  3249  001788                     _i2cWriteByte:
  3250                           	callstack 26
  3251                           
  3252                           ;incstack = 0
  3253                           ;i2cWriteByte@send_start stored from wreg
  3254  001788  6E0A               	movwf	i2cWriteByte@send_start^0,c
  3255  00178A                     
  3256                           ;i2c.c: 114:  unsigned char bit;;i2c.c: 115:  unsigned char nack;;i2c.c: 116:  if (send_
      +                          start) {
  3257  00178A  500A               	movf	i2cWriteByte@send_start^0,w,c
  3258  00178C  B4D8               	btfsc	status,2,c
  3259  00178E  EFCB  F00B         	goto	u1971
  3260  001792  EFCD  F00B         	goto	u1970
  3261  001796                     u1971:
  3262  001796  EFCF  F00B         	goto	l2077
  3263  00179A                     u1970:
  3264  00179A                     
  3265                           ;i2c.c: 117:   i2c_start();
  3266  00179A  EC38  F00D         	call	_i2c_start	;wreg free
  3267  00179E                     l2077:
  3268                           
  3269                           ;i2c.c: 119:  for (bit = 0; bit < 8; bit++) {
  3270  00179E  0E00               	movlw	0
  3271  0017A0  6E0B               	movwf	i2cWriteByte@bit^0,c
  3272  0017A2                     l2083:
  3273                           
  3274                           ;i2c.c: 120:   i2c_write_bit((byte & 0x80) != 0);
  3275  0017A2  BE09               	btfsc	i2cWriteByte@byte^0,7,c
  3276  0017A4  EFD6  F00B         	goto	u1981
  3277  0017A8  EFD9  F00B         	goto	u1980
  3278  0017AC                     u1981:
  3279  0017AC  0E01               	movlw	1
  3280  0017AE  EFDA  F00B         	goto	u1990
  3281  0017B2                     u1980:
  3282  0017B2  0E00               	movlw	0
  3283  0017B4                     u1990:
  3284  0017B4  EC21  F00C         	call	_i2c_write_bit
  3285  0017B8                     
  3286                           ;i2c.c: 121:   byte <<= 1;
  3287  0017B8  90D8               	bcf	status,0,c
  3288  0017BA  3609               	rlcf	i2cWriteByte@byte^0,f,c
  3289  0017BC                     
  3290                           ;i2c.c: 122:  }
  3291  0017BC  2A0B               	incf	i2cWriteByte@bit^0,f,c
  3292  0017BE  0E07               	movlw	7
  3293  0017C0  640B               	cpfsgt	i2cWriteByte@bit^0,c
  3294  0017C2  EFE5  F00B         	goto	u2001
  3295  0017C6  EFE7  F00B         	goto	u2000
  3296  0017CA                     u2001:
  3297  0017CA  EFD1  F00B         	goto	l2083
  3298  0017CE                     u2000:
  3299  0017CE  EC49  F00E         	call	_i2c_read_bit	;wreg free
  3300  0017D2                     
  3301                           ;i2c.c: 124:  if (send_stop) {
  3302  0017D2  5008               	movf	i2cWriteByte@send_stop^0,w,c
  3303  0017D4  B4D8               	btfsc	status,2,c
  3304  0017D6  EFEF  F00B         	goto	u2011
  3305  0017DA  EFF1  F00B         	goto	u2010
  3306  0017DE                     u2011:
  3307  0017DE  EFF3  F00B         	goto	l305
  3308  0017E2                     u2010:
  3309  0017E2                     
  3310                           ;i2c.c: 125:   i2c_stop();
  3311  0017E2  EC7A  F00E         	call	_i2c_stop	;wreg free
  3312  0017E6                     l305:
  3313  0017E6  0012               	return		;funcret
  3314  0017E8                     __end_of_i2cWriteByte:
  3315                           	callstack 0
  3316                           
  3317 ;; *************** function _i2c_start *****************
  3318 ;; Defined at:
  3319 ;;		line 52 in file "i2c.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;		None
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      void 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3333 ;;      Params:         0       0       0       0       0       0       0
  3334 ;;      Locals:         0       0       0       0       0       0       0
  3335 ;;      Temps:          0       0       0       0       0       0       0
  3336 ;;      Totals:         0       0       0       0       0       0       0
  3337 ;;Total ram usage:        0 bytes
  3338 ;; Hardware stack levels used: 1
  3339 ;; Hardware stack levels required when called: 2
  3340 ;; This function calls:
  3341 ;;		_I2C_delay
  3342 ;;		_clear_SCL
  3343 ;;		_clear_SDA
  3344 ;;		_read_SCL
  3345 ;;		_read_SDA
  3346 ;; This function is called by:
  3347 ;;		_i2cWriteByte
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text23
  3352  001A70                     __ptext23:
  3353                           	callstack 0
  3354  001A70                     _i2c_start:
  3355                           	callstack 26
  3356  001A70                     
  3357                           ;i2c.c: 54:  if (started) {
  3358  001A70  5040               	movf	_started^0,w,c
  3359  001A72  B4D8               	btfsc	status,2,c
  3360  001A74  EF3E  F00D         	goto	u1901
  3361  001A78  EF40  F00D         	goto	u1900
  3362  001A7C                     u1901:
  3363  001A7C  EF50  F00D         	goto	l2003
  3364  001A80                     u1900:
  3365  001A80                     
  3366                           ;i2c.c: 55:   read_SDA();
  3367  001A80  ECF8  F00D         	call	_read_SDA	;wreg free
  3368  001A84                     
  3369                           ;i2c.c: 56:   I2C_delay();
  3370  001A84  EC3A  F00F         	call	_I2C_delay	;wreg free
  3371  001A88                     l1999:
  3372  001A88  EC14  F00E         	call	_read_SCL	;wreg free
  3373  001A8C  0900               	iorlw	0
  3374  001A8E  B4D8               	btfsc	status,2,c
  3375  001A90  EF4C  F00D         	goto	u1911
  3376  001A94  EF4E  F00D         	goto	u1910
  3377  001A98                     u1911:
  3378  001A98  EF44  F00D         	goto	l1999
  3379  001A9C                     u1910:
  3380  001A9C                     
  3381                           ;i2c.c: 59:   I2C_delay();
  3382  001A9C  EC3A  F00F         	call	_I2C_delay	;wreg free
  3383  001AA0                     l2003:
  3384                           
  3385                           ;i2c.c: 61:  if (read_SDA() == 0) {
  3386  001AA0  ECF8  F00D         	call	_read_SDA	;wreg free
  3387  001AA4                     
  3388                           ;i2c.c: 65:  clear_SDA();
  3389  001AA4  ECBB  F00E         	call	_clear_SDA	;wreg free
  3390  001AA8                     
  3391                           ;i2c.c: 66:  I2C_delay();
  3392  001AA8  EC3A  F00F         	call	_I2C_delay	;wreg free
  3393  001AAC                     
  3394                           ;i2c.c: 67:  clear_SCL();
  3395  001AAC  ECD0  F00E         	call	_clear_SCL	;wreg free
  3396  001AB0                     
  3397                           ;i2c.c: 68:  started = 1;
  3398  001AB0  0E01               	movlw	1
  3399  001AB2  6E40               	movwf	_started^0,c
  3400  001AB4  0012               	return		;funcret
  3401  001AB6                     __end_of_i2c_start:
  3402                           	callstack 0
  3403                           
  3404 ;; *************** function _i2cReadByte *****************
  3405 ;; Defined at:
  3406 ;;		line 131 in file "i2c.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  nack            1    wreg     unsigned char 
  3409 ;;  send_stop       1    7[COMRAM] unsigned char 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  nack            1    9[COMRAM] unsigned char 
  3412 ;;  bit             2   10[COMRAM] unsigned int 
  3413 ;;  byte            1   12[COMRAM] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      unsigned char 
  3416 ;; Registers used:
  3417 ;;		wreg, status,2, status,0, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3423 ;;      Params:         1       0       0       0       0       0       0
  3424 ;;      Locals:         4       0       0       0       0       0       0
  3425 ;;      Temps:          1       0       0       0       0       0       0
  3426 ;;      Totals:         6       0       0       0       0       0       0
  3427 ;;Total ram usage:        6 bytes
  3428 ;; Hardware stack levels used: 1
  3429 ;; Hardware stack levels required when called: 3
  3430 ;; This function calls:
  3431 ;;		_i2c_read_bit
  3432 ;;		_i2c_stop
  3433 ;;		_i2c_write_bit
  3434 ;; This function is called by:
  3435 ;;		_dsReadData
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text24
  3440  0018F0                     __ptext24:
  3441                           	callstack 0
  3442  0018F0                     _i2cReadByte:
  3443                           	callstack 26
  3444                           
  3445                           ;incstack = 0
  3446                           ;i2cReadByte@nack stored from wreg
  3447  0018F0  6E0A               	movwf	i2cReadByte@nack^0,c
  3448  0018F2                     
  3449                           ;i2c.c: 132:  unsigned char byte = 0;
  3450  0018F2  0E00               	movlw	0
  3451  0018F4  6E0D               	movwf	i2cReadByte@byte^0,c
  3452                           
  3453                           ;i2c.c: 133:  unsigned bit;;i2c.c: 134:  for (bit = 0; bit < 8; bit++) {
  3454  0018F6  0E00               	movlw	0
  3455  0018F8  6E0C               	movwf	(i2cReadByte@bit+1)^0,c
  3456  0018FA  0E00               	movlw	0
  3457  0018FC  6E0B               	movwf	i2cReadByte@bit^0,c
  3458  0018FE                     l2105:
  3459                           
  3460                           ;i2c.c: 135:   byte = (byte << 1) | i2c_read_bit();
  3461  0018FE  EC49  F00E         	call	_i2c_read_bit	;wreg free
  3462  001902  6E09               	movwf	??_i2cReadByte^0,c
  3463  001904  500D               	movf	i2cReadByte@byte^0,w,c
  3464  001906  240D               	addwf	i2cReadByte@byte^0,w,c
  3465  001908  1009               	iorwf	??_i2cReadByte^0,w,c
  3466  00190A  6E0D               	movwf	i2cReadByte@byte^0,c
  3467  00190C                     
  3468                           ;i2c.c: 136:  }
  3469  00190C  4A0B               	infsnz	i2cReadByte@bit^0,f,c
  3470  00190E  2A0C               	incf	(i2cReadByte@bit+1)^0,f,c
  3471  001910  500C               	movf	(i2cReadByte@bit+1)^0,w,c
  3472  001912  E109               	bnz	u2020
  3473  001914  0E08               	movlw	8
  3474  001916  5C0B               	subwf	i2cReadByte@bit^0,w,c
  3475  001918  A0D8               	btfss	status,0,c
  3476  00191A  EF91  F00C         	goto	u2021
  3477  00191E  EF93  F00C         	goto	u2020
  3478  001922                     u2021:
  3479  001922  EF7F  F00C         	goto	l2105
  3480  001926                     u2020:
  3481  001926                     
  3482                           ;i2c.c: 137:  i2c_write_bit(nack);
  3483  001926  500A               	movf	i2cReadByte@nack^0,w,c
  3484  001928  EC21  F00C         	call	_i2c_write_bit
  3485  00192C                     
  3486                           ;i2c.c: 138:  if (send_stop) {
  3487  00192C  5008               	movf	i2cReadByte@send_stop^0,w,c
  3488  00192E  B4D8               	btfsc	status,2,c
  3489  001930  EF9C  F00C         	goto	u2031
  3490  001934  EF9E  F00C         	goto	u2030
  3491  001938                     u2031:
  3492  001938  EFA0  F00C         	goto	l2117
  3493  00193C                     u2030:
  3494  00193C                     
  3495                           ;i2c.c: 139:   i2c_stop();
  3496  00193C  EC7A  F00E         	call	_i2c_stop	;wreg free
  3497  001940                     l2117:
  3498                           
  3499                           ;i2c.c: 141:  return byte;
  3500  001940  500D               	movf	i2cReadByte@byte^0,w,c
  3501  001942  0012               	return		;funcret
  3502  001944                     __end_of_i2cReadByte:
  3503                           	callstack 0
  3504                           
  3505 ;; *************** function _i2c_write_bit *****************
  3506 ;; Defined at:
  3507 ;;		line 84 in file "i2c.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  bit             1    wreg     unsigned char 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  bit             1    6[COMRAM] unsigned char 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3521 ;;      Params:         0       0       0       0       0       0       0
  3522 ;;      Locals:         1       0       0       0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0
  3524 ;;      Totals:         1       0       0       0       0       0       0
  3525 ;;Total ram usage:        1 bytes
  3526 ;; Hardware stack levels used: 1
  3527 ;; Hardware stack levels required when called: 2
  3528 ;; This function calls:
  3529 ;;		_I2C_delay
  3530 ;;		_clear_SCL
  3531 ;;		_clear_SDA
  3532 ;;		_read_SCL
  3533 ;;		_read_SDA
  3534 ;; This function is called by:
  3535 ;;		_i2cWriteByte
  3536 ;;		_i2cReadByte
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text25
  3541  001842                     __ptext25:
  3542                           	callstack 0
  3543  001842                     _i2c_write_bit:
  3544                           	callstack 26
  3545                           
  3546                           ;incstack = 0
  3547                           ;i2c_write_bit@bit stored from wreg
  3548  001842  6E07               	movwf	i2c_write_bit@bit^0,c
  3549  001844                     
  3550                           ;i2c.c: 85:  if (bit) {
  3551  001844  5007               	movf	i2c_write_bit@bit^0,w,c
  3552  001846  B4D8               	btfsc	status,2,c
  3553  001848  EF28  F00C         	goto	u1931
  3554  00184C  EF2A  F00C         	goto	u1930
  3555  001850                     u1931:
  3556  001850  EF2E  F00C         	goto	l2031
  3557  001854                     u1930:
  3558  001854                     
  3559                           ;i2c.c: 86:   read_SDA();
  3560  001854  ECF8  F00D         	call	_read_SDA	;wreg free
  3561                           
  3562                           ;i2c.c: 87:  } else {
  3563  001858  EF30  F00C         	goto	l2033
  3564  00185C                     l2031:
  3565                           
  3566                           ;i2c.c: 88:   clear_SDA();
  3567  00185C  ECBB  F00E         	call	_clear_SDA	;wreg free
  3568  001860                     l2033:
  3569                           
  3570                           ;i2c.c: 90:  I2C_delay();
  3571  001860  EC3A  F00F         	call	_I2C_delay	;wreg free
  3572  001864                     l2035:
  3573  001864  EC14  F00E         	call	_read_SCL	;wreg free
  3574  001868  0900               	iorlw	0
  3575  00186A  B4D8               	btfsc	status,2,c
  3576  00186C  EF3A  F00C         	goto	u1941
  3577  001870  EF3C  F00C         	goto	u1940
  3578  001874                     u1941:
  3579  001874  EF32  F00C         	goto	l2035
  3580  001878                     u1940:
  3581  001878                     
  3582                           ;i2c.c: 92:  if (bit && read_SDA() == 0) {
  3583  001878  5007               	movf	i2c_write_bit@bit^0,w,c
  3584  00187A  B4D8               	btfsc	status,2,c
  3585  00187C  EF42  F00C         	goto	u1951
  3586  001880  EF44  F00C         	goto	u1950
  3587  001884                     u1951:
  3588  001884  EF46  F00C         	goto	l2041
  3589  001888                     u1950:
  3590  001888  ECF8  F00D         	call	_read_SDA	;wreg free
  3591  00188C                     l2041:
  3592                           
  3593                           ;i2c.c: 95:  I2C_delay();
  3594  00188C  EC3A  F00F         	call	_I2C_delay	;wreg free
  3595  001890                     
  3596                           ;i2c.c: 96:  clear_SCL();
  3597  001890  ECD0  F00E         	call	_clear_SCL	;wreg free
  3598  001894                     
  3599                           ;i2c.c: 97:  I2C_delay();
  3600  001894  EC3A  F00F         	call	_I2C_delay	;wreg free
  3601  001898  0012               	return		;funcret
  3602  00189A                     __end_of_i2c_write_bit:
  3603                           	callstack 0
  3604                           
  3605 ;; *************** function _i2c_stop *****************
  3606 ;; Defined at:
  3607 ;;		line 71 in file "i2c.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;		None
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;		None
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, status,2, status,0, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3621 ;;      Params:         0       0       0       0       0       0       0
  3622 ;;      Locals:         0       0       0       0       0       0       0
  3623 ;;      Temps:          0       0       0       0       0       0       0
  3624 ;;      Totals:         0       0       0       0       0       0       0
  3625 ;;Total ram usage:        0 bytes
  3626 ;; Hardware stack levels used: 1
  3627 ;; Hardware stack levels required when called: 2
  3628 ;; This function calls:
  3629 ;;		_I2C_delay
  3630 ;;		_clear_SDA
  3631 ;;		_read_SCL
  3632 ;;		_read_SDA
  3633 ;; This function is called by:
  3634 ;;		_i2cWriteByte
  3635 ;;		_i2cReadByte
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text26
  3640  001CF4                     __ptext26:
  3641                           	callstack 0
  3642  001CF4                     _i2c_stop:
  3643                           	callstack 26
  3644  001CF4                     
  3645                           ;i2c.c: 73:  clear_SDA();
  3646  001CF4  ECBB  F00E         	call	_clear_SDA	;wreg free
  3647  001CF8                     
  3648                           ;i2c.c: 74:  I2C_delay();
  3649  001CF8  EC3A  F00F         	call	_I2C_delay	;wreg free
  3650  001CFC                     l2017:
  3651  001CFC  EC14  F00E         	call	_read_SCL	;wreg free
  3652  001D00  0900               	iorlw	0
  3653  001D02  B4D8               	btfsc	status,2,c
  3654  001D04  EF86  F00E         	goto	u1921
  3655  001D08  EF88  F00E         	goto	u1920
  3656  001D0C                     u1921:
  3657  001D0C  EF7E  F00E         	goto	l2017
  3658  001D10                     u1920:
  3659  001D10                     
  3660                           ;i2c.c: 76:  I2C_delay();
  3661  001D10  EC3A  F00F         	call	_I2C_delay	;wreg free
  3662  001D14                     
  3663                           ;i2c.c: 77:  if (read_SDA() == 0) {
  3664  001D14  ECF8  F00D         	call	_read_SDA	;wreg free
  3665  001D18                     
  3666                           ;i2c.c: 80:  I2C_delay();
  3667  001D18  EC3A  F00F         	call	_I2C_delay	;wreg free
  3668  001D1C                     
  3669                           ;i2c.c: 81:  started = 0;
  3670  001D1C  0E00               	movlw	0
  3671  001D1E  6E40               	movwf	_started^0,c
  3672  001D20  0012               	return		;funcret
  3673  001D22                     __end_of_i2c_stop:
  3674                           	callstack 0
  3675                           
  3676 ;; *************** function _clear_SDA *****************
  3677 ;; Defined at:
  3678 ;;		line 45 in file "i2c.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;		None
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;		None
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		wreg, status,2, status,0, cstack
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3692 ;;      Params:         0       0       0       0       0       0       0
  3693 ;;      Locals:         0       0       0       0       0       0       0
  3694 ;;      Temps:          0       0       0       0       0       0       0
  3695 ;;      Totals:         0       0       0       0       0       0       0
  3696 ;;Total ram usage:        0 bytes
  3697 ;; Hardware stack levels used: 1
  3698 ;; Hardware stack levels required when called: 1
  3699 ;; This function calls:
  3700 ;;		_digitalWrite
  3701 ;;		_pinMode
  3702 ;; This function is called by:
  3703 ;;		_i2c_start
  3704 ;;		_i2c_stop
  3705 ;;		_i2c_write_bit
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           	psect	text27
  3710  001D76                     __ptext27:
  3711                           	callstack 0
  3712  001D76                     _clear_SDA:
  3713                           	callstack 26
  3714  001D76                     
  3715                           ;i2c.c: 47:  pinMode(PIN_B4,0);
  3716  001D76  0E00               	movlw	0
  3717  001D78  6E02               	movwf	(pinMode@pin+1)^0,c
  3718  001D7A  0E0C               	movlw	12
  3719  001D7C  6E01               	movwf	pinMode@pin^0,c
  3720  001D7E  0E00               	movlw	0
  3721  001D80  6E04               	movwf	(pinMode@type+1)^0,c
  3722  001D82  0E00               	movlw	0
  3723  001D84  6E03               	movwf	pinMode@type^0,c
  3724  001D86  ECAD  F007         	call	_pinMode	;wreg free
  3725                           
  3726                           ;i2c.c: 48:  digitalWrite(PIN_B4,0);
  3727  001D8A  0E00               	movlw	0
  3728  001D8C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3729  001D8E  0E0C               	movlw	12
  3730  001D90  6E01               	movwf	digitalWrite@pin^0,c
  3731  001D92  0E00               	movlw	0
  3732  001D94  6E04               	movwf	(digitalWrite@value+1)^0,c
  3733  001D96  0E00               	movlw	0
  3734  001D98  6E03               	movwf	digitalWrite@value^0,c
  3735  001D9A  EC86  F006         	call	_digitalWrite	;wreg free
  3736  001D9E  0012               	return		;funcret
  3737  001DA0                     __end_of_clear_SDA:
  3738                           	callstack 0
  3739                           
  3740 ;; *************** function _i2c_read_bit *****************
  3741 ;; Defined at:
  3742 ;;		line 100 in file "i2c.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;		None
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;  bit             1    6[COMRAM] unsigned char 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      unsigned char 
  3749 ;; Registers used:
  3750 ;;		wreg, status,2, status,0, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3756 ;;      Params:         0       0       0       0       0       0       0
  3757 ;;      Locals:         1       0       0       0       0       0       0
  3758 ;;      Temps:          0       0       0       0       0       0       0
  3759 ;;      Totals:         1       0       0       0       0       0       0
  3760 ;;Total ram usage:        1 bytes
  3761 ;; Hardware stack levels used: 1
  3762 ;; Hardware stack levels required when called: 2
  3763 ;; This function calls:
  3764 ;;		_I2C_delay
  3765 ;;		_clear_SCL
  3766 ;;		_read_SCL
  3767 ;;		_read_SDA
  3768 ;; This function is called by:
  3769 ;;		_i2cWriteByte
  3770 ;;		_i2cReadByte
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           	psect	text28
  3775  001C92                     __ptext28:
  3776                           	callstack 0
  3777  001C92                     _i2c_read_bit:
  3778                           	callstack 26
  3779  001C92                     
  3780                           ;i2c.c: 101:  unsigned char bit;;i2c.c: 102:  read_SDA();
  3781  001C92  ECF8  F00D         	call	_read_SDA	;wreg free
  3782  001C96                     
  3783                           ;i2c.c: 103:  I2C_delay();
  3784  001C96  EC3A  F00F         	call	_I2C_delay	;wreg free
  3785  001C9A                     l2051:
  3786  001C9A  EC14  F00E         	call	_read_SCL	;wreg free
  3787  001C9E  0900               	iorlw	0
  3788  001CA0  B4D8               	btfsc	status,2,c
  3789  001CA2  EF55  F00E         	goto	u1961
  3790  001CA6  EF57  F00E         	goto	u1960
  3791  001CAA                     u1961:
  3792  001CAA  EF4D  F00E         	goto	l2051
  3793  001CAE                     u1960:
  3794  001CAE                     
  3795                           ;i2c.c: 105:  bit = read_SDA();
  3796  001CAE  ECF8  F00D         	call	_read_SDA	;wreg free
  3797  001CB2  6E07               	movwf	i2c_read_bit@bit^0,c
  3798  001CB4                     
  3799                           ;i2c.c: 106:  I2C_delay();
  3800  001CB4  EC3A  F00F         	call	_I2C_delay	;wreg free
  3801  001CB8                     
  3802                           ;i2c.c: 107:  clear_SCL();
  3803  001CB8  ECD0  F00E         	call	_clear_SCL	;wreg free
  3804                           
  3805                           ;i2c.c: 108:  I2C_delay();
  3806  001CBC  EC3A  F00F         	call	_I2C_delay	;wreg free
  3807  001CC0                     
  3808                           ;i2c.c: 109:  return bit;
  3809  001CC0  5007               	movf	i2c_read_bit@bit^0,w,c
  3810  001CC2  0012               	return		;funcret
  3811  001CC4                     __end_of_i2c_read_bit:
  3812                           	callstack 0
  3813                           
  3814 ;; *************** function _read_SDA *****************
  3815 ;; Defined at:
  3816 ;;		line 34 in file "i2c.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;		None
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;		None
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      unsigned char 
  3823 ;; Registers used:
  3824 ;;		wreg, status,2, status,0, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3830 ;;      Params:         0       0       0       0       0       0       0
  3831 ;;      Locals:         0       0       0       0       0       0       0
  3832 ;;      Temps:          0       0       0       0       0       0       0
  3833 ;;      Totals:         0       0       0       0       0       0       0
  3834 ;;Total ram usage:        0 bytes
  3835 ;; Hardware stack levels used: 1
  3836 ;; Hardware stack levels required when called: 1
  3837 ;; This function calls:
  3838 ;;		_digitalRead
  3839 ;;		_pinMode
  3840 ;; This function is called by:
  3841 ;;		_i2c_start
  3842 ;;		_i2c_stop
  3843 ;;		_i2c_write_bit
  3844 ;;		_i2c_read_bit
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text29
  3849  001BF0                     __ptext29:
  3850                           	callstack 0
  3851  001BF0                     _read_SDA:
  3852                           	callstack 26
  3853  001BF0                     
  3854                           ;i2c.c: 36:  pinMode(PIN_B4,1);
  3855  001BF0  0E00               	movlw	0
  3856  001BF2  6E02               	movwf	(pinMode@pin+1)^0,c
  3857  001BF4  0E0C               	movlw	12
  3858  001BF6  6E01               	movwf	pinMode@pin^0,c
  3859  001BF8  0E00               	movlw	0
  3860  001BFA  6E04               	movwf	(pinMode@type+1)^0,c
  3861  001BFC  0E01               	movlw	1
  3862  001BFE  6E03               	movwf	pinMode@type^0,c
  3863  001C00  ECAD  F007         	call	_pinMode	;wreg free
  3864                           
  3865                           ;i2c.c: 37:  return !!digitalRead(PIN_B4);
  3866  001C04  0E00               	movlw	0
  3867  001C06  6E02               	movwf	(digitalRead@pin+1)^0,c
  3868  001C08  0E0C               	movlw	12
  3869  001C0A  6E01               	movwf	digitalRead@pin^0,c
  3870  001C0C  ECD4  F008         	call	_digitalRead	;wreg free
  3871  001C10  5001               	movf	?_digitalRead^0,w,c
  3872  001C12  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3873  001C14  A4D8               	btfss	status,2,c
  3874  001C16  EF0F  F00E         	goto	u1871
  3875  001C1A  EF12  F00E         	goto	u1870
  3876  001C1E                     u1871:
  3877  001C1E  0E01               	movlw	1
  3878  001C20  EF13  F00E         	goto	u1880
  3879  001C24                     u1870:
  3880  001C24  0E00               	movlw	0
  3881  001C26                     u1880:
  3882  001C26  0012               	return		;funcret
  3883  001C28                     __end_of_read_SDA:
  3884                           	callstack 0
  3885                           
  3886 ;; *************** function _read_SCL *****************
  3887 ;; Defined at:
  3888 ;;		line 29 in file "i2c.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;		None
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      unsigned char 
  3895 ;; Registers used:
  3896 ;;		wreg, status,2, status,0, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3902 ;;      Params:         0       0       0       0       0       0       0
  3903 ;;      Locals:         0       0       0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0
  3905 ;;      Totals:         0       0       0       0       0       0       0
  3906 ;;Total ram usage:        0 bytes
  3907 ;; Hardware stack levels used: 1
  3908 ;; Hardware stack levels required when called: 1
  3909 ;; This function calls:
  3910 ;;		_digitalRead
  3911 ;;		_pinMode
  3912 ;; This function is called by:
  3913 ;;		_i2c_start
  3914 ;;		_i2c_stop
  3915 ;;		_i2c_write_bit
  3916 ;;		_i2c_read_bit
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text30
  3921  001C28                     __ptext30:
  3922                           	callstack 0
  3923  001C28                     _read_SCL:
  3924                           	callstack 26
  3925  001C28                     
  3926                           ;i2c.c: 31:  pinMode(PIN_B3,1);
  3927  001C28  0E00               	movlw	0
  3928  001C2A  6E02               	movwf	(pinMode@pin+1)^0,c
  3929  001C2C  0E0B               	movlw	11
  3930  001C2E  6E01               	movwf	pinMode@pin^0,c
  3931  001C30  0E00               	movlw	0
  3932  001C32  6E04               	movwf	(pinMode@type+1)^0,c
  3933  001C34  0E01               	movlw	1
  3934  001C36  6E03               	movwf	pinMode@type^0,c
  3935  001C38  ECAD  F007         	call	_pinMode	;wreg free
  3936                           
  3937                           ;i2c.c: 32:  return !!digitalRead(PIN_B3);
  3938  001C3C  0E00               	movlw	0
  3939  001C3E  6E02               	movwf	(digitalRead@pin+1)^0,c
  3940  001C40  0E0B               	movlw	11
  3941  001C42  6E01               	movwf	digitalRead@pin^0,c
  3942  001C44  ECD4  F008         	call	_digitalRead	;wreg free
  3943  001C48  5001               	movf	?_digitalRead^0,w,c
  3944  001C4A  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3945  001C4C  A4D8               	btfss	status,2,c
  3946  001C4E  EF2B  F00E         	goto	u1851
  3947  001C52  EF2E  F00E         	goto	u1850
  3948  001C56                     u1851:
  3949  001C56  0E01               	movlw	1
  3950  001C58  EF2F  F00E         	goto	u1860
  3951  001C5C                     u1850:
  3952  001C5C  0E00               	movlw	0
  3953  001C5E                     u1860:
  3954  001C5E  0012               	return		;funcret
  3955  001C60                     __end_of_read_SCL:
  3956                           	callstack 0
  3957                           
  3958 ;; *************** function _digitalRead *****************
  3959 ;; Defined at:
  3960 ;;		line 39 in file "io.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  pin             2    0[COMRAM] int 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;		None
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  2    0[COMRAM] int 
  3967 ;; Registers used:
  3968 ;;		wreg, status,2, status,0
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3974 ;;      Params:         2       0       0       0       0       0       0
  3975 ;;      Locals:         0       0       0       0       0       0       0
  3976 ;;      Temps:          3       0       0       0       0       0       0
  3977 ;;      Totals:         5       0       0       0       0       0       0
  3978 ;;Total ram usage:        5 bytes
  3979 ;; Hardware stack levels used: 1
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_kpDebounce
  3984 ;;		_read_SCL
  3985 ;;		_read_SDA
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           	psect	text31
  3990  0011A8                     __ptext31:
  3991                           	callstack 0
  3992  0011A8                     _digitalRead:
  3993                           	callstack 29
  3994  0011A8                     
  3995                           ;io.c: 40:     if(pin <8){
  3996  0011A8  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  3997  0011AA  EFE2  F008         	goto	u1740
  3998  0011AE  5002               	movf	(digitalRead@pin+1)^0,w,c
  3999  0011B0  E107               	bnz	u1741
  4000  0011B2  0E08               	movlw	8
  4001  0011B4  5C01               	subwf	digitalRead@pin^0,w,c
  4002  0011B6  B0D8               	btfsc	status,0,c
  4003  0011B8  EFE0  F008         	goto	u1741
  4004  0011BC  EFE2  F008         	goto	u1740
  4005  0011C0                     u1741:
  4006  0011C0  EFF6  F008         	goto	l1915
  4007  0011C4                     u1740:
  4008  0011C4                     
  4009                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  4010  0011C4  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4011  0011C8  0E01               	movlw	1
  4012  0011CA  6E04               	movwf	(??_digitalRead+1)^0,c
  4013  0011CC  2A03               	incf	??_digitalRead^0,f,c
  4014  0011CE  EFEB  F008         	goto	u1754
  4015  0011D2                     u1755:
  4016  0011D2  90D8               	bcf	status,0,c
  4017  0011D4  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4018  0011D6                     u1754:
  4019  0011D6  2E03               	decfsz	??_digitalRead^0,f,c
  4020  0011D8  EFE9  F008         	goto	u1755
  4021  0011DC  5004               	movf	(??_digitalRead+1)^0,w,c
  4022  0011DE  1480               	andwf	128,w,c	;volatile
  4023  0011E0  6E05               	movwf	(??_digitalRead+2)^0,c
  4024  0011E2  5005               	movf	(??_digitalRead+2)^0,w,c
  4025  0011E4  6E01               	movwf	?_digitalRead^0,c
  4026  0011E6  6A02               	clrf	(?_digitalRead+1)^0,c
  4027  0011E8  EF88  F009         	goto	l357
  4028  0011EC                     l1915:
  4029  0011EC  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4030  0011EE  EF04  F009         	goto	u1760
  4031  0011F2  5002               	movf	(digitalRead@pin+1)^0,w,c
  4032  0011F4  E107               	bnz	u1761
  4033  0011F6  0E10               	movlw	16
  4034  0011F8  5C01               	subwf	digitalRead@pin^0,w,c
  4035  0011FA  B0D8               	btfsc	status,0,c
  4036  0011FC  EF02  F009         	goto	u1761
  4037  001200  EF04  F009         	goto	u1760
  4038  001204                     u1761:
  4039  001204  EF1A  F009         	goto	l1923
  4040  001208                     u1760:
  4041  001208                     
  4042                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  4043  001208  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4044  00120C  0EF8               	movlw	-8
  4045  00120E  2603               	addwf	??_digitalRead^0,f,c
  4046  001210  0E01               	movlw	1
  4047  001212  6E04               	movwf	(??_digitalRead+1)^0,c
  4048  001214  2A03               	incf	??_digitalRead^0,f,c
  4049  001216  EF0F  F009         	goto	u1774
  4050  00121A                     u1775:
  4051  00121A  90D8               	bcf	status,0,c
  4052  00121C  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4053  00121E                     u1774:
  4054  00121E  2E03               	decfsz	??_digitalRead^0,f,c
  4055  001220  EF0D  F009         	goto	u1775
  4056  001224  5004               	movf	(??_digitalRead+1)^0,w,c
  4057  001226  1481               	andwf	129,w,c	;volatile
  4058  001228  6E05               	movwf	(??_digitalRead+2)^0,c
  4059  00122A  5005               	movf	(??_digitalRead+2)^0,w,c
  4060  00122C  6E01               	movwf	?_digitalRead^0,c
  4061  00122E  6A02               	clrf	(?_digitalRead+1)^0,c
  4062  001230  EF88  F009         	goto	l357
  4063  001234                     l1923:
  4064  001234  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4065  001236  EF28  F009         	goto	u1780
  4066  00123A  5002               	movf	(digitalRead@pin+1)^0,w,c
  4067  00123C  E107               	bnz	u1781
  4068  00123E  0E18               	movlw	24
  4069  001240  5C01               	subwf	digitalRead@pin^0,w,c
  4070  001242  B0D8               	btfsc	status,0,c
  4071  001244  EF26  F009         	goto	u1781
  4072  001248  EF28  F009         	goto	u1780
  4073  00124C                     u1781:
  4074  00124C  EF3E  F009         	goto	l1931
  4075  001250                     u1780:
  4076  001250                     
  4077                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  4078  001250  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4079  001254  0EF0               	movlw	-16
  4080  001256  2603               	addwf	??_digitalRead^0,f,c
  4081  001258  0E01               	movlw	1
  4082  00125A  6E04               	movwf	(??_digitalRead+1)^0,c
  4083  00125C  2A03               	incf	??_digitalRead^0,f,c
  4084  00125E  EF33  F009         	goto	u1794
  4085  001262                     u1795:
  4086  001262  90D8               	bcf	status,0,c
  4087  001264  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4088  001266                     u1794:
  4089  001266  2E03               	decfsz	??_digitalRead^0,f,c
  4090  001268  EF31  F009         	goto	u1795
  4091  00126C  5004               	movf	(??_digitalRead+1)^0,w,c
  4092  00126E  1482               	andwf	130,w,c	;volatile
  4093  001270  6E05               	movwf	(??_digitalRead+2)^0,c
  4094  001272  5005               	movf	(??_digitalRead+2)^0,w,c
  4095  001274  6E01               	movwf	?_digitalRead^0,c
  4096  001276  6A02               	clrf	(?_digitalRead+1)^0,c
  4097  001278  EF88  F009         	goto	l357
  4098  00127C                     l1931:
  4099  00127C  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4100  00127E  EF4C  F009         	goto	u1800
  4101  001282  5002               	movf	(digitalRead@pin+1)^0,w,c
  4102  001284  E107               	bnz	u1801
  4103  001286  0E20               	movlw	32
  4104  001288  5C01               	subwf	digitalRead@pin^0,w,c
  4105  00128A  B0D8               	btfsc	status,0,c
  4106  00128C  EF4A  F009         	goto	u1801
  4107  001290  EF4C  F009         	goto	u1800
  4108  001294                     u1801:
  4109  001294  EF62  F009         	goto	l1939
  4110  001298                     u1800:
  4111  001298                     
  4112                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  4113  001298  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4114  00129C  0EE8               	movlw	-24
  4115  00129E  2603               	addwf	??_digitalRead^0,f,c
  4116  0012A0  0E01               	movlw	1
  4117  0012A2  6E04               	movwf	(??_digitalRead+1)^0,c
  4118  0012A4  2A03               	incf	??_digitalRead^0,f,c
  4119  0012A6  EF57  F009         	goto	u1814
  4120  0012AA                     u1815:
  4121  0012AA  90D8               	bcf	status,0,c
  4122  0012AC  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4123  0012AE                     u1814:
  4124  0012AE  2E03               	decfsz	??_digitalRead^0,f,c
  4125  0012B0  EF55  F009         	goto	u1815
  4126  0012B4  5004               	movf	(??_digitalRead+1)^0,w,c
  4127  0012B6  1483               	andwf	131,w,c	;volatile
  4128  0012B8  6E05               	movwf	(??_digitalRead+2)^0,c
  4129  0012BA  5005               	movf	(??_digitalRead+2)^0,w,c
  4130  0012BC  6E01               	movwf	?_digitalRead^0,c
  4131  0012BE  6A02               	clrf	(?_digitalRead+1)^0,c
  4132  0012C0  EF88  F009         	goto	l357
  4133  0012C4                     l1939:
  4134  0012C4  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4135  0012C6  EF70  F009         	goto	u1820
  4136  0012CA  5002               	movf	(digitalRead@pin+1)^0,w,c
  4137  0012CC  E107               	bnz	u1821
  4138  0012CE  0E28               	movlw	40
  4139  0012D0  5C01               	subwf	digitalRead@pin^0,w,c
  4140  0012D2  B0D8               	btfsc	status,0,c
  4141  0012D4  EF6E  F009         	goto	u1821
  4142  0012D8  EF70  F009         	goto	u1820
  4143  0012DC                     u1821:
  4144  0012DC  EF86  F009         	goto	l362
  4145  0012E0                     u1820:
  4146  0012E0                     
  4147                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  4148  0012E0  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4149  0012E4  0EE0               	movlw	-32
  4150  0012E6  2603               	addwf	??_digitalRead^0,f,c
  4151  0012E8  0E01               	movlw	1
  4152  0012EA  6E04               	movwf	(??_digitalRead+1)^0,c
  4153  0012EC  2A03               	incf	??_digitalRead^0,f,c
  4154  0012EE  EF7B  F009         	goto	u1834
  4155  0012F2                     u1835:
  4156  0012F2  90D8               	bcf	status,0,c
  4157  0012F4  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4158  0012F6                     u1834:
  4159  0012F6  2E03               	decfsz	??_digitalRead^0,f,c
  4160  0012F8  EF79  F009         	goto	u1835
  4161  0012FC  5004               	movf	(??_digitalRead+1)^0,w,c
  4162  0012FE  1484               	andwf	132,w,c	;volatile
  4163  001300  6E05               	movwf	(??_digitalRead+2)^0,c
  4164  001302  5005               	movf	(??_digitalRead+2)^0,w,c
  4165  001304  6E01               	movwf	?_digitalRead^0,c
  4166  001306  6A02               	clrf	(?_digitalRead+1)^0,c
  4167  001308  EF88  F009         	goto	l357
  4168  00130C                     l362:
  4169  00130C                     
  4170                           ;io.c: 51:     return -1;
  4171  00130C  6801               	setf	?_digitalRead^0,c
  4172  00130E  6802               	setf	(?_digitalRead+1)^0,c
  4173  001310                     l357:
  4174  001310  0012               	return		;funcret
  4175  001312                     __end_of_digitalRead:
  4176                           	callstack 0
  4177                           
  4178 ;; *************** function _clear_SCL *****************
  4179 ;; Defined at:
  4180 ;;		line 39 in file "i2c.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;		None
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;		None
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      void 
  4187 ;; Registers used:
  4188 ;;		wreg, status,2, status,0, cstack
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4194 ;;      Params:         0       0       0       0       0       0       0
  4195 ;;      Locals:         0       0       0       0       0       0       0
  4196 ;;      Temps:          0       0       0       0       0       0       0
  4197 ;;      Totals:         0       0       0       0       0       0       0
  4198 ;;Total ram usage:        0 bytes
  4199 ;; Hardware stack levels used: 1
  4200 ;; Hardware stack levels required when called: 1
  4201 ;; This function calls:
  4202 ;;		_digitalWrite
  4203 ;;		_pinMode
  4204 ;; This function is called by:
  4205 ;;		_i2c_start
  4206 ;;		_i2c_write_bit
  4207 ;;		_i2c_read_bit
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text32
  4212  001DA0                     __ptext32:
  4213                           	callstack 0
  4214  001DA0                     _clear_SCL:
  4215                           	callstack 26
  4216  001DA0                     
  4217                           ;i2c.c: 41:  pinMode(PIN_B3,0);
  4218  001DA0  0E00               	movlw	0
  4219  001DA2  6E02               	movwf	(pinMode@pin+1)^0,c
  4220  001DA4  0E0B               	movlw	11
  4221  001DA6  6E01               	movwf	pinMode@pin^0,c
  4222  001DA8  0E00               	movlw	0
  4223  001DAA  6E04               	movwf	(pinMode@type+1)^0,c
  4224  001DAC  0E00               	movlw	0
  4225  001DAE  6E03               	movwf	pinMode@type^0,c
  4226  001DB0  ECAD  F007         	call	_pinMode	;wreg free
  4227                           
  4228                           ;i2c.c: 42:  digitalWrite(PIN_B3,0);
  4229  001DB4  0E00               	movlw	0
  4230  001DB6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4231  001DB8  0E0B               	movlw	11
  4232  001DBA  6E01               	movwf	digitalWrite@pin^0,c
  4233  001DBC  0E00               	movlw	0
  4234  001DBE  6E04               	movwf	(digitalWrite@value+1)^0,c
  4235  001DC0  0E00               	movlw	0
  4236  001DC2  6E03               	movwf	digitalWrite@value^0,c
  4237  001DC4  EC86  F006         	call	_digitalWrite	;wreg free
  4238  001DC8  0012               	return		;funcret
  4239  001DCA                     __end_of_clear_SCL:
  4240                           	callstack 0
  4241                           
  4242 ;; *************** function _digitalWrite *****************
  4243 ;; Defined at:
  4244 ;;		line 14 in file "io.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  pin             2    0[COMRAM] int 
  4247 ;;  value           2    2[COMRAM] int 
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;		None
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2, status,0
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4259 ;;      Params:         4       0       0       0       0       0       0
  4260 ;;      Locals:         0       0       0       0       0       0       0
  4261 ;;      Temps:          2       0       0       0       0       0       0
  4262 ;;      Totals:         6       0       0       0       0       0       0
  4263 ;;Total ram usage:        6 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; This function calls:
  4266 ;;		Nothing
  4267 ;; This function is called by:
  4268 ;;		_pulseEnablePin
  4269 ;;		_pushNibble
  4270 ;;		_pushByte
  4271 ;;		_rgbColor
  4272 ;;		_turnOn
  4273 ;;		_clear_SCL
  4274 ;;		_clear_SDA
  4275 ;;		_PulseEnClock
  4276 ;;		_PulseClockData
  4277 ;;		_soWrite
  4278 ;;		_turnOff
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text33
  4283  000D0C                     __ptext33:
  4284                           	callstack 0
  4285  000D0C                     _digitalWrite:
  4286                           	callstack 29
  4287  000D0C                     
  4288                           ;io.c: 16:     if(pin <8){
  4289  000D0C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4290  000D0E  EF94  F006         	goto	u1340
  4291  000D12  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4292  000D14  E107               	bnz	u1341
  4293  000D16  0E08               	movlw	8
  4294  000D18  5C01               	subwf	digitalWrite@pin^0,w,c
  4295  000D1A  B0D8               	btfsc	status,0,c
  4296  000D1C  EF92  F006         	goto	u1341
  4297  000D20  EF94  F006         	goto	u1340
  4298  000D24                     u1341:
  4299  000D24  EFBE  F006         	goto	l1835
  4300  000D28                     u1340:
  4301  000D28                     
  4302                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  4303  000D28  5003               	movf	digitalWrite@value^0,w,c
  4304  000D2A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4305  000D2C  B4D8               	btfsc	status,2,c
  4306  000D2E  EF9B  F006         	goto	u1351
  4307  000D32  EF9D  F006         	goto	u1350
  4308  000D36                     u1351:
  4309  000D36  EFAD  F006         	goto	l1833
  4310  000D3A                     u1350:
  4311  000D3A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4312  000D3E  0E01               	movlw	1
  4313  000D40  6E06               	movwf	(??_digitalWrite+1)^0,c
  4314  000D42  2A05               	incf	??_digitalWrite^0,f,c
  4315  000D44  EFA6  F006         	goto	u1364
  4316  000D48                     u1365:
  4317  000D48  90D8               	bcf	status,0,c
  4318  000D4A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4319  000D4C                     u1364:
  4320  000D4C  2E05               	decfsz	??_digitalWrite^0,f,c
  4321  000D4E  EFA4  F006         	goto	u1365
  4322  000D52  5006               	movf	(??_digitalWrite+1)^0,w,c
  4323  000D54  1280               	iorwf	128,f,c	;volatile
  4324  000D56  EFAC  F007         	goto	l353
  4325  000D5A                     l1833:
  4326  000D5A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4327  000D5E  0E01               	movlw	1
  4328  000D60  6E06               	movwf	(??_digitalWrite+1)^0,c
  4329  000D62  2A05               	incf	??_digitalWrite^0,f,c
  4330  000D64  EFB6  F006         	goto	u1374
  4331  000D68                     u1375:
  4332  000D68  90D8               	bcf	status,0,c
  4333  000D6A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4334  000D6C                     u1374:
  4335  000D6C  2E05               	decfsz	??_digitalWrite^0,f,c
  4336  000D6E  EFB4  F006         	goto	u1375
  4337  000D72  5006               	movf	(??_digitalWrite+1)^0,w,c
  4338  000D74  0AFF               	xorlw	255
  4339  000D76  1680               	andwf	128,f,c	;volatile
  4340  000D78  EFAC  F007         	goto	l353
  4341  000D7C                     l1835:
  4342  000D7C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4343  000D7E  EFCC  F006         	goto	u1380
  4344  000D82  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4345  000D84  E107               	bnz	u1381
  4346  000D86  0E10               	movlw	16
  4347  000D88  5C01               	subwf	digitalWrite@pin^0,w,c
  4348  000D8A  B0D8               	btfsc	status,0,c
  4349  000D8C  EFCA  F006         	goto	u1381
  4350  000D90  EFCC  F006         	goto	u1380
  4351  000D94                     u1381:
  4352  000D94  EFFA  F006         	goto	l1843
  4353  000D98                     u1380:
  4354  000D98                     
  4355                           ;io.c: 20:         pin -=8;
  4356  000D98  0EF8               	movlw	248
  4357  000D9A  2601               	addwf	digitalWrite@pin^0,f,c
  4358  000D9C  0EFF               	movlw	255
  4359  000D9E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4360                           
  4361                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  4362  000DA0  5003               	movf	digitalWrite@value^0,w,c
  4363  000DA2  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4364  000DA4  B4D8               	btfsc	status,2,c
  4365  000DA6  EFD7  F006         	goto	u1391
  4366  000DAA  EFD9  F006         	goto	u1390
  4367  000DAE                     u1391:
  4368  000DAE  EFE9  F006         	goto	l1841
  4369  000DB2                     u1390:
  4370  000DB2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4371  000DB6  0E01               	movlw	1
  4372  000DB8  6E06               	movwf	(??_digitalWrite+1)^0,c
  4373  000DBA  2A05               	incf	??_digitalWrite^0,f,c
  4374  000DBC  EFE2  F006         	goto	u1404
  4375  000DC0                     u1405:
  4376  000DC0  90D8               	bcf	status,0,c
  4377  000DC2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4378  000DC4                     u1404:
  4379  000DC4  2E05               	decfsz	??_digitalWrite^0,f,c
  4380  000DC6  EFE0  F006         	goto	u1405
  4381  000DCA  5006               	movf	(??_digitalWrite+1)^0,w,c
  4382  000DCC  1281               	iorwf	129,f,c	;volatile
  4383  000DCE  EFAC  F007         	goto	l353
  4384  000DD2                     l1841:
  4385  000DD2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4386  000DD6  0E01               	movlw	1
  4387  000DD8  6E06               	movwf	(??_digitalWrite+1)^0,c
  4388  000DDA  2A05               	incf	??_digitalWrite^0,f,c
  4389  000DDC  EFF2  F006         	goto	u1414
  4390  000DE0                     u1415:
  4391  000DE0  90D8               	bcf	status,0,c
  4392  000DE2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4393  000DE4                     u1414:
  4394  000DE4  2E05               	decfsz	??_digitalWrite^0,f,c
  4395  000DE6  EFF0  F006         	goto	u1415
  4396  000DEA  5006               	movf	(??_digitalWrite+1)^0,w,c
  4397  000DEC  0AFF               	xorlw	255
  4398  000DEE  1681               	andwf	129,f,c	;volatile
  4399  000DF0  EFAC  F007         	goto	l353
  4400  000DF4                     l1843:
  4401  000DF4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4402  000DF6  EF08  F007         	goto	u1420
  4403  000DFA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4404  000DFC  E107               	bnz	u1421
  4405  000DFE  0E18               	movlw	24
  4406  000E00  5C01               	subwf	digitalWrite@pin^0,w,c
  4407  000E02  B0D8               	btfsc	status,0,c
  4408  000E04  EF06  F007         	goto	u1421
  4409  000E08  EF08  F007         	goto	u1420
  4410  000E0C                     u1421:
  4411  000E0C  EF36  F007         	goto	l1851
  4412  000E10                     u1420:
  4413  000E10                     
  4414                           ;io.c: 24:         pin -=16;
  4415  000E10  0EF0               	movlw	240
  4416  000E12  2601               	addwf	digitalWrite@pin^0,f,c
  4417  000E14  0EFF               	movlw	255
  4418  000E16  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4419                           
  4420                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  4421  000E18  5003               	movf	digitalWrite@value^0,w,c
  4422  000E1A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4423  000E1C  B4D8               	btfsc	status,2,c
  4424  000E1E  EF13  F007         	goto	u1431
  4425  000E22  EF15  F007         	goto	u1430
  4426  000E26                     u1431:
  4427  000E26  EF25  F007         	goto	l1849
  4428  000E2A                     u1430:
  4429  000E2A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4430  000E2E  0E01               	movlw	1
  4431  000E30  6E06               	movwf	(??_digitalWrite+1)^0,c
  4432  000E32  2A05               	incf	??_digitalWrite^0,f,c
  4433  000E34  EF1E  F007         	goto	u1444
  4434  000E38                     u1445:
  4435  000E38  90D8               	bcf	status,0,c
  4436  000E3A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4437  000E3C                     u1444:
  4438  000E3C  2E05               	decfsz	??_digitalWrite^0,f,c
  4439  000E3E  EF1C  F007         	goto	u1445
  4440  000E42  5006               	movf	(??_digitalWrite+1)^0,w,c
  4441  000E44  1282               	iorwf	130,f,c	;volatile
  4442  000E46  EFAC  F007         	goto	l353
  4443  000E4A                     l1849:
  4444  000E4A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4445  000E4E  0E01               	movlw	1
  4446  000E50  6E06               	movwf	(??_digitalWrite+1)^0,c
  4447  000E52  2A05               	incf	??_digitalWrite^0,f,c
  4448  000E54  EF2E  F007         	goto	u1454
  4449  000E58                     u1455:
  4450  000E58  90D8               	bcf	status,0,c
  4451  000E5A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4452  000E5C                     u1454:
  4453  000E5C  2E05               	decfsz	??_digitalWrite^0,f,c
  4454  000E5E  EF2C  F007         	goto	u1455
  4455  000E62  5006               	movf	(??_digitalWrite+1)^0,w,c
  4456  000E64  0AFF               	xorlw	255
  4457  000E66  1682               	andwf	130,f,c	;volatile
  4458  000E68  EFAC  F007         	goto	l353
  4459  000E6C                     l1851:
  4460  000E6C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4461  000E6E  EF44  F007         	goto	u1460
  4462  000E72  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4463  000E74  E107               	bnz	u1461
  4464  000E76  0E20               	movlw	32
  4465  000E78  5C01               	subwf	digitalWrite@pin^0,w,c
  4466  000E7A  B0D8               	btfsc	status,0,c
  4467  000E7C  EF42  F007         	goto	u1461
  4468  000E80  EF44  F007         	goto	u1460
  4469  000E84                     u1461:
  4470  000E84  EF72  F007         	goto	l1859
  4471  000E88                     u1460:
  4472  000E88                     
  4473                           ;io.c: 28:         pin -=24;
  4474  000E88  0EE8               	movlw	232
  4475  000E8A  2601               	addwf	digitalWrite@pin^0,f,c
  4476  000E8C  0EFF               	movlw	255
  4477  000E8E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4478                           
  4479                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4480  000E90  5003               	movf	digitalWrite@value^0,w,c
  4481  000E92  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4482  000E94  B4D8               	btfsc	status,2,c
  4483  000E96  EF4F  F007         	goto	u1471
  4484  000E9A  EF51  F007         	goto	u1470
  4485  000E9E                     u1471:
  4486  000E9E  EF61  F007         	goto	l1857
  4487  000EA2                     u1470:
  4488  000EA2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4489  000EA6  0E01               	movlw	1
  4490  000EA8  6E06               	movwf	(??_digitalWrite+1)^0,c
  4491  000EAA  2A05               	incf	??_digitalWrite^0,f,c
  4492  000EAC  EF5A  F007         	goto	u1484
  4493  000EB0                     u1485:
  4494  000EB0  90D8               	bcf	status,0,c
  4495  000EB2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4496  000EB4                     u1484:
  4497  000EB4  2E05               	decfsz	??_digitalWrite^0,f,c
  4498  000EB6  EF58  F007         	goto	u1485
  4499  000EBA  5006               	movf	(??_digitalWrite+1)^0,w,c
  4500  000EBC  1283               	iorwf	131,f,c	;volatile
  4501  000EBE  EFAC  F007         	goto	l353
  4502  000EC2                     l1857:
  4503  000EC2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4504  000EC6  0E01               	movlw	1
  4505  000EC8  6E06               	movwf	(??_digitalWrite+1)^0,c
  4506  000ECA  2A05               	incf	??_digitalWrite^0,f,c
  4507  000ECC  EF6A  F007         	goto	u1494
  4508  000ED0                     u1495:
  4509  000ED0  90D8               	bcf	status,0,c
  4510  000ED2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4511  000ED4                     u1494:
  4512  000ED4  2E05               	decfsz	??_digitalWrite^0,f,c
  4513  000ED6  EF68  F007         	goto	u1495
  4514  000EDA  5006               	movf	(??_digitalWrite+1)^0,w,c
  4515  000EDC  0AFF               	xorlw	255
  4516  000EDE  1683               	andwf	131,f,c	;volatile
  4517  000EE0  EFAC  F007         	goto	l353
  4518  000EE4                     l1859:
  4519  000EE4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4520  000EE6  EF80  F007         	goto	u1500
  4521  000EEA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4522  000EEC  E107               	bnz	u1501
  4523  000EEE  0E28               	movlw	40
  4524  000EF0  5C01               	subwf	digitalWrite@pin^0,w,c
  4525  000EF2  B0D8               	btfsc	status,0,c
  4526  000EF4  EF7E  F007         	goto	u1501
  4527  000EF8  EF80  F007         	goto	u1500
  4528  000EFC                     u1501:
  4529  000EFC  EFAC  F007         	goto	l353
  4530  000F00                     u1500:
  4531  000F00                     
  4532                           ;io.c: 32:         pin -=32;
  4533  000F00  0EE0               	movlw	224
  4534  000F02  2601               	addwf	digitalWrite@pin^0,f,c
  4535  000F04  0EFF               	movlw	255
  4536  000F06  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4537                           
  4538                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4539  000F08  5003               	movf	digitalWrite@value^0,w,c
  4540  000F0A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4541  000F0C  B4D8               	btfsc	status,2,c
  4542  000F0E  EF8B  F007         	goto	u1511
  4543  000F12  EF8D  F007         	goto	u1510
  4544  000F16                     u1511:
  4545  000F16  EF9D  F007         	goto	l1865
  4546  000F1A                     u1510:
  4547  000F1A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4548  000F1E  0E01               	movlw	1
  4549  000F20  6E06               	movwf	(??_digitalWrite+1)^0,c
  4550  000F22  2A05               	incf	??_digitalWrite^0,f,c
  4551  000F24  EF96  F007         	goto	u1524
  4552  000F28                     u1525:
  4553  000F28  90D8               	bcf	status,0,c
  4554  000F2A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4555  000F2C                     u1524:
  4556  000F2C  2E05               	decfsz	??_digitalWrite^0,f,c
  4557  000F2E  EF94  F007         	goto	u1525
  4558  000F32  5006               	movf	(??_digitalWrite+1)^0,w,c
  4559  000F34  1284               	iorwf	132,f,c	;volatile
  4560  000F36  EFAC  F007         	goto	l353
  4561  000F3A                     l1865:
  4562  000F3A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4563  000F3E  0E01               	movlw	1
  4564  000F40  6E06               	movwf	(??_digitalWrite+1)^0,c
  4565  000F42  2A05               	incf	??_digitalWrite^0,f,c
  4566  000F44  EFA6  F007         	goto	u1534
  4567  000F48                     u1535:
  4568  000F48  90D8               	bcf	status,0,c
  4569  000F4A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4570  000F4C                     u1534:
  4571  000F4C  2E05               	decfsz	??_digitalWrite^0,f,c
  4572  000F4E  EFA4  F007         	goto	u1535
  4573  000F52  5006               	movf	(??_digitalWrite+1)^0,w,c
  4574  000F54  0AFF               	xorlw	255
  4575  000F56  1684               	andwf	132,f,c	;volatile
  4576  000F58                     l353:
  4577  000F58  0012               	return		;funcret
  4578  000F5A                     __end_of_digitalWrite:
  4579                           	callstack 0
  4580                           
  4581 ;; *************** function _I2C_delay *****************
  4582 ;; Defined at:
  4583 ;;		line 22 in file "i2c.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;  i               2    0        int 
  4588 ;;  v               2    0        volatile int 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      void 
  4591 ;; Registers used:
  4592 ;;		None
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4598 ;;      Params:         0       0       0       0       0       0       0
  4599 ;;      Locals:         0       0       0       0       0       0       0
  4600 ;;      Temps:          0       0       0       0       0       0       0
  4601 ;;      Totals:         0       0       0       0       0       0       0
  4602 ;;Total ram usage:        0 bytes
  4603 ;; Hardware stack levels used: 1
  4604 ;; This function calls:
  4605 ;;		Nothing
  4606 ;; This function is called by:
  4607 ;;		_i2c_start
  4608 ;;		_i2c_stop
  4609 ;;		_i2c_write_bit
  4610 ;;		_i2c_read_bit
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text34
  4615  001E74                     __ptext34:
  4616                           	callstack 0
  4617  001E74                     _I2C_delay:
  4618                           	callstack 27
  4619  001E74  0012               	return		;funcret
  4620  001E76                     __end_of_I2C_delay:
  4621                           	callstack 0
  4622                           
  4623 ;; *************** function _bcd2dec *****************
  4624 ;; Defined at:
  4625 ;;		line 12 in file "ds1307.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  value           2   32[COMRAM] int 
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;		None
  4630 ;; Return value:  Size  Location     Type
  4631 ;;                  2   32[COMRAM] int 
  4632 ;; Registers used:
  4633 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4639 ;;      Params:         2       0       0       0       0       0       0
  4640 ;;      Locals:         0       0       0       0       0       0       0
  4641 ;;      Temps:          2       0       0       0       0       0       0
  4642 ;;      Totals:         4       0       0       0       0       0       0
  4643 ;;Total ram usage:        4 bytes
  4644 ;; Hardware stack levels used: 1
  4645 ;; Hardware stack levels required when called: 1
  4646 ;; This function calls:
  4647 ;;		___awdiv
  4648 ;;		___wmul
  4649 ;; This function is called by:
  4650 ;;		_main
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           	psect	text35
  4655  001AF8                     __ptext35:
  4656                           	callstack 0
  4657  001AF8                     _bcd2dec:
  4658                           	callstack 29
  4659  001AF8                     
  4660                           ;ds1307.c: 13:  return ((value / 16 * 10) + (value % 16));
  4661  001AF8  0E0F               	movlw	15
  4662  001AFA  1421               	andwf	bcd2dec@value^0,w,c
  4663  001AFC  6E23               	movwf	??_bcd2dec^0,c
  4664  001AFE  0E00               	movlw	0
  4665  001B00  1422               	andwf	(bcd2dec@value+1)^0,w,c
  4666  001B02  6E24               	movwf	(??_bcd2dec+1)^0,c
  4667  001B04  0E00               	movlw	0
  4668  001B06  6E16               	movwf	(___awdiv@divisor+1)^0,c
  4669  001B08  0E10               	movlw	16
  4670  001B0A  6E15               	movwf	___awdiv@divisor^0,c
  4671  001B0C  C021  F013         	movff	bcd2dec@value,___awdiv@dividend
  4672  001B10  C022  F014         	movff	bcd2dec@value+1,___awdiv@dividend+1
  4673  001B14  EC24  F00A         	call	___awdiv	;wreg free
  4674  001B18  C013  F01B         	movff	?___awdiv,___wmul@multiplier
  4675  001B1C  C014  F01C         	movff	?___awdiv+1,___wmul@multiplier+1
  4676  001B20  0E00               	movlw	0
  4677  001B22  6E1E               	movwf	(___wmul@multiplicand+1)^0,c
  4678  001B24  0E0A               	movlw	10
  4679  001B26  6E1D               	movwf	___wmul@multiplicand^0,c
  4680  001B28  ECF8  F00E         	call	___wmul	;wreg free
  4681  001B2C  5023               	movf	??_bcd2dec^0,w,c
  4682  001B2E  241B               	addwf	?___wmul^0,w,c
  4683  001B30  6E21               	movwf	?_bcd2dec^0,c
  4684  001B32  5024               	movf	(??_bcd2dec+1)^0,w,c
  4685  001B34  201C               	addwfc	(?___wmul+1)^0,w,c
  4686  001B36  6E22               	movwf	(?_bcd2dec+1)^0,c
  4687  001B38  0012               	return		;funcret
  4688  001B3A                     __end_of_bcd2dec:
  4689                           	callstack 0
  4690                           
  4691 ;; *************** function ___wmul *****************
  4692 ;; Defined at:
  4693 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  multiplier      2   26[COMRAM] unsigned int 
  4696 ;;  multiplicand    2   28[COMRAM] unsigned int 
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;  product         2   30[COMRAM] unsigned int 
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  2   26[COMRAM] unsigned int 
  4701 ;; Registers used:
  4702 ;;		wreg, status,2, status,0, prodl, prodh
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4708 ;;      Params:         4       0       0       0       0       0       0
  4709 ;;      Locals:         2       0       0       0       0       0       0
  4710 ;;      Temps:          0       0       0       0       0       0       0
  4711 ;;      Totals:         6       0       0       0       0       0       0
  4712 ;;Total ram usage:        6 bytes
  4713 ;; Hardware stack levels used: 1
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_bcd2dec
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text36
  4722  001DF0                     __ptext36:
  4723                           	callstack 0
  4724  001DF0                     ___wmul:
  4725                           	callstack 29
  4726  001DF0  501B               	movf	___wmul@multiplier^0,w,c
  4727  001DF2  021D               	mulwf	___wmul@multiplicand^0,c
  4728  001DF4  CFF3 F01F          	movff	prodl,___wmul@product
  4729  001DF8  CFF4 F020          	movff	prodh,___wmul@product+1
  4730  001DFC  501B               	movf	___wmul@multiplier^0,w,c
  4731  001DFE  021E               	mulwf	(___wmul@multiplicand+1)^0,c
  4732  001E00  50F3               	movf	243,w,c
  4733  001E02  2620               	addwf	(___wmul@product+1)^0,f,c
  4734  001E04  501C               	movf	(___wmul@multiplier+1)^0,w,c
  4735  001E06  021D               	mulwf	___wmul@multiplicand^0,c
  4736  001E08  50F3               	movf	243,w,c
  4737  001E0A  2620               	addwf	(___wmul@product+1)^0,f,c
  4738  001E0C  C01F  F01B         	movff	___wmul@product,?___wmul
  4739  001E10  C020  F01C         	movff	___wmul@product+1,?___wmul+1
  4740  001E14  0012               	return		;funcret
  4741  001E16                     __end_of___wmul:
  4742                           	callstack 0
  4743                           
  4744 ;; *************** function ___awdiv *****************
  4745 ;; Defined at:
  4746 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  dividend        2   18[COMRAM] int 
  4749 ;;  divisor         2   20[COMRAM] int 
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  quotient        2   24[COMRAM] int 
  4752 ;;  sign            1   23[COMRAM] unsigned char 
  4753 ;;  counter         1   22[COMRAM] unsigned char 
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  2   18[COMRAM] int 
  4756 ;; Registers used:
  4757 ;;		wreg, status,2, status,0
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4763 ;;      Params:         4       0       0       0       0       0       0
  4764 ;;      Locals:         4       0       0       0       0       0       0
  4765 ;;      Temps:          0       0       0       0       0       0       0
  4766 ;;      Totals:         8       0       0       0       0       0       0
  4767 ;;Total ram usage:        8 bytes
  4768 ;; Hardware stack levels used: 1
  4769 ;; This function calls:
  4770 ;;		Nothing
  4771 ;; This function is called by:
  4772 ;;		_main
  4773 ;;		_bcd2dec
  4774 ;;		_lcdNumber
  4775 ;;		_dec2bcd
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text37
  4780  001448                     __ptext37:
  4781                           	callstack 0
  4782  001448                     ___awdiv:
  4783                           	callstack 29
  4784  001448  0E00               	movlw	0
  4785  00144A  6E18               	movwf	___awdiv@sign^0,c
  4786  00144C  BE16               	btfsc	(___awdiv@divisor+1)^0,7,c
  4787  00144E  EF2D  F00A         	goto	u2040
  4788  001452  EF2B  F00A         	goto	u2041
  4789  001456                     u2041:
  4790  001456  EF33  F00A         	goto	l2135
  4791  00145A                     u2040:
  4792  00145A  6C15               	negf	___awdiv@divisor^0,c
  4793  00145C  1E16               	comf	(___awdiv@divisor+1)^0,f,c
  4794  00145E  B0D8               	btfsc	status,0,c
  4795  001460  2A16               	incf	(___awdiv@divisor+1)^0,f,c
  4796  001462  0E01               	movlw	1
  4797  001464  6E18               	movwf	___awdiv@sign^0,c
  4798  001466                     l2135:
  4799  001466  BE14               	btfsc	(___awdiv@dividend+1)^0,7,c
  4800  001468  EF3A  F00A         	goto	u2050
  4801  00146C  EF38  F00A         	goto	u2051
  4802  001470                     u2051:
  4803  001470  EF40  F00A         	goto	l2141
  4804  001474                     u2050:
  4805  001474  6C13               	negf	___awdiv@dividend^0,c
  4806  001476  1E14               	comf	(___awdiv@dividend+1)^0,f,c
  4807  001478  B0D8               	btfsc	status,0,c
  4808  00147A  2A14               	incf	(___awdiv@dividend+1)^0,f,c
  4809  00147C  0E01               	movlw	1
  4810  00147E  1A18               	xorwf	___awdiv@sign^0,f,c
  4811  001480                     l2141:
  4812  001480  0E00               	movlw	0
  4813  001482  6E1A               	movwf	(___awdiv@quotient+1)^0,c
  4814  001484  0E00               	movlw	0
  4815  001486  6E19               	movwf	___awdiv@quotient^0,c
  4816  001488  5015               	movf	___awdiv@divisor^0,w,c
  4817  00148A  1016               	iorwf	(___awdiv@divisor+1)^0,w,c
  4818  00148C  B4D8               	btfsc	status,2,c
  4819  00148E  EF4B  F00A         	goto	u2061
  4820  001492  EF4D  F00A         	goto	u2060
  4821  001496                     u2061:
  4822  001496  EF75  F00A         	goto	l2163
  4823  00149A                     u2060:
  4824  00149A  0E01               	movlw	1
  4825  00149C  6E17               	movwf	___awdiv@counter^0,c
  4826  00149E  EF55  F00A         	goto	l2149
  4827  0014A2                     l2147:
  4828  0014A2  90D8               	bcf	status,0,c
  4829  0014A4  3615               	rlcf	___awdiv@divisor^0,f,c
  4830  0014A6  3616               	rlcf	(___awdiv@divisor+1)^0,f,c
  4831  0014A8  2A17               	incf	___awdiv@counter^0,f,c
  4832  0014AA                     l2149:
  4833  0014AA  AE16               	btfss	(___awdiv@divisor+1)^0,7,c
  4834  0014AC  EF5A  F00A         	goto	u2071
  4835  0014B0  EF5C  F00A         	goto	u2070
  4836  0014B4                     u2071:
  4837  0014B4  EF51  F00A         	goto	l2147
  4838  0014B8                     u2070:
  4839  0014B8                     l2151:
  4840  0014B8  90D8               	bcf	status,0,c
  4841  0014BA  3619               	rlcf	___awdiv@quotient^0,f,c
  4842  0014BC  361A               	rlcf	(___awdiv@quotient+1)^0,f,c
  4843  0014BE  5015               	movf	___awdiv@divisor^0,w,c
  4844  0014C0  5C13               	subwf	___awdiv@dividend^0,w,c
  4845  0014C2  5016               	movf	(___awdiv@divisor+1)^0,w,c
  4846  0014C4  5814               	subwfb	(___awdiv@dividend+1)^0,w,c
  4847  0014C6  A0D8               	btfss	status,0,c
  4848  0014C8  EF68  F00A         	goto	u2081
  4849  0014CC  EF6A  F00A         	goto	u2080
  4850  0014D0                     u2081:
  4851  0014D0  EF6F  F00A         	goto	l2159
  4852  0014D4                     u2080:
  4853  0014D4  5015               	movf	___awdiv@divisor^0,w,c
  4854  0014D6  5E13               	subwf	___awdiv@dividend^0,f,c
  4855  0014D8  5016               	movf	(___awdiv@divisor+1)^0,w,c
  4856  0014DA  5A14               	subwfb	(___awdiv@dividend+1)^0,f,c
  4857  0014DC  8019               	bsf	___awdiv@quotient^0,0,c
  4858  0014DE                     l2159:
  4859  0014DE  90D8               	bcf	status,0,c
  4860  0014E0  3216               	rrcf	(___awdiv@divisor+1)^0,f,c
  4861  0014E2  3215               	rrcf	___awdiv@divisor^0,f,c
  4862  0014E4  2E17               	decfsz	___awdiv@counter^0,f,c
  4863  0014E6  EF5C  F00A         	goto	l2151
  4864  0014EA                     l2163:
  4865  0014EA  5018               	movf	___awdiv@sign^0,w,c
  4866  0014EC  B4D8               	btfsc	status,2,c
  4867  0014EE  EF7B  F00A         	goto	u2091
  4868  0014F2  EF7D  F00A         	goto	u2090
  4869  0014F6                     u2091:
  4870  0014F6  EF81  F00A         	goto	l2167
  4871  0014FA                     u2090:
  4872  0014FA  6C19               	negf	___awdiv@quotient^0,c
  4873  0014FC  1E1A               	comf	(___awdiv@quotient+1)^0,f,c
  4874  0014FE  B0D8               	btfsc	status,0,c
  4875  001500  2A1A               	incf	(___awdiv@quotient+1)^0,f,c
  4876  001502                     l2167:
  4877  001502  C019  F013         	movff	___awdiv@quotient,?___awdiv
  4878  001506  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  4879  00150A  0012               	return		;funcret
  4880  00150C                     __end_of___awdiv:
  4881                           	callstack 0
  4882                           
  4883 ;; *************** function _adcRead *****************
  4884 ;; Defined at:
  4885 ;;		line 38 in file "adc.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  channel         2    0[COMRAM] unsigned int 
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;  ADvalor         2    2[COMRAM] unsigned int 
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  2    0[COMRAM] int 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4899 ;;      Params:         2       0       0       0       0       0       0
  4900 ;;      Locals:         2       0       0       0       0       0       0
  4901 ;;      Temps:          0       0       0       0       0       0       0
  4902 ;;      Totals:         4       0       0       0       0       0       0
  4903 ;;Total ram usage:        4 bytes
  4904 ;; Hardware stack levels used: 1
  4905 ;; This function calls:
  4906 ;;		Nothing
  4907 ;; This function is called by:
  4908 ;;		_main
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text38
  4913  001944                     __ptext38:
  4914                           	callstack 0
  4915  001944                     _adcRead:
  4916                           	callstack 30
  4917  001944                     
  4918                           ;adc.c: 39:     unsigned int ADvalor;;adc.c: 40:     ADCON0 &= 0b11000011;
  4919  001944  0EC3               	movlw	195
  4920  001946  16C2               	andwf	194,f,c	;volatile
  4921                           
  4922                           ;adc.c: 41:     if (channel < 3) {
  4923  001948  5002               	movf	(adcRead@channel+1)^0,w,c
  4924  00194A  E107               	bnz	u2131
  4925  00194C  0E03               	movlw	3
  4926  00194E  5C01               	subwf	adcRead@channel^0,w,c
  4927  001950  B0D8               	btfsc	status,0,c
  4928  001952  EFAD  F00C         	goto	u2131
  4929  001956  EFAF  F00C         	goto	u2130
  4930  00195A                     u2131:
  4931  00195A  EFB3  F00C         	goto	l2217
  4932  00195E                     u2130:
  4933  00195E                     
  4934                           ;adc.c: 42:         ADCON0 |= channel << 2;
  4935  00195E  4401               	rlncf	adcRead@channel^0,w,c	;volatile
  4936  001960  46E8               	rlncf	wreg,f,c
  4937  001962  0BFC               	andlw	252
  4938  001964  12C2               	iorwf	194,f,c	;volatile
  4939  001966                     l2217:
  4940                           
  4941                           ;adc.c: 45:     ADCON0 |= 0b00000010;
  4942  001966  82C2               	bsf	194,1,c	;volatile
  4943  001968                     l89:
  4944  001968  B2C2               	btfsc	194,1,c	;volatile
  4945  00196A  EFB9  F00C         	goto	u2141
  4946  00196E  EFBB  F00C         	goto	u2140
  4947  001972                     u2141:
  4948  001972  EFB4  F00C         	goto	l89
  4949  001976                     u2140:
  4950  001976                     
  4951                           ;adc.c: 49:     ADvalor = ADRESH;
  4952  001976  CFC4 F003          	movff	4036,adcRead@ADvalor	;volatile
  4953  00197A  6A04               	clrf	(adcRead@ADvalor+1)^0,c
  4954  00197C                     
  4955                           ;adc.c: 50:     ADvalor <<= 8;
  4956  00197C  5003               	movf	adcRead@ADvalor^0,w,c
  4957  00197E  6E04               	movwf	(adcRead@ADvalor+1)^0,c
  4958  001980  6A03               	clrf	adcRead@ADvalor^0,c
  4959  001982                     
  4960                           ;adc.c: 51:     ADvalor += ADRESL;
  4961  001982  50C3               	movf	195,w,c	;volatile
  4962  001984  2603               	addwf	adcRead@ADvalor^0,f,c
  4963  001986  0E00               	movlw	0
  4964  001988  2204               	addwfc	(adcRead@ADvalor+1)^0,f,c
  4965  00198A                     
  4966                           ;adc.c: 52:     return ADvalor;
  4967  00198A  C003  F001         	movff	adcRead@ADvalor,?_adcRead
  4968  00198E  C004  F002         	movff	adcRead@ADvalor+1,?_adcRead+1
  4969  001992  0012               	return		;funcret
  4970  001994                     __end_of_adcRead:
  4971                           	callstack 0
  4972                           
  4973 ;; *************** function _adcInit *****************
  4974 ;; Defined at:
  4975 ;;		line 25 in file "adc.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;		None
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;		None
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  1    wreg      void 
  4982 ;; Registers used:
  4983 ;;		wreg, status,2, status,0, cstack
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4989 ;;      Params:         0       0       0       0       0       0       0
  4990 ;;      Locals:         0       0       0       0       0       0       0
  4991 ;;      Temps:          0       0       0       0       0       0       0
  4992 ;;      Totals:         0       0       0       0       0       0       0
  4993 ;;Total ram usage:        0 bytes
  4994 ;; Hardware stack levels used: 1
  4995 ;; Hardware stack levels required when called: 1
  4996 ;; This function calls:
  4997 ;;		_pinMode
  4998 ;; This function is called by:
  4999 ;;		_main
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           	psect	text39
  5004  0019E2                     __ptext39:
  5005                           	callstack 0
  5006  0019E2                     _adcInit:
  5007                           	callstack 29
  5008  0019E2                     
  5009                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  5010  0019E2  0E00               	movlw	0
  5011  0019E4  6E02               	movwf	(pinMode@pin+1)^0,c
  5012  0019E6  0E00               	movlw	0
  5013  0019E8  6E01               	movwf	pinMode@pin^0,c
  5014  0019EA  0E00               	movlw	0
  5015  0019EC  6E04               	movwf	(pinMode@type+1)^0,c
  5016  0019EE  0E01               	movlw	1
  5017  0019F0  6E03               	movwf	pinMode@type^0,c
  5018  0019F2  ECAD  F007         	call	_pinMode	;wreg free
  5019                           
  5020                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  5021  0019F6  0E00               	movlw	0
  5022  0019F8  6E02               	movwf	(pinMode@pin+1)^0,c
  5023  0019FA  0E01               	movlw	1
  5024  0019FC  6E01               	movwf	pinMode@pin^0,c
  5025  0019FE  0E00               	movlw	0
  5026  001A00  6E04               	movwf	(pinMode@type+1)^0,c
  5027  001A02  0E01               	movlw	1
  5028  001A04  6E03               	movwf	pinMode@type^0,c
  5029  001A06  ECAD  F007         	call	_pinMode	;wreg free
  5030                           
  5031                           ;adc.c: 29:     pinMode(PIN_A2, 1);
  5032  001A0A  0E00               	movlw	0
  5033  001A0C  6E02               	movwf	(pinMode@pin+1)^0,c
  5034  001A0E  0E02               	movlw	2
  5035  001A10  6E01               	movwf	pinMode@pin^0,c
  5036  001A12  0E00               	movlw	0
  5037  001A14  6E04               	movwf	(pinMode@type+1)^0,c
  5038  001A16  0E01               	movlw	1
  5039  001A18  6E03               	movwf	pinMode@type^0,c
  5040  001A1A  ECAD  F007         	call	_pinMode	;wreg free
  5041  001A1E                     
  5042                           ;adc.c: 31:     ((ADCON0) |= (1<<(0)));
  5043  001A1E  80C2               	bsf	194,0,c	;volatile
  5044  001A20                     
  5045                           ;adc.c: 33:     ADCON1 = 0b00001100;
  5046  001A20  0E0C               	movlw	12
  5047  001A22  6EC1               	movwf	193,c	;volatile
  5048  001A24                     
  5049                           ;adc.c: 34:     ADCON2 = 0b10101010;
  5050  001A24  0EAA               	movlw	170
  5051  001A26  6EC0               	movwf	192,c	;volatile
  5052  001A28  0012               	return		;funcret
  5053  001A2A                     __end_of_adcInit:
  5054                           	callstack 0
  5055                           
  5056 ;; *************** function _pinMode *****************
  5057 ;; Defined at:
  5058 ;;		line 54 in file "io.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  pin             2    0[COMRAM] int 
  5061 ;;  type            2    2[COMRAM] int 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5073 ;;      Params:         4       0       0       0       0       0       0
  5074 ;;      Locals:         0       0       0       0       0       0       0
  5075 ;;      Temps:          2       0       0       0       0       0       0
  5076 ;;      Totals:         6       0       0       0       0       0       0
  5077 ;;Total ram usage:        6 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_adcInit
  5083 ;;		_kpInit
  5084 ;;		_lcdInit
  5085 ;;		_rgbInit
  5086 ;;		_read_SCL
  5087 ;;		_read_SDA
  5088 ;;		_clear_SCL
  5089 ;;		_clear_SDA
  5090 ;;		_soInit
  5091 ;;		_i2cInit
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text40
  5096  000F5A                     __ptext40:
  5097                           	callstack 0
  5098  000F5A                     _pinMode:
  5099                           	callstack 29
  5100  000F5A                     
  5101                           ;io.c: 56:     if(pin <8){
  5102  000F5A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5103  000F5C  EFBB  F007         	goto	u1540
  5104  000F60  5002               	movf	(pinMode@pin+1)^0,w,c
  5105  000F62  E107               	bnz	u1541
  5106  000F64  0E08               	movlw	8
  5107  000F66  5C01               	subwf	pinMode@pin^0,w,c
  5108  000F68  B0D8               	btfsc	status,0,c
  5109  000F6A  EFB9  F007         	goto	u1541
  5110  000F6E  EFBB  F007         	goto	u1540
  5111  000F72                     u1541:
  5112  000F72  EFE5  F007         	goto	l1875
  5113  000F76                     u1540:
  5114  000F76                     
  5115                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  5116  000F76  5003               	movf	pinMode@type^0,w,c
  5117  000F78  1004               	iorwf	(pinMode@type+1)^0,w,c
  5118  000F7A  B4D8               	btfsc	status,2,c
  5119  000F7C  EFC2  F007         	goto	u1551
  5120  000F80  EFC4  F007         	goto	u1550
  5121  000F84                     u1551:
  5122  000F84  EFD4  F007         	goto	l1873
  5123  000F88                     u1550:
  5124  000F88  C001  F005         	movff	pinMode@pin,??_pinMode
  5125  000F8C  0E01               	movlw	1
  5126  000F8E  6E06               	movwf	(??_pinMode+1)^0,c
  5127  000F90  2A05               	incf	??_pinMode^0,f,c
  5128  000F92  EFCD  F007         	goto	u1564
  5129  000F96                     u1565:
  5130  000F96  90D8               	bcf	status,0,c
  5131  000F98  3606               	rlcf	(??_pinMode+1)^0,f,c
  5132  000F9A                     u1564:
  5133  000F9A  2E05               	decfsz	??_pinMode^0,f,c
  5134  000F9C  EFCB  F007         	goto	u1565
  5135  000FA0  5006               	movf	(??_pinMode+1)^0,w,c
  5136  000FA2  1292               	iorwf	146,f,c	;volatile
  5137  000FA4  EFD3  F008         	goto	l387
  5138  000FA8                     l1873:
  5139  000FA8  C001  F005         	movff	pinMode@pin,??_pinMode
  5140  000FAC  0E01               	movlw	1
  5141  000FAE  6E06               	movwf	(??_pinMode+1)^0,c
  5142  000FB0  2A05               	incf	??_pinMode^0,f,c
  5143  000FB2  EFDD  F007         	goto	u1574
  5144  000FB6                     u1575:
  5145  000FB6  90D8               	bcf	status,0,c
  5146  000FB8  3606               	rlcf	(??_pinMode+1)^0,f,c
  5147  000FBA                     u1574:
  5148  000FBA  2E05               	decfsz	??_pinMode^0,f,c
  5149  000FBC  EFDB  F007         	goto	u1575
  5150  000FC0  5006               	movf	(??_pinMode+1)^0,w,c
  5151  000FC2  0AFF               	xorlw	255
  5152  000FC4  1692               	andwf	146,f,c	;volatile
  5153  000FC6  EFD3  F008         	goto	l387
  5154  000FCA                     l1875:
  5155  000FCA  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5156  000FCC  EFF3  F007         	goto	u1580
  5157  000FD0  5002               	movf	(pinMode@pin+1)^0,w,c
  5158  000FD2  E107               	bnz	u1581
  5159  000FD4  0E10               	movlw	16
  5160  000FD6  5C01               	subwf	pinMode@pin^0,w,c
  5161  000FD8  B0D8               	btfsc	status,0,c
  5162  000FDA  EFF1  F007         	goto	u1581
  5163  000FDE  EFF3  F007         	goto	u1580
  5164  000FE2                     u1581:
  5165  000FE2  EF21  F008         	goto	l1883
  5166  000FE6                     u1580:
  5167  000FE6                     
  5168                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  5169  000FE6  5003               	movf	pinMode@type^0,w,c
  5170  000FE8  1004               	iorwf	(pinMode@type+1)^0,w,c
  5171  000FEA  B4D8               	btfsc	status,2,c
  5172  000FEC  EFFA  F007         	goto	u1591
  5173  000FF0  EFFC  F007         	goto	u1590
  5174  000FF4                     u1591:
  5175  000FF4  EF0E  F008         	goto	l1881
  5176  000FF8                     u1590:
  5177  000FF8  C001  F005         	movff	pinMode@pin,??_pinMode
  5178  000FFC  0EF8               	movlw	-8
  5179  000FFE  2605               	addwf	??_pinMode^0,f,c
  5180  001000  0E01               	movlw	1
  5181  001002  6E06               	movwf	(??_pinMode+1)^0,c
  5182  001004  2A05               	incf	??_pinMode^0,f,c
  5183  001006  EF07  F008         	goto	u1604
  5184  00100A                     u1605:
  5185  00100A  90D8               	bcf	status,0,c
  5186  00100C  3606               	rlcf	(??_pinMode+1)^0,f,c
  5187  00100E                     u1604:
  5188  00100E  2E05               	decfsz	??_pinMode^0,f,c
  5189  001010  EF05  F008         	goto	u1605
  5190  001014  5006               	movf	(??_pinMode+1)^0,w,c
  5191  001016  1293               	iorwf	147,f,c	;volatile
  5192  001018  EFD3  F008         	goto	l387
  5193  00101C                     l1881:
  5194  00101C  C001  F005         	movff	pinMode@pin,??_pinMode
  5195  001020  0EF8               	movlw	-8
  5196  001022  2605               	addwf	??_pinMode^0,f,c
  5197  001024  0E01               	movlw	1
  5198  001026  6E06               	movwf	(??_pinMode+1)^0,c
  5199  001028  2A05               	incf	??_pinMode^0,f,c
  5200  00102A  EF19  F008         	goto	u1614
  5201  00102E                     u1615:
  5202  00102E  90D8               	bcf	status,0,c
  5203  001030  3606               	rlcf	(??_pinMode+1)^0,f,c
  5204  001032                     u1614:
  5205  001032  2E05               	decfsz	??_pinMode^0,f,c
  5206  001034  EF17  F008         	goto	u1615
  5207  001038  5006               	movf	(??_pinMode+1)^0,w,c
  5208  00103A  0AFF               	xorlw	255
  5209  00103C  1693               	andwf	147,f,c	;volatile
  5210  00103E  EFD3  F008         	goto	l387
  5211  001042                     l1883:
  5212  001042  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5213  001044  EF2F  F008         	goto	u1620
  5214  001048  5002               	movf	(pinMode@pin+1)^0,w,c
  5215  00104A  E107               	bnz	u1621
  5216  00104C  0E18               	movlw	24
  5217  00104E  5C01               	subwf	pinMode@pin^0,w,c
  5218  001050  B0D8               	btfsc	status,0,c
  5219  001052  EF2D  F008         	goto	u1621
  5220  001056  EF2F  F008         	goto	u1620
  5221  00105A                     u1621:
  5222  00105A  EF5D  F008         	goto	l1891
  5223  00105E                     u1620:
  5224  00105E                     
  5225                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  5226  00105E  5003               	movf	pinMode@type^0,w,c
  5227  001060  1004               	iorwf	(pinMode@type+1)^0,w,c
  5228  001062  B4D8               	btfsc	status,2,c
  5229  001064  EF36  F008         	goto	u1631
  5230  001068  EF38  F008         	goto	u1630
  5231  00106C                     u1631:
  5232  00106C  EF4A  F008         	goto	l1889
  5233  001070                     u1630:
  5234  001070  C001  F005         	movff	pinMode@pin,??_pinMode
  5235  001074  0EF0               	movlw	-16
  5236  001076  2605               	addwf	??_pinMode^0,f,c
  5237  001078  0E01               	movlw	1
  5238  00107A  6E06               	movwf	(??_pinMode+1)^0,c
  5239  00107C  2A05               	incf	??_pinMode^0,f,c
  5240  00107E  EF43  F008         	goto	u1644
  5241  001082                     u1645:
  5242  001082  90D8               	bcf	status,0,c
  5243  001084  3606               	rlcf	(??_pinMode+1)^0,f,c
  5244  001086                     u1644:
  5245  001086  2E05               	decfsz	??_pinMode^0,f,c
  5246  001088  EF41  F008         	goto	u1645
  5247  00108C  5006               	movf	(??_pinMode+1)^0,w,c
  5248  00108E  1294               	iorwf	148,f,c	;volatile
  5249  001090  EFD3  F008         	goto	l387
  5250  001094                     l1889:
  5251  001094  C001  F005         	movff	pinMode@pin,??_pinMode
  5252  001098  0EF0               	movlw	-16
  5253  00109A  2605               	addwf	??_pinMode^0,f,c
  5254  00109C  0E01               	movlw	1
  5255  00109E  6E06               	movwf	(??_pinMode+1)^0,c
  5256  0010A0  2A05               	incf	??_pinMode^0,f,c
  5257  0010A2  EF55  F008         	goto	u1654
  5258  0010A6                     u1655:
  5259  0010A6  90D8               	bcf	status,0,c
  5260  0010A8  3606               	rlcf	(??_pinMode+1)^0,f,c
  5261  0010AA                     u1654:
  5262  0010AA  2E05               	decfsz	??_pinMode^0,f,c
  5263  0010AC  EF53  F008         	goto	u1655
  5264  0010B0  5006               	movf	(??_pinMode+1)^0,w,c
  5265  0010B2  0AFF               	xorlw	255
  5266  0010B4  1694               	andwf	148,f,c	;volatile
  5267  0010B6  EFD3  F008         	goto	l387
  5268  0010BA                     l1891:
  5269  0010BA  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5270  0010BC  EF6B  F008         	goto	u1660
  5271  0010C0  5002               	movf	(pinMode@pin+1)^0,w,c
  5272  0010C2  E107               	bnz	u1661
  5273  0010C4  0E20               	movlw	32
  5274  0010C6  5C01               	subwf	pinMode@pin^0,w,c
  5275  0010C8  B0D8               	btfsc	status,0,c
  5276  0010CA  EF69  F008         	goto	u1661
  5277  0010CE  EF6B  F008         	goto	u1660
  5278  0010D2                     u1661:
  5279  0010D2  EF99  F008         	goto	l1899
  5280  0010D6                     u1660:
  5281  0010D6                     
  5282                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  5283  0010D6  5003               	movf	pinMode@type^0,w,c
  5284  0010D8  1004               	iorwf	(pinMode@type+1)^0,w,c
  5285  0010DA  B4D8               	btfsc	status,2,c
  5286  0010DC  EF72  F008         	goto	u1671
  5287  0010E0  EF74  F008         	goto	u1670
  5288  0010E4                     u1671:
  5289  0010E4  EF86  F008         	goto	l1897
  5290  0010E8                     u1670:
  5291  0010E8  C001  F005         	movff	pinMode@pin,??_pinMode
  5292  0010EC  0EE8               	movlw	-24
  5293  0010EE  2605               	addwf	??_pinMode^0,f,c
  5294  0010F0  0E01               	movlw	1
  5295  0010F2  6E06               	movwf	(??_pinMode+1)^0,c
  5296  0010F4  2A05               	incf	??_pinMode^0,f,c
  5297  0010F6  EF7F  F008         	goto	u1684
  5298  0010FA                     u1685:
  5299  0010FA  90D8               	bcf	status,0,c
  5300  0010FC  3606               	rlcf	(??_pinMode+1)^0,f,c
  5301  0010FE                     u1684:
  5302  0010FE  2E05               	decfsz	??_pinMode^0,f,c
  5303  001100  EF7D  F008         	goto	u1685
  5304  001104  5006               	movf	(??_pinMode+1)^0,w,c
  5305  001106  1295               	iorwf	149,f,c	;volatile
  5306  001108  EFD3  F008         	goto	l387
  5307  00110C                     l1897:
  5308  00110C  C001  F005         	movff	pinMode@pin,??_pinMode
  5309  001110  0EE8               	movlw	-24
  5310  001112  2605               	addwf	??_pinMode^0,f,c
  5311  001114  0E01               	movlw	1
  5312  001116  6E06               	movwf	(??_pinMode+1)^0,c
  5313  001118  2A05               	incf	??_pinMode^0,f,c
  5314  00111A  EF91  F008         	goto	u1694
  5315  00111E                     u1695:
  5316  00111E  90D8               	bcf	status,0,c
  5317  001120  3606               	rlcf	(??_pinMode+1)^0,f,c
  5318  001122                     u1694:
  5319  001122  2E05               	decfsz	??_pinMode^0,f,c
  5320  001124  EF8F  F008         	goto	u1695
  5321  001128  5006               	movf	(??_pinMode+1)^0,w,c
  5322  00112A  0AFF               	xorlw	255
  5323  00112C  1695               	andwf	149,f,c	;volatile
  5324  00112E  EFD3  F008         	goto	l387
  5325  001132                     l1899:
  5326  001132  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5327  001134  EFA7  F008         	goto	u1700
  5328  001138  5002               	movf	(pinMode@pin+1)^0,w,c
  5329  00113A  E107               	bnz	u1701
  5330  00113C  0E28               	movlw	40
  5331  00113E  5C01               	subwf	pinMode@pin^0,w,c
  5332  001140  B0D8               	btfsc	status,0,c
  5333  001142  EFA5  F008         	goto	u1701
  5334  001146  EFA7  F008         	goto	u1700
  5335  00114A                     u1701:
  5336  00114A  EFD3  F008         	goto	l387
  5337  00114E                     u1700:
  5338  00114E                     
  5339                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  5340  00114E  5003               	movf	pinMode@type^0,w,c
  5341  001150  1004               	iorwf	(pinMode@type+1)^0,w,c
  5342  001152  B4D8               	btfsc	status,2,c
  5343  001154  EFAE  F008         	goto	u1711
  5344  001158  EFB0  F008         	goto	u1710
  5345  00115C                     u1711:
  5346  00115C  EFC2  F008         	goto	l1905
  5347  001160                     u1710:
  5348  001160  C001  F005         	movff	pinMode@pin,??_pinMode
  5349  001164  0EE0               	movlw	-32
  5350  001166  2605               	addwf	??_pinMode^0,f,c
  5351  001168  0E01               	movlw	1
  5352  00116A  6E06               	movwf	(??_pinMode+1)^0,c
  5353  00116C  2A05               	incf	??_pinMode^0,f,c
  5354  00116E  EFBB  F008         	goto	u1724
  5355  001172                     u1725:
  5356  001172  90D8               	bcf	status,0,c
  5357  001174  3606               	rlcf	(??_pinMode+1)^0,f,c
  5358  001176                     u1724:
  5359  001176  2E05               	decfsz	??_pinMode^0,f,c
  5360  001178  EFB9  F008         	goto	u1725
  5361  00117C  5006               	movf	(??_pinMode+1)^0,w,c
  5362  00117E  1296               	iorwf	150,f,c	;volatile
  5363  001180  EFD3  F008         	goto	l387
  5364  001184                     l1905:
  5365  001184  C001  F005         	movff	pinMode@pin,??_pinMode
  5366  001188  0EE0               	movlw	-32
  5367  00118A  2605               	addwf	??_pinMode^0,f,c
  5368  00118C  0E01               	movlw	1
  5369  00118E  6E06               	movwf	(??_pinMode+1)^0,c
  5370  001190  2A05               	incf	??_pinMode^0,f,c
  5371  001192  EFCD  F008         	goto	u1734
  5372  001196                     u1735:
  5373  001196  90D8               	bcf	status,0,c
  5374  001198  3606               	rlcf	(??_pinMode+1)^0,f,c
  5375  00119A                     u1734:
  5376  00119A  2E05               	decfsz	??_pinMode^0,f,c
  5377  00119C  EFCB  F008         	goto	u1735
  5378  0011A0  5006               	movf	(??_pinMode+1)^0,w,c
  5379  0011A2  0AFF               	xorlw	255
  5380  0011A4  1696               	andwf	150,f,c	;volatile
  5381  0011A6                     l387:
  5382  0011A6  0012               	return		;funcret
  5383  0011A8                     __end_of_pinMode:
  5384                           	callstack 0
  5385                           
  5386 ;; *************** function ___awmod *****************
  5387 ;; Defined at:
  5388 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;  dividend        2   36[COMRAM] int 
  5391 ;;  divisor         2   38[COMRAM] int 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;  sign            1   41[COMRAM] unsigned char 
  5394 ;;  counter         1   40[COMRAM] unsigned char 
  5395 ;; Return value:  Size  Location     Type
  5396 ;;                  2   36[COMRAM] int 
  5397 ;; Registers used:
  5398 ;;		wreg, status,2, status,0
  5399 ;; Tracked objects:
  5400 ;;		On entry : 0/0
  5401 ;;		On exit  : 0/0
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5404 ;;      Params:         4       0       0       0       0       0       0
  5405 ;;      Locals:         2       0       0       0       0       0       0
  5406 ;;      Temps:          0       0       0       0       0       0       0
  5407 ;;      Totals:         6       0       0       0       0       0       0
  5408 ;;Total ram usage:        6 bytes
  5409 ;; Hardware stack levels used: 1
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_main
  5414 ;;		_lcdNumber
  5415 ;;		_dec2bcd
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text41
  5420  001670                     __ptext41:
  5421                           	callstack 0
  5422  001670                     ___awmod:
  5423                           	callstack 30
  5424  001670  0E00               	movlw	0
  5425  001672  6E2A               	movwf	___awmod@sign^0,c
  5426  001674  BE26               	btfsc	(___awmod@dividend+1)^0,7,c
  5427  001676  EF41  F00B         	goto	u2290
  5428  00167A  EF3F  F00B         	goto	u2291
  5429  00167E                     u2291:
  5430  00167E  EF47  F00B         	goto	l2309
  5431  001682                     u2290:
  5432  001682  6C25               	negf	___awmod@dividend^0,c
  5433  001684  1E26               	comf	(___awmod@dividend+1)^0,f,c
  5434  001686  B0D8               	btfsc	status,0,c
  5435  001688  2A26               	incf	(___awmod@dividend+1)^0,f,c
  5436  00168A  0E01               	movlw	1
  5437  00168C  6E2A               	movwf	___awmod@sign^0,c
  5438  00168E                     l2309:
  5439  00168E  BE28               	btfsc	(___awmod@divisor+1)^0,7,c
  5440  001690  EF4E  F00B         	goto	u2300
  5441  001694  EF4C  F00B         	goto	u2301
  5442  001698                     u2301:
  5443  001698  EF52  F00B         	goto	l2313
  5444  00169C                     u2300:
  5445  00169C  6C27               	negf	___awmod@divisor^0,c
  5446  00169E  1E28               	comf	(___awmod@divisor+1)^0,f,c
  5447  0016A0  B0D8               	btfsc	status,0,c
  5448  0016A2  2A28               	incf	(___awmod@divisor+1)^0,f,c
  5449  0016A4                     l2313:
  5450  0016A4  5027               	movf	___awmod@divisor^0,w,c
  5451  0016A6  1028               	iorwf	(___awmod@divisor+1)^0,w,c
  5452  0016A8  B4D8               	btfsc	status,2,c
  5453  0016AA  EF59  F00B         	goto	u2311
  5454  0016AE  EF5B  F00B         	goto	u2310
  5455  0016B2                     u2311:
  5456  0016B2  EF7F  F00B         	goto	l2329
  5457  0016B6                     u2310:
  5458  0016B6  0E01               	movlw	1
  5459  0016B8  6E29               	movwf	___awmod@counter^0,c
  5460  0016BA  EF63  F00B         	goto	l2319
  5461  0016BE                     l2317:
  5462  0016BE  90D8               	bcf	status,0,c
  5463  0016C0  3627               	rlcf	___awmod@divisor^0,f,c
  5464  0016C2  3628               	rlcf	(___awmod@divisor+1)^0,f,c
  5465  0016C4  2A29               	incf	___awmod@counter^0,f,c
  5466  0016C6                     l2319:
  5467  0016C6  AE28               	btfss	(___awmod@divisor+1)^0,7,c
  5468  0016C8  EF68  F00B         	goto	u2321
  5469  0016CC  EF6A  F00B         	goto	u2320
  5470  0016D0                     u2321:
  5471  0016D0  EF5F  F00B         	goto	l2317
  5472  0016D4                     u2320:
  5473  0016D4                     l2321:
  5474  0016D4  5027               	movf	___awmod@divisor^0,w,c
  5475  0016D6  5C25               	subwf	___awmod@dividend^0,w,c
  5476  0016D8  5028               	movf	(___awmod@divisor+1)^0,w,c
  5477  0016DA  5826               	subwfb	(___awmod@dividend+1)^0,w,c
  5478  0016DC  A0D8               	btfss	status,0,c
  5479  0016DE  EF73  F00B         	goto	u2331
  5480  0016E2  EF75  F00B         	goto	u2330
  5481  0016E6                     u2331:
  5482  0016E6  EF79  F00B         	goto	l2325
  5483  0016EA                     u2330:
  5484  0016EA  5027               	movf	___awmod@divisor^0,w,c
  5485  0016EC  5E25               	subwf	___awmod@dividend^0,f,c
  5486  0016EE  5028               	movf	(___awmod@divisor+1)^0,w,c
  5487  0016F0  5A26               	subwfb	(___awmod@dividend+1)^0,f,c
  5488  0016F2                     l2325:
  5489  0016F2  90D8               	bcf	status,0,c
  5490  0016F4  3228               	rrcf	(___awmod@divisor+1)^0,f,c
  5491  0016F6  3227               	rrcf	___awmod@divisor^0,f,c
  5492  0016F8  2E29               	decfsz	___awmod@counter^0,f,c
  5493  0016FA  EF6A  F00B         	goto	l2321
  5494  0016FE                     l2329:
  5495  0016FE  502A               	movf	___awmod@sign^0,w,c
  5496  001700  B4D8               	btfsc	status,2,c
  5497  001702  EF85  F00B         	goto	u2341
  5498  001706  EF87  F00B         	goto	u2340
  5499  00170A                     u2341:
  5500  00170A  EF8B  F00B         	goto	l2333
  5501  00170E                     u2340:
  5502  00170E  6C25               	negf	___awmod@dividend^0,c
  5503  001710  1E26               	comf	(___awmod@dividend+1)^0,f,c
  5504  001712  B0D8               	btfsc	status,0,c
  5505  001714  2A26               	incf	(___awmod@dividend+1)^0,f,c
  5506  001716                     l2333:
  5507  001716  C025  F025         	movff	___awmod@dividend,?___awmod
  5508  00171A  C026  F026         	movff	___awmod@dividend+1,?___awmod+1
  5509  00171E  0012               	return		;funcret
  5510  001720                     __end_of___awmod:
  5511                           	callstack 0
  5512                           
  5513                           	psect	rparam
  5514  0000                     
  5515                           	psect	idloc
  5516                           
  5517                           ;Config register IDLOC0 @ 0x200000
  5518                           ;	unspecified, using default values
  5519  200000                     	org	2097152
  5520  200000  FF                 	db	255
  5521                           
  5522                           ;Config register IDLOC1 @ 0x200001
  5523                           ;	unspecified, using default values
  5524  200001                     	org	2097153
  5525  200001  FF                 	db	255
  5526                           
  5527                           ;Config register IDLOC2 @ 0x200002
  5528                           ;	unspecified, using default values
  5529  200002                     	org	2097154
  5530  200002  FF                 	db	255
  5531                           
  5532                           ;Config register IDLOC3 @ 0x200003
  5533                           ;	unspecified, using default values
  5534  200003                     	org	2097155
  5535  200003  FF                 	db	255
  5536                           
  5537                           ;Config register IDLOC4 @ 0x200004
  5538                           ;	unspecified, using default values
  5539  200004                     	org	2097156
  5540  200004  FF                 	db	255
  5541                           
  5542                           ;Config register IDLOC5 @ 0x200005
  5543                           ;	unspecified, using default values
  5544  200005                     	org	2097157
  5545  200005  FF                 	db	255
  5546                           
  5547                           ;Config register IDLOC6 @ 0x200006
  5548                           ;	unspecified, using default values
  5549  200006                     	org	2097158
  5550  200006  FF                 	db	255
  5551                           
  5552                           ;Config register IDLOC7 @ 0x200007
  5553                           ;	unspecified, using default values
  5554  200007                     	org	2097159
  5555  200007  FF                 	db	255
  5556                           
  5557                           	psect	config
  5558                           
  5559                           ; Padding undefined space
  5560  300000                     	org	3145728
  5561  300000  FF                 	db	255
  5562                           
  5563                           ;Config register CONFIG1H @ 0x300001
  5564                           ;	unspecified, using default values
  5565                           ;	Oscillator Selection bits
  5566                           ;	OSC = 0x7, unprogrammed default
  5567                           ;	Fail-Safe Clock Monitor Enable bit
  5568                           ;	FCMEN = 0x0, unprogrammed default
  5569                           ;	Internal/External Oscillator Switchover bit
  5570                           ;	IESO = 0x0, unprogrammed default
  5571  300001                     	org	3145729
  5572  300001  07                 	db	7
  5573                           
  5574                           ;Config register CONFIG2L @ 0x300002
  5575                           ;	unspecified, using default values
  5576                           ;	Power-up Timer Enable bit
  5577                           ;	PWRT = 0x1, unprogrammed default
  5578                           ;	Brown-out Reset Enable bits
  5579                           ;	BOREN = 0x3, unprogrammed default
  5580                           ;	Brown Out Reset Voltage bits
  5581                           ;	BORV = 0x3, unprogrammed default
  5582  300002                     	org	3145730
  5583  300002  1F                 	db	31
  5584                           
  5585                           ;Config register CONFIG2H @ 0x300003
  5586                           ;	unspecified, using default values
  5587                           ;	Watchdog Timer Enable bit
  5588                           ;	WDT = 0x1, unprogrammed default
  5589                           ;	Watchdog Timer Postscale Select bits
  5590                           ;	WDTPS = 0xF, unprogrammed default
  5591  300003                     	org	3145731
  5592  300003  1F                 	db	31
  5593                           
  5594                           ; Padding undefined space
  5595  300004                     	org	3145732
  5596  300004  FF                 	db	255
  5597                           
  5598                           ;Config register CONFIG3H @ 0x300005
  5599                           ;	unspecified, using default values
  5600                           ;	CCP2 MUX bit
  5601                           ;	CCP2MX = 0x1, unprogrammed default
  5602                           ;	PORTB A/D Enable bit
  5603                           ;	PBADEN = 0x1, unprogrammed default
  5604                           ;	Low-Power Timer1 Oscillator Enable bit
  5605                           ;	LPT1OSC = 0x0, unprogrammed default
  5606                           ;	MCLR Pin Enable bit
  5607                           ;	MCLRE = 0x1, unprogrammed default
  5608  300005                     	org	3145733
  5609  300005  83                 	db	131
  5610                           
  5611                           ;Config register CONFIG4L @ 0x300006
  5612                           ;	unspecified, using default values
  5613                           ;	Stack Full/Underflow Reset Enable bit
  5614                           ;	STVREN = 0x1, unprogrammed default
  5615                           ;	Single-Supply ICSP Enable bit
  5616                           ;	LVP = 0x1, unprogrammed default
  5617                           ;	Extended Instruction Set Enable bit
  5618                           ;	XINST = 0x0, unprogrammed default
  5619                           ;	Background Debugger Enable bit
  5620                           ;	DEBUG = 0x1, unprogrammed default
  5621  300006                     	org	3145734
  5622  300006  85                 	db	133
  5623                           
  5624                           ; Padding undefined space
  5625  300007                     	org	3145735
  5626  300007  FF                 	db	255
  5627                           
  5628                           ;Config register CONFIG5L @ 0x300008
  5629                           ;	unspecified, using default values
  5630                           ;	Code Protection bit
  5631                           ;	CP0 = 0x1, unprogrammed default
  5632                           ;	Code Protection bit
  5633                           ;	CP1 = 0x1, unprogrammed default
  5634                           ;	Code Protection bit
  5635                           ;	CP2 = 0x1, unprogrammed default
  5636                           ;	Code Protection bit
  5637                           ;	CP3 = 0x1, unprogrammed default
  5638  300008                     	org	3145736
  5639  300008  0F                 	db	15
  5640                           
  5641                           ;Config register CONFIG5H @ 0x300009
  5642                           ;	unspecified, using default values
  5643                           ;	Boot Block Code Protection bit
  5644                           ;	CPB = 0x1, unprogrammed default
  5645                           ;	Data EEPROM Code Protection bit
  5646                           ;	CPD = 0x1, unprogrammed default
  5647  300009                     	org	3145737
  5648  300009  C0                 	db	192
  5649                           
  5650                           ;Config register CONFIG6L @ 0x30000A
  5651                           ;	unspecified, using default values
  5652                           ;	Write Protection bit
  5653                           ;	WRT0 = 0x1, unprogrammed default
  5654                           ;	Write Protection bit
  5655                           ;	WRT1 = 0x1, unprogrammed default
  5656                           ;	Write Protection bit
  5657                           ;	WRT2 = 0x1, unprogrammed default
  5658                           ;	Write Protection bit
  5659                           ;	WRT3 = 0x1, unprogrammed default
  5660  30000A                     	org	3145738
  5661  30000A  0F                 	db	15
  5662                           
  5663                           ;Config register CONFIG6H @ 0x30000B
  5664                           ;	unspecified, using default values
  5665                           ;	Configuration Register Write Protection bit
  5666                           ;	WRTC = 0x1, unprogrammed default
  5667                           ;	Boot Block Write Protection bit
  5668                           ;	WRTB = 0x1, unprogrammed default
  5669                           ;	Data EEPROM Write Protection bit
  5670                           ;	WRTD = 0x1, unprogrammed default
  5671  30000B                     	org	3145739
  5672  30000B  E0                 	db	224
  5673                           
  5674                           ;Config register CONFIG7L @ 0x30000C
  5675                           ;	unspecified, using default values
  5676                           ;	Table Read Protection bit
  5677                           ;	EBTR0 = 0x1, unprogrammed default
  5678                           ;	Table Read Protection bit
  5679                           ;	EBTR1 = 0x1, unprogrammed default
  5680                           ;	Table Read Protection bit
  5681                           ;	EBTR2 = 0x1, unprogrammed default
  5682                           ;	Table Read Protection bit
  5683                           ;	EBTR3 = 0x1, unprogrammed default
  5684  30000C                     	org	3145740
  5685  30000C  0F                 	db	15
  5686                           
  5687                           ;Config register CONFIG7H @ 0x30000D
  5688                           ;	unspecified, using default values
  5689                           ;	Boot Block Table Read Protection bit
  5690                           ;	EBTRB = 0x1, unprogrammed default
  5691  30000D                     	org	3145741
  5692  30000D  40                 	db	64
  5693                           tosu	equ	0xFFF
  5694                           tosh	equ	0xFFE
  5695                           tosl	equ	0xFFD
  5696                           stkptr	equ	0xFFC
  5697                           pclatu	equ	0xFFB
  5698                           pclath	equ	0xFFA
  5699                           pcl	equ	0xFF9
  5700                           tblptru	equ	0xFF8
  5701                           tblptrh	equ	0xFF7
  5702                           tblptrl	equ	0xFF6
  5703                           tablat	equ	0xFF5
  5704                           prodh	equ	0xFF4
  5705                           prodl	equ	0xFF3
  5706                           indf0	equ	0xFEF
  5707                           postinc0	equ	0xFEE
  5708                           postdec0	equ	0xFED
  5709                           preinc0	equ	0xFEC
  5710                           plusw0	equ	0xFEB
  5711                           fsr0h	equ	0xFEA
  5712                           fsr0l	equ	0xFE9
  5713                           wreg	equ	0xFE8
  5714                           indf1	equ	0xFE7
  5715                           postinc1	equ	0xFE6
  5716                           postdec1	equ	0xFE5
  5717                           preinc1	equ	0xFE4
  5718                           plusw1	equ	0xFE3
  5719                           fsr1h	equ	0xFE2
  5720                           fsr1l	equ	0xFE1
  5721                           bsr	equ	0xFE0
  5722                           indf2	equ	0xFDF
  5723                           postinc2	equ	0xFDE
  5724                           postdec2	equ	0xFDD
  5725                           preinc2	equ	0xFDC
  5726                           plusw2	equ	0xFDB
  5727                           fsr2h	equ	0xFDA
  5728                           fsr2l	equ	0xFD9
  5729                           status	equ	0xFD8

Data Sizes:
    Strings     39
    Constant    26
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     57      65
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 9
		 -> STR_6(CODE[5]), STR_5(CODE[4]), STR_4(CODE[8]), STR_3(CODE[6]), 
		 -> STR_2(CODE[7]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->___awmod
    _turnOn->_digitalWrite
    _rgbInit->_pinMode
    _rgbColor->_digitalWrite
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _lcdPosition->_lcdCommand
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _dsReadData->_i2cReadByte
    _i2cWriteByte->_i2c_read_bit
    _i2cWriteByte->_i2c_write_bit
    _i2cReadByte->_i2c_read_bit
    _i2cReadByte->_i2c_write_bit
    _clear_SDA->_digitalWrite
    _clear_SDA->_pinMode
    _read_SDA->_pinMode
    _read_SCL->_pinMode
    _clear_SCL->_digitalWrite
    _clear_SCL->_pinMode
    _bcd2dec->___wmul
    ___wmul->___awdiv
    ___awdiv->_dsReadData
    _adcInit->_pinMode
    ___awmod->_bcd2dec

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0  298468
                                             42 COMRAM    15    15      0
                            ___awdiv
                            ___awmod
                            _adcInit
                            _adcRead
                            _bcd2dec
                         _dsReadData
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcdChar
                            _lcdInit
                        _lcdPosition
                          _lcdString
                           _rgbColor
                            _rgbInit
                             _turnOn
 ---------------------------------------------------------------------------------
 (1) _turnOn                                               2     0      2    4386
                                              6 COMRAM     2     0      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _rgbInit                                              0     0      0    3328
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _rgbColor                                             2     0      2    4538
                                              6 COMRAM     2     0      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdString                                            6     4      2   23161
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0   22615
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          4     0      4   23433
                                             14 COMRAM     4     0      4
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   52292
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   22321
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   22585
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   22213
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    4624
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    6656
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    3328
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   13741
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _soWrite                                              3     1      2   13105
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _PulseEnClock                                         0     0      0    4244
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _PulseClockData                                       0     0      0    4244
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _dsReadData                                           5     3      2  131451
                                             13 COMRAM     5     3      2
                        _i2cReadByte
                       _i2cWriteByte
 ---------------------------------------------------------------------------------
 (2) _i2cWriteByte                                         5     3      2   77347
                                              7 COMRAM     4     2      2
                       _i2c_read_bit
                          _i2c_start
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0   22848
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (2) _i2cReadByte                                          6     5      1   53679
                                              7 COMRAM     6     5      1
                       _i2c_read_bit
                           _i2c_stop
                      _i2c_write_bit
 ---------------------------------------------------------------------------------
 (3) _i2c_write_bit                                        1     1      0   22892
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0   15276
                          _I2C_delay
                          _clear_SDA
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (4) _clear_SDA                                            0     0      0    7572
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _i2c_read_bit                                         1     1      0   15299
                                              6 COMRAM     1     1      0
                          _I2C_delay
                          _clear_SCL
                           _read_SCL
                           _read_SDA
 ---------------------------------------------------------------------------------
 (4) _read_SDA                                             0     0      0    3852
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (4) _read_SCL                                             0     0      0    3852
                        _digitalRead
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     524
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _clear_SCL                                            0     0      0    7572
                       _digitalWrite
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         6     2      4    4244
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2C_delay                                            4     4      0       0
 ---------------------------------------------------------------------------------
 (1) _bcd2dec                                              4     2      2    3391
                                             32 COMRAM     4     2      2
                            ___awdiv
                             ___wmul
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                             26 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    2732
                                             18 COMRAM     8     4      4
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              4     2      2     145
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    3328
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    3328
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    2272
                                             36 COMRAM     6     2      4
                            ___awdiv (ARG)
                            _bcd2dec (ARG)
                         _dsReadData (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     _dsReadData (ARG)
       _i2cReadByte
         _i2c_read_bit
           _I2C_delay
           _clear_SCL
             _digitalWrite
             _pinMode
           _read_SCL
             _digitalRead
             _pinMode
           _read_SDA
             _digitalRead
             _pinMode
         _i2c_stop
           _I2C_delay
           _clear_SDA
             _digitalWrite
             _pinMode
           _read_SCL
           _read_SDA
         _i2c_write_bit
           _I2C_delay
           _clear_SCL
           _clear_SDA
           _read_SCL
           _read_SDA
       _i2cWriteByte
         _i2c_read_bit
         _i2c_start
           _I2C_delay
           _clear_SCL
           _clear_SDA
           _read_SCL
           _read_SDA
         _i2c_stop
         _i2c_write_bit
   ___awmod
     ___awdiv (ARG)
     _bcd2dec (ARG)
       ___awdiv
       ___wmul
         ___awdiv (ARG)
       _dsReadData (ARG)
     _dsReadData (ARG)
   _adcInit
     _pinMode
   _adcRead
   _bcd2dec
   _dsReadData
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpRead
   _lcdChar
     _delayMicro
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
       _delayMili
       _pushByte
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdPosition
     _lcdCommand
   _lcdString
     _lcdChar
   _rgbColor
     _digitalWrite
   _rgbInit
     _pinMode
   _turnOn
     _digitalWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     39      41       1       51.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      41      15        0.0%
DATA                 0      0      41       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 14 16:31:52 2021

         _pulseEnablePin 1AB6             lcdString@msg 000F                       l46 0818  
                     l91 1976                       l92 1992                       l85 1A28  
                     l89 1968             ___awdiv@sign 0018       __size_of_I2C_delay 0002  
    ___wmul@multiplicand 001D            ??_i2cReadByte 0009   __size_of_i2c_write_bit 0058  
  i2cWriteByte@send_stop 0008           i2cReadByte@bit 000B                      l131 1446  
                    l109 1E70                      l205 1786                      l230 1B38  
                    l134 1C90                      l214 1B76                      l311 1942  
                    l151 1CF2                      l400 1D74                      l160 1840  
                    l305 17E6                      l129 142E                      l145 1E72  
                    l242 1A6E                      l154 1AF6                      l163 1E50  
                    l171 1E32                      l260 1C26                      l405 19E0  
                    l157 1DEE                      l254 1E74                      l263 1DC8  
                    l408 1E14                      l168 1BEE                      l353 0F58  
                    l257 1C5E                      l177 18EE                      l362 130C  
                    l266 1D9E                      l186 15BE                      l283 1D20  
                    l292 1898                      l276 1AB4                      l357 1310  
                    l358 130C                      l199 166E                      l298 1CC2  
                    l394 1BB4                      l387 11A6                      l652 171E  
                    l397 1D4A                      l639 150A             ___awmod@sign 002A  
                    wreg 000FE8         i2c_write_bit@bit 0007            ?_i2cWriteByte 0008  
 i2cWriteByte@send_start 000A          i2cReadByte@nack 000A          i2cReadByte@byte 000D  
                   l2001 1A9C                     l2011 1AB0                     l2003 1AA0  
                   l2021 1D14                     l2013 1CF4                     l2005 1AA4  
                   l2023 1D18                     l2015 1CF8                     l2031 185C  
                   l2111 1926                     l2007 1AA8                     l2121 1DF0  
                   l2025 1D1C                     l2017 1CFC                     l2041 188C  
                   l2033 1860                     l2113 192C                     l2105 18FE  
                   l2009 1AAC                     l2201 1720                     l2131 145A  
                   l2123 1E0C                     l2051 1C9A                     l2019 1D10  
                   l2043 1890                     l2035 1864                     l2027 1844  
                   l2115 193C                     l2107 190C                     l2211 1772  
                   l2203 172E                     l2301 1670                     l2221 1982  
                   l2213 1944                     l2141 1480                     l2133 1462  
                   l2053 1CAE                     l2045 1894                     l2037 1878  
                   l2029 1854                     l2117 1940                     l2109 1910  
                   l2205 1742                     l2311 169C                     l2303 1674  
                   l2223 198A                     l2215 195E                     l2151 14B8  
                   l2143 1488                     l2135 1466                     l2127 1448  
                   l2055 1CB4                     l2047 1C92                     l2039 1888  
                   l2071 1E36                     l2063 1E18                     l2231 15E6  
                   l2207 1750                     l2321 16D4                     l2313 16A4  
                   l2305 1682                     l2217 1966                     l2161 14E4  
                   l2153 14BE                     l2145 149A                     l2137 1474  
                   l2129 144C                     l2057 1CB8                     l2049 1C96  
                   l2073 178A                     l2065 1E26                     l2241 1642  
                   l2233 15FA                     l2209 1764                     l2401 086A  
                   l2331 170E                     l2323 16EA                     l2315 16B6  
                   l2307 168A                     l2219 197C                     l2155 14D4  
                   l2147 14A2                     l2163 14EA                     l2139 147C  
                   l2059 1CC0                     l2091 17CE                     l2083 17A2  
                   l2075 179A                     l2251 1342                     l2067 1B78  
                   l2243 165A                     l2235 1608                     l2227 15C0  
                   l2171 1B3A                     l2411 0890                     l2403 086C  
                   l2333 1716                     l2325 16F2                     l2317 16BE  
                   l2309 168E                     l2181 1A20                     l2165 14FA  
                   l2157 14DC                     l2149 14AA                     l2093 17D2  
                   l2085 17B8                     l2077 179E                     l2253 138E  
                   l2245 1312                     l2173 1C60                     l2069 1DCC  
                   l2237 1620                     l2229 15CE                     l2421 08B8  
                   l2413 0894                     l2405 0870                     l2341 0658  
                   l2327 16F8                     l2319 16C6                     l2183 1A24  
                   l2167 1502                     l2159 14DE                     l2095 17E2  
                   l2087 17BC                     l2271 143E                     l2255 13B4  
                   l2263 1404                     l2247 1322                     l2175 1C8C  
                   l2191 1592                     l2239 1634                     l2511 0CCA  
                   l2503 0C86                     l2431 08EC                     l2423 08C6  
                   l2415 08A2                     l2407 087E                     l2351 0684  
                   l2343 065C                     l2329 16FE                     l2177 19E2  
                   l2089 17BE                     l2265 141C                     l2257 13D2  
                   l2273 1E68                     l2193 15A0                     l2185 150C  
                   l2281 1BE4                     l2505 0CB8                     l2441 0922  
                   l2433 08FE                     l2425 08D8                     l2417 08B2  
                   l2409 088E                     l2361 06F8                     l2353 06A0  
                   l2345 0660                     l2337 0644                     l2179 1A1E  
                   l2099 18F2                     l2283 1A2A                     l2267 1422  
                   l2259 13FC                     l2195 15AC                     l2187 156C  
                   l2275 1BB6                     l2507 0CC2                     l2451 0952  
                   l2515 0CDE                     l2443 0924                     l2435 0900  
                   l2427 08DA                     l2419 08B4                     l2371 0750  
                   l2363 0704                     l2355 06B0                     l2347 0664  
                   l2339 0654                     l1901 114E                     l2285 1A66  
                   l2269 1426                     l2197 15B2                     l2189 1578  
                   l2277 1BC8                     l2293 189A                     l2509 0CC8  
                   l2461 0A60                     l2453 0972                     l2437 0904  
                   l2429 08DE                     l2445 0928                     l2381 07C6  
                   l2373 0762                     l2365 0714                     l2357 06CC  
                   l2349 0670                     l1903 1160                     l1831 0D3A  
                   l2199 15B8                     l2279 1BD2                     l2295 18A6  
                   l2471 0AA8                     l2463 0A74                     l2455 09D6  
                   l2447 092A                     l2439 0912                     l2383 07E6  
                   l2375 0782                     l2367 0720                     l2359 06DC  
                   l1905 1184                     l2289 1AF8                     l1841 0DD2  
                   l1833 0D5A                     l2297 18C2                     l2481 0B48  
                   l2473 0AD8                     l2465 0A80                     l2457 09DC  
                   l2449 093E                     l2393 081C                     l2385 07F8  
                   l2377 0794                     l2369 0730                     l1851 0E6C  
                   l1843 0DF4                     l1835 0D7C                     l1827 0D0C  
                   l1931 127C                     l1923 1234                     l1915 11EC  
                   l1907 11A8                     l2299 18C6                     l2491 0C26  
                   l2483 0B54                     l2475 0B08                     l2467 0A88  
                   l2459 0A2C                     l2395 0842                     l2379 07B4  
                   l2387 0818                     l1861 0F00                     l1853 0E88  
                   l1845 0E10                     l1837 0D98                     l1829 0D28  
                   l1941 12E0                     l1933 1298                     l1925 1250  
                   l1917 1208                     l1909 11C4                     l2557 0CF2  
                   l2493 0C62                     l2485 0B98                     l2477 0B24  
                   l2469 0A9C                     l2397 084A                     l1871 0F88  
                   l1863 0F1A                     l1855 0EA2                     l1847 0E2A  
                   l1839 0DB2                     l1951 19A8                     l2495 0C76  
                   l2487 0BDC                     l2479 0B34                     l2399 0858  
                   l1881 101C                     l1873 0FA8                     l1865 0F3A  
                   l1857 0EC2                     l1849 0E4A                     l1945 1D22  
                   l1961 19CA                     l2497 0C82                     l2489 0C20  
                   l1891 10BA                     l1883 1042                     l1875 0FCA  
                   l1867 0F5A                     l1859 0EE4                     l1939 12C4  
                   l1947 1D4C                     l1963 19CC                     l1971 1AD6  
                   l1893 10D6                     l1885 105E                     l1877 0FE6  
                   l1869 0F76                     l1981 1DA0                     l1973 1C28  
                   l1965 19DC                     l1957 19AC                     l1949 1994  
                   l1895 10E8                     l1887 1070                     l1879 0FF8  
                   l1983 1D76                     l1959 19C4                     l1967 1AB6  
                   l1991 17EA                     l1897 110C                     l1889 1094  
                   l1977 1BF0                     l1993 1A70                     l1985 1CC4  
                   l1969 1ACA                     l1899 1132                     l1995 1A80  
                   l1987 1CD0                     l1997 1A84                     l1989 1CD4  
                   l1999 1A88                     STR_1 061B                     STR_2 062C  
                   STR_3 0633                     STR_4 0624                     STR_5 063E  
                   STR_6 0639                     u2000 17CE                     u2001 17CA  
                   u2010 17E2                     u2011 17DE                     u2020 1926  
                   u2100 172E                     u2021 1922                     u2101 172A  
                   u2030 193C                     u2110 1750                     u2031 1938  
                   u2111 174C                     u2040 145A                     u2200 138E  
                   u2120 1772                     u2041 1456                     u2201 138A  
                   u2121 176E                     u2130 195E                     u2050 1474  
                   u2131 195A                     u2051 1470                     u2300 169C  
                   u2140 1976                     u2060 149A                     u1500 0F00  
                   u1420 0E10                     u1404 0DC4                     u1340 0D28  
                   u2220 13D2                     u2301 1698                     u2141 1972  
                   u2061 1496                     u1501 0EFC                     u1421 0E0C  
                   u1405 0DC0                     u1341 0D24                     u2221 13CE  
                   u2310 16B6                     u2070 14B8                     u1510 0F1A  
                   u1430 0E2A                     u1414 0DE4                     u1350 0D3A  
                   u2214 13A6                     u2150 15CE                     u2311 16B2  
                   u2071 14B4                     u1511 0F16                     u1431 0E26  
                   u1415 0DE0                     u1351 0D36                     u2215 13A0  
                   u2151 15CA                     u2320 16D4                     u2080 14D4  
                   u2240 141C                     u2160 1608                     u2400 0762  
                   u2321 16D0                     u2081 14D0                     u2241 1418  
                   u2161 1604                     u2401 075E                     u2330 16EA  
                   u2090 14FA                     u2250 143E                     u2234 13EE  
                   u2170 1642                     u2410 0794                     u2331 16E6  
                   u2091 14F6                     u2251 143A                     u2235 13E8  
                   u2171 163E                     u2411 0790                     u2340 170E  
                   u1700 114E                     u1620 105E                     u1604 100E  
                   u1540 0F76                     u1524 0F2C                     u1460 0E88  
                   u1444 0E3C                     u1380 0D98                     u1364 0D4C  
                   u2180 133E                     u2260 1BC8                     u2500 08B2  
                   u2420 07C6                     u2341 170A                     u1701 114A  
                   u1621 105A                     u1605 100A                     u1541 0F72  
                   u1525 0F28                     u1461 0E84                     u1445 0E38  
                   u1381 0D94                     u1365 0D48                     u2181 133A  
                   u2261 1BC4                     u2501 08AE                     u2421 07C2  
                   u1710 1160                     u1630 1070                     u1614 1032  
                   u1550 0F88                     u1534 0F4C                     u1470 0EA2  
                   u1454 0E5C                     u1390 0DB2                     u1374 0D6C  
                   u2270 1BE4                     u2510 08C6                     u2430 07F8  
                   u2350 06A0                     u1711 115C                     u1631 106C  
                   u1615 102E                     u1551 0F84                     u1535 0F48  
                   u1471 0E9E                     u1455 0E58                     u1391 0DAE  
                   u1375 0D68                     u2271 1BE0                     u2511 08C2  
                   u2431 07F4                     u2351 069C                     u1800 1298  
                   u2280 18EE                     u2520 08D8                     u2440 0842  
                   u2360 06CC                     u1801 1294                     u2281 18EA  
                   u2521 08D4                     u2441 083E                     u2361 06C8  
                   u2290 1682                     u2194 135E                     u2530 08EC  
                   u2450 0858                     u2370 06F8                     u2291 167E  
                   u2195 1358                     u2531 08E8                     u2451 0854  
                   u2371 06F4                     u1724 1176                     u1660 10D6  
                   u1644 1086                     u1580 0FE6                     u1564 0F9A  
                   u1484 0EB4                     u1820 12E0                     u1740 11C4  
                   u1900 1A80                     u2540 08FE                     u2460 086A  
                   u2380 0714                     u1725 1172                     u1661 10D2  
                   u1645 1082                     u1581 0FE2                     u1565 0F96  
                   u1485 0EB0                     u1821 12DC                     u1741 11C0  
                   u1901 1A7C                     u2541 08FA                     u2461 0866  
                   u2381 0710                     u1734 119A                     u1670 10E8  
                   u1654 10AA                     u1590 0FF8                     u1574 0FBA  
                   u1494 0ED4                     u1814 12AE                     u1910 1A9C  
                   u2550 0912                     u2470 087E                     u2390 0730  
                   u1735 1196                     u1671 10E4                     u1655 10A6  
                   u1591 0FF4                     u1575 0FB6                     u1495 0ED0  
                   u1815 12AA                     u1911 1A98                     u2551 090E  
                   u2471 087A                     u2391 072C                     u1760 1208  
                   u1920 1D10                     u1840 19DC                     u2560 0922  
                   u2480 088E                     u1761 1204                     u1921 1D0C  
                   u1841 19D8                     u2561 091E                     u2481 088A  
                   u1834 12F6                     u1754 11D6                     u1850 1C5C  
                   u1930 1854                     u2570 093A                     u2490 08A2  
                   u1835 12F2                     u1755 11D2                     u1851 1C56  
                   u1931 1850                     u2571 0936                     u2491 089E  
                   u1684 10FE                     u1780 1250                     u1860 1C5E  
                   u1940 1878                     u2580 0CB8                     u1685 10FA  
                   u1781 124C                     u1941 1874                     u2581 0CB4  
                   u1694 1122                     u1774 121E                     u1870 1C24  
                   u1950 1888                     u2590 0CDA                     u1695 111E  
                   u1775 121A                     u1871 1C1E                     u1951 1884  
                   u2591 0CD6                     u1880 1C26                     u1960 1CAE  
                   u1961 1CAA                     u1794 1266                     u1970 179A  
                   u1890 1CF2                     u1795 1262                     u1971 1796  
                   u1891 1CEE                     u1980 17B2                     u1981 17AC  
                   u1990 17B4                     _main 0644                     _keys 003E  
       ??_PulseClockData 0007            ?_i2c_read_bit 0001                     prodh 000FF4  
                   prodl 000FF3                     start 0000          pushNibble@value 000C  
           ___param_bank 000000   __end_of_pulseEnablePin 1AF8          __end_of_bcd2dec 1B3A  
                  ?_main 0001          __end_of_adcInit 1A2A          __end_of_adcRead 1994  
        __end_of___awdiv 150C          __end_of___awmod 1720          ___awdiv@divisor 0015  
        ___awdiv@counter 0017                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
        __end_of_charKey 061B                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcdChar 1E34          __end_of_lcdInit 15C0           ??_i2cWriteByte 000A  
    __end_of_i2cReadByte 1944          __end_of_rgbInit 1B78                    _radio 0601  
        __end_of_pinMode 11A8                    main@i 0034          __end_of_soWrite 19E2  
                  tablat 000FF5        __end_of_I2C_delay 1E76            _i2c_write_bit 1842  
                  status 000FD8           ??_i2c_read_bit 0007             pushNibble@rs 000A  
   __end_of_digitalWrite 0F5A          __initialization 1E52          ?_pulseEnablePin 0001  
           __end_of_main 0D0C          i2cWriteByte@bit 000B         __end_of_i2c_stop 1D22  
                 ??_main 002B            __activetblptr 000002     __size_of_digitalRead 016A  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3         ___awdiv@dividend 0013  
            rgbColor@led 0007           ?_i2c_write_bit 0001     __size_of_lcdPosition 003A  
     __size_of_i2c_start 0046                ??_bcd2dec 0023                   ___wmul 1DF0  
              ??_adcInit 0007                ??_adcRead 0003                ??___awdiv 0017  
              ??___awmod 0029                   _kpInit 1C60                   _kpRead 1E68  
       __end_of_rgbColor 1670         __end_of_read_SDA 1C28         __end_of_read_SCL 1C60  
                 clear_0 1E58                   _soInit 1B78         ___awdiv@quotient 0019  
        ___awmod@divisor 0027                ??_lcdChar 000E                   isa$std 000001  
            _i2cReadByte 18F0                ??_lcdInit 000F          ___awmod@counter 0029  
                 main@fm 0035                   _turnOn 1720                ??_rgbInit 0007  
              ??_pinMode 0005             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_soWrite 0009  
       __end_of_pushByte 1842               __accesstop 0080  __end_of__initialization 1E5E  
          ___rparam_used 000001            pushByte@value 000D              pinMode@type 0003  
   __end_of_i2cWriteByte 17E8           __pcstackCOMRAM 0001            __end_of_radio 0611  
       i2cWriteByte@byte 0009       __size_of_delayMili 0030       __size_of_clear_SDA 002A  
     __size_of_clear_SCL 002A        __end_of_i2c_start 1AB6     __end_of_i2c_read_bit 1CC4  
     __size_of_lcdString 0056          ??_i2c_write_bit 0007                ?_i2c_stop 0001  
  __size_of_digitalWrite 024E               _dsReadData 1A2A         dsReadData@result 0011  
             _delayMicro 1E72               _lcdCommand 1E34                  ?___wmul 001B  
                ?_kpInit 0001                  ?_kpRead 0001                  ?_soInit 0001  
             _kpDebounce 1312                  ?_turnOn 0007     i2cReadByte@send_stop 0008  
           _digitalWrite 0D0C        __end_of_delayMili 1CF4        __end_of_clear_SDA 1DA0  
      __end_of_clear_SCL 1DCA                ?_rgbColor 0007                ?_read_SDA 0001  
              ?_read_SCL 0001               ??_i2c_stop 0007         ??_pulseEnablePin 0007  
              _I2C_delay 1E74                  __Hparam 0000                  __Lparam 0000  
      __end_of_lcdString 18F0          kpDebounce@tempo 0041                  _bcd2dec 1AF8  
                _adcInit 19E2                  _adcRead 1944                  ___awdiv 1448  
                ___awmod 1670                ?_pushByte 000A          __size_of___wmul 0026  
           __psmallconst 0600          __size_of_kpInit 0032          __size_of_kpRead 000A  
                _charKey 0611                  __pcinit 1E52                  _lcdChar 1E16  
                __ramtop 0600          __size_of_soInit 003E                  _lcdInit 150C  
                __ptext0 0644                  __ptext1 1720                  __ptext2 1B3A  
                __ptext3 15C0                  __ptext4 189A                  __ptext5 1E16  
                __ptext6 1BB6                  __ptext7 150C                  __ptext8 1DCA  
                __ptext9 1E34          __size_of_turnOn 0068                  _rgbInit 1B3A  
                _pinMode 0F5A         ___awmod@dividend 0025               delayMili@a 0001  
             delayMili@i 0004                  _soWrite 1994                  _started 0040  
                main@vel 0038                  main@vol 0033     end_of_initialization 1E5E  
          ?_PulseEnClock 0001               ??_rgbColor 0009               ??_read_SDA 0007  
             ??_read_SCL 0007            __Lmediumconst 0000    __size_of_i2cWriteByte 0060  
            ?_dsReadData 000E           digitalRead@pin 0001              ?_delayMicro 0001  
             ?_I2C_delay 0001              ?_lcdCommand 0001                  postinc0 000FEE  
             ??_pushByte 000C    __size_of_i2c_read_bit 0032  __size_of_PulseClockData 002A  
          ??_digitalRead 0003              ?_kpDebounce 0001             ?_i2cReadByte 0008  
        i2c_read_bit@bit 0007               _pushNibble 1DCA               lcdString@i 0013  
           _i2cWriteByte 1788            ??_lcdPosition 0013           ??_PulseEnClock 0007  
             main@marcha 0037               main@painel 0032             _i2c_read_bit 1C92  
         adcRead@ADvalor 0003           __end_of___wmul 1E16           __end_of_kpInit 1C92  
         __end_of_kpRead 1E72           __end_of_soInit 1BB6      __size_of_dsReadData 0046  
         __end_of_turnOn 1788      __size_of_delayMicro 0002      start_initialization 1E52  
    __end_of_digitalRead 1312                _i2c_start 1A70      __size_of_lcdCommand 001E  
    __size_of_kpDebounce 0136      __end_of_lcdPosition 1BF0              ??_I2C_delay 0001  
      __size_of_i2c_stop 002E           adcRead@channel 0001        kpDebounce@oldRead 003A  
      kpDebounce@newRead 003C                 ??___wmul 001F                 ??_kpInit 0007  
               ??_kpRead 0003                 ??_soInit 0007                 ??_turnOn 0009  
      dsReadData@address 000E              __pbssCOMRAM 003A              ?_pushNibble 000A  
             pinMode@pin 0001               ?_i2c_start 0001    __end_of_i2c_write_bit 189A  
      __size_of_rgbColor 00B0        __size_of_read_SDA 0038        __size_of_read_SCL 0038  
              _delayMili 1CC4                _clear_SDA 1D76                _clear_SCL 1DA0  
              _main$1208 0030                 ?_bcd2dec 0021                 ?_adcInit 0001  
               ?_adcRead 0001                 ?___awdiv 0013                 ?___awmod 0025  
         _PulseClockData 1D4C     __end_of_PulseEnClock 1D4C                _lcdString 189A  
            _digitalRead 11A8                 ?_lcdChar 0001        __size_of_pushByte 005A  
               ?_lcdInit 0001              __smallconst 0600                 ?_rgbInit 0001  
   __size_of_i2cReadByte 0054                 ?_pinMode 0001                 ?_soWrite 0007  
            _lcdPosition 1BB6           ___wmul@product 001F             ??_dsReadData 0010  
           ??_delayMicro 0003               ?_delayMili 0001               ?_clear_SDA 0001  
             ?_clear_SCL 0001   __end_of_PulseClockData 1D76      __size_of_pushNibble 0026  
           ??_lcdCommand 000E               ?_lcdString 000F             ??_kpDebounce 000A  
      ___wmul@multiplier 001B          lcdCommand@value 000E                main@tecla 0036  
     __end_of_dsReadData 1A70       __end_of_delayMicro 1E74              ??_i2c_start 0007  
     __end_of_lcdCommand 1E52               pushByte@rs 000A             lcdChar@value 000E  
               _i2c_stop 1CF4       __end_of_kpDebounce 1448                 __Hrparam 0000  
               __Lrparam 0000          lcdPosition@line 000F          ?_PulseClockData 0001  
       __size_of_bcd2dec 0042         __size_of_adcInit 0048         __size_of_adcRead 0050  
       __size_of___awdiv 00C4         __size_of___awmod 00B0  __size_of_pulseEnablePin 0042  
       __size_of_lcdChar 001E         __size_of_lcdInit 00B4         __size_of_rgbInit 003E  
       __size_of_pinMode 024E                 __ptext10 17E8                 __ptext11 1AB6  
               __ptext20 1D4C                 __ptext12 1E72                 __ptext21 1A2A  
               __ptext13 1CC4                 __ptext30 1C28                 __ptext22 1788  
               __ptext14 1E68                 __ptext31 11A8                 __ptext23 1A70  
               __ptext15 1C60                 __ptext40 0F5A                 __ptext32 1DA0  
               __ptext24 18F0                 __ptext16 1B78                 __ptext41 1670  
               __ptext33 0D0C                 __ptext25 1842                 __ptext17 1312  
               __ptext34 1E74                 __ptext26 1CF4                 __ptext18 1994  
               __ptext35 1AF8                 __ptext27 1D76                 __ptext19 1D22  
               __ptext36 1DF0                 __ptext28 1C92                 __ptext37 1448  
               __ptext29 1BF0                 __ptext38 1944                 __ptext39 19E2  
       __size_of_soWrite 004E                 _rgbColor 15C0                 _read_SDA 1BF0  
               _read_SCL 1C28            __size_of_main 06C8              ??_delayMili 0003  
            ??_clear_SDA 0007              ??_clear_SCL 0007    __size_of_PulseEnClock 002A  
            delayMicro@a 0001                 isa$xinst 000000             soWrite@value 0007  
               _pushByte 17E8              ??_lcdString 0011             ??_pushNibble 000C  
         lcdPosition@col 0011            ?_digitalWrite 0001             _PulseEnClock 1D22  
      digitalWrite@value 0003                turnOn@led 0007                 soWrite@i 0009  
           bcd2dec@value 0021       __end_of_pushNibble 1DF0             ?_digitalRead 0001  
            kpDebounce@i 000D           ??_digitalWrite 0005             ?_lcdPosition 000F  
        digitalWrite@pin 0001  
